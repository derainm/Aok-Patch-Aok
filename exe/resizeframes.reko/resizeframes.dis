word32 fn00402A28(word32 eax, word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esp
fn00402A28_entry:
l00402A28:
	word32 dwLoc08_40 = ecx
	branch eax <= 0x00000000 l00402A4A
l00402A4A:
	dwLoc08_40 = 0x00000000
l00402A30:
	word32 esp_19
	word32 ecx_20
	word32 eax_21
	call Mem9[0x00428040:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx
		defs: eax:eax_21,ecx:ecx_20,esp:esp_19
	Mem25[esp_19:word32] = eax_21
	word24 eax_24_8_29 = SLICE(eax_21, word24, 8)
	branch Mem25[esp_19:word32] != 0x00000000 l00402A4F
l00402A4F:
	return dwLoc08_40
fn00402A28_exit:
l00402A41:
	fn00402B7C(SEQ(eax_24_8_29, 0x01), ecx_20, Mem25[esp_19 + -4:word32])


word32 fn00402A58(word32 eax, word32 ecx, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: eax ecx
// Trashed: SCZO eax ecx Top
// Preserved: ebx esp
fn00402A58_entry:
l00402A58:
	word32 ebx_11
	branch eax == 0x00000000 l00402A72
l00402A72:
	ebx_11 = 0x00000000
l00402A5D:
	word32 esp_14
	word32 eax_15
	call Mem6[0x00428044:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx
		defs: eax:eax_15,ecx:ecx_34,esp:esp_14
	word24 eax_24_8_23 = SLICE(eax_15, word24, 8)
	ebx_11 = eax_15
	branch eax_15 == 0x00000000 l00402A74
l00402A74:
	ecxOut = ecx
	return ebx_11
fn00402A58_exit:
l00402A69:
	fn00402B7C(SEQ(eax_24_8_23, 0x02), ecx, Mem6[esp_14 + -4:word32])


void fn00402A78(word32 eax, word32 edx, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut:
// Trashed: SCZO ecx Top
// Preserved: eax edx esp
fn00402A78_entry:
l00402A78:
	word32 esp_24
	word32 ecx_23
	word24 eax_24_8_65
	word32 ecx_6 = Mem0[eax:word32]
	branch ecx_6 == 0x00000000 l00402AB0
l00402AB0:
	branch edx == 0x00000000 l00402AC4
l00402AB4:
	word32 esp_17
	word32 eax_19
	call Mem15[0x00428040:word32] (retsize: 4;)
		uses: eax:edx,edx:edx,Stack +0004:eax
		defs: eax:eax_19,esp:esp_17
	ecx_23 = Mem15[esp_17:word32]
	esp_24 = esp_17 + 4
	eax_24_8_65 = SLICE(eax_19, word24, 8) (alias)
	branch eax_19 == 0x00000000 l00402AA9
l00402AC2:
	Mem29[ecx_23:word32] = eax_19
l00402AC4:
	return
l00402A7E:
	branch edx == 0x00000000 l00402A9A
l00402A9A:
	Mem33[eax:word32] = edx
	word32 ecx_36
	word32 eax_37
	call Mem33[0x00428044:word32] (retsize: 4;)
		uses: eax:ecx_6,edx:edx
		defs: eax:eax_37,ecx:ecx_36
	word24 eax_24_8_46 = SLICE(eax_37, word24, 8)
	branch eax_37 != 0x00000000 l00402A93
l00402A93:
	word32 eax_47 = SEQ(eax_24_8_46, 0x02)
l00402A95_thunk_fn00402B7C:
	fn00402B7C(eax_47, ecx_36, dwArg00)
l00402AA8:
	return
l00402A82:
	word32 eax_54
	call Mem50[0x00428048:word32] (retsize: 4;)
		uses: eax:ecx_6,edx:edx,Stack +0004:eax,Stack +0008:dwArg00
		defs: eax:eax_54
	ecx_23 = eax
	esp_24 = fp
	eax_24_8_65 = SLICE(eax_54, word24, 8) (alias)
	branch eax_54 == 0x00000000 l00402AA9
l00402AA9:
	word32 eax_68 = SEQ(eax_24_8_65, 0x01)
l00402AAB_thunk_fn00402B7C:
	fn00402B7C(eax_68, ecx_23, Mem72[esp_24:word32])
l00402A90:
	Mem73[eax:word32] = eax_54
	return
fn00402A78_exit:


void fn00402B24(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed:
// Preserved: esp
// Terminates process
fn00402B24_exit:
fn00402B24_entry:
l00402B24:
	Mem5[0x00428004:word32] = edx
	fn00404228(eax, ecx)


void fn00402B30(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed:
// Preserved: esp
// Terminates process
fn00402B30_exit:
fn00402B30_entry:
	word24 ecx_24_8 = SLICE(ecx, word24, 8)
	byte cl = SLICE(ecx, byte, 0)
l00402B30:
	byte bl_14 = SLICE(eax, byte, 0)
	word32 ebx_20 = SEQ(SLICE(eax, word24, 8), bl_14 & 0x7F)
	branch Mem9[0x0042B008:word32] == 0x00000000 l00402B4C
l00402B42:
	call Mem9[0x0042B008:word32] (retsize: 4;)
		uses: cl:cl,eax:ebx_20,ecx_24_8:ecx_24_8,edx:edx
l00402B4C:
	byte bl_27 = bl_14 & 0x7F
	word32 ecx_47 = ecx
	branch (bl_14 & 0x7F) != 0x00 l00402B5D
l00402B5D:
	branch (bl_14 & 0x7F) >u 0x18 l00402B6C
l00402B62:
	bl_27 = Mem9[(uint32) (uint8) (bl_14 & 0x7F) + 0x0042804C:byte]
l00402B50:
	word32 edx_75
	bl_27 = Mem9[fn004062BC(ecx_24_8, out ecx_47, out edx_75) + 0x00000004:byte] (alias)
l00402B6C:
	fn00402B24((uint32) (uint8) bl_27, ecx_47, edx)


void fn00402B7C(word32 eax, word32 ecx, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved: esp
// Terminates process
fn00402B7C_exit:
fn00402B7C_entry:
l00402B7C:
l00402B82_thunk_fn00402B30:
	fn00402B30(eax & 0x0000007F, ecx, dwArg00)


void fn00402B88(word32 ecx, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut:
// Trashed: SCZO Top
// Preserved: eax ecx edx esp
fn00402B88_entry:
	word24 ecx_24_8_13 = SLICE(ecx, word24, 8)
l00402B88:
	word32 ecx_41
	word32 edx_42
	branch Mem12[fn004062BC(ecx_24_8_13, out ecx_41, out edx_42) + 0x00000004:word32] != 0x00000000 l00402B9D
l00402B9D:
l00402B9F_thunk_fn00402B7C:
	fn00402B7C(0x00000000, ecx, dwArg00)
l00402B9C:
	return
fn00402B88_exit:


word32 fn00402BA8(word32 eax, word32 ecx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx_24_8:[0..23] fs:[0..15]
// LiveOut: ecx edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esp
fn00402BA8_entry:
l00402BA8:
	word32 ecx_12
	word32 edx_14
	Mem19[fn004062BC(ecx_24_8, out ecx_12, out edx_14) + 0x00000004:word32] = eax
	edxOut = edx_14
	return ecx_12
fn00402BA8_exit:


word32 fn00402C1C(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31]
// LiveOut: ecx
// Trashed: SCZDO eax ecx Top
// Preserved: edi esi esp
fn00402C1C_entry:
l00402C1C:
	word32 esi_11 = eax
	word32 edi_13 = edx
	branch edx >u eax l00402C3B
l00402C3B:
	word32 esi_18 = ecx - 0x00000004 + eax
	word32 edi_19 = ecx - 0x00000004 + edx
	ecx = ecx >> 0x00000002
	branch ecx >> 0x00000002 < 0x00000000 l00402C59
l00402C48:
l00402C49:
	branch ecx == 0x00000000 l00402C4B
l00402C4B:
	ecx = ecx & 0x00000003
	word32 esi_29 = esi_18 + 0x00000003
	word32 edi_31 = edi_19 + 0x00000003
l00402C56:
	branch ecx == 0x00000000 l00402C58
l00402C58:
l00402C56_1:
	Mem39[edi_31:byte] = Mem36[esi_29:byte]
	esi_29 = esi_29 + 0x00000001
	edi_31 = edi_31 + 0x00000001
	ecx = ecx - 0x00000001
l00402C49_1:
	Mem45[edi_19:word32] = Mem43[esi_18:word32]
	esi_18 = esi_18 - 0x00000004
	edi_19 = edi_19 - 0x00000004
	ecx = ecx - 0x00000001
l00402C28:
	branch edx == eax l00402C59
l00402C2A:
	ecx = ecx >> 0x00000002
	branch ecx >> 0x00000002 < 0x00000000 l00402C59
l00402C59:
	return ecx
l00402C2F:
	branch ecx == 0x00000000 l00402C31
l00402C31:
	word32 ecx_64 = ecx & 0x00000003
l00402C36:
	branch ecx_64 == 0x00000000 l00402C38
l00402C38:
	return ecx_64
fn00402C1C_exit:
l00402C36_1:
	Mem77[edi_13:byte] = Mem69[esi_11:byte]
	esi_11 = esi_11 + 0x00000001
	edi_13 = edi_13 + 0x00000001
	ecx_64 = ecx_64 - 0x00000001
l00402C2F_1:
	Mem85[edi_13:word32] = Mem82[esi_11:word32]
	esi_11 = esi_11 + 0x00000004
	edi_13 = edi_13 + 0x00000004
	ecx = ecx - 0x00000001


word32 fn00402C90(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esi esp
fn00402C90_entry:
l00402C90:
	word32 ecx_128
	word32 ebx_64
	word16 si_33 = SLICE(edx, word16, 0)
	word16 ax_14 = Mem9[eax + 0x00000004:word16]
	branch ax_14 <u 0xD7B0 l00402CA6
l00402CA0:
	branch ax_14 <=u 0xD7B3 l00402CAD
l00402CAD:
	branch ax_14 == 0xD7B0 l00402CBA
l00402CB3:
	ecx = fn00402FAC(eax, ecx, out edx)
l00402CBA:
	Mem35[eax + 0x00000004:word16] = si_33
	branch Mem35[eax + 0x00000048:byte] != 0x00 l00402CD1
l00402CC4:
	branch Mem35[eax + 0x00000018:word32] != 0x00000000 l00402CD1
l00402CCA:
	Mem40[eax + 0x00000018:word32] = 0x00402DA0
l00402CD1:
	word32 eax_60
	call Mem43[eax + 0x00000018:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_51,edx:edx_49
		defs: eax:eax_60,ecx:ecx_62
	ebx_64 = eax_60
l00402CA6:
	ebx_64 = 0x00000066
	ecx_128 = ecx (alias)
l00402CD8:
	word24 ecx_24_8_71 = SLICE(ecx_128, word24, 8)
	word32 ecx_100 = ecx_128
	branch ebx_64 == 0x00000000 l00402CE3
l00402CDC:
	word32 edx_131
	ecx_100 = fn00402BA8(ebx_64, ecx_24_8_71, out edx_131)
l00402CE3:
	return ecx_100
fn00402C90_exit:


word32 fn00402CE8(word32 eax, word32 ecx, word16 edx_16_16)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx_16_16:[0..15] fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00402CE8_entry:
l00402CE8:
	return fn00402C90(eax, ecx, SEQ(edx_16_16, 0xD7B2))
fn00402CE8_exit:


void fn00402F4C(word32 eax, word16 ecx_16_16, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx_16_16:[0..15] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esp
fn00402F4C_entry:
l00402F4C:
	word32 ecx_34
	word32 ebx_12
	word16 cx_8 = Mem6[eax + 0x00000004:word16]
	byte cl_78 = SLICE(cx_8 - 0xD7B1, byte, 0)
	word32 ecx_16 = SEQ(ecx_16_16, cx_8 - 0xD7B1)
	word24 ecx_24_8_48 = SEQ(ecx_16_16, SLICE(cx_8 - 0xD7B1, byte, 8))
	branch cx_8 == 0xD7B1 l00402F67
l00402F67:
	ebx_12 = 0x00000000
	ecx_34 = SEQ(ecx_24_8_48, cl_78) (alias)
l00402F58:
	word16 cx_18 = SLICE(ecx_16 - 0x00000001, word16, 0)
	word16 ecx_16_16_32 = SLICE(ecx_16 - 0x00000001, word16, 16)
	byte cl_80 = SLICE(cx_18 - 0x0002, byte, 0)
	word24 ecx_24_8_52 = SEQ(SLICE(ecx_16 - 0x00000001, word16, 16), SLICE(cx_18 - 0x0002, byte, 8))
	branch cx_18 >=u 0x0002 l00402F6B
l00402F6B:
	branch eax == 0x0042B21C l00402F79
l00402F72:
	branch eax != 0x0042B3E8 l00402F7D
l00402F7D:
	ebx_12 = 0x00000067
	ecx_34 = SEQ(ecx_24_8_52, cl_80) (alias)
l00402F79:
	ebx_12 = 0x00000000
	ecx_34 = SEQ(ecx_24_8_52, cl_80) (alias)
l00402F5F:
	word32 eax_35
	call edx (retsize: 4;)
		uses: eax:eax,ecx_16_16:ecx_16_16_32,edx:edx
		defs: eax:eax_35,ecx:ecx_34
	ebx_12 = eax_35
l00402F82:
	word24 ecx_24_8_45 = SLICE(ecx_34, word24, 8)
	branch ebx_12 == 0x00000000 l00402F8D
l00402F86:
	word32 edx_100
	fn00402BA8(ebx_12, ecx_24_8_45, out edx_100)
l00402F8D:
	return
fn00402F4C_exit:


void fn00402FA0(word32 eax, word16 ecx_16_16)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx_16_16:[0..15] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00402FA0_entry:
l00402FA0:
	fn00402F4C(eax, ecx_16_16, Mem0[eax + 0x00000020:word32])
	return
fn00402FA0_exit:


word32 fn00402FAC(word32 eax, word32 ecx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[8..31] fs:[0..15]
// LiveOut: ecx edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esi esp
fn00402FAC_entry:
	word24 ecx_24_8 = SLICE(ecx, word24, 8)
l00402FAC:
	word32 ecx_103
	word32 esi_12 = 0x00000000
	word16 ax_13 = Mem9[eax + 0x00000004:word16]
	branch ax_13 <u 0xD7B1 l00402FEB
l00402FBC:
	branch ax_13 >u 0xD7B3 l00402FEB
l00402FEB:
	ecx_103 = ecx (alias)
	branch eax == 0x0042B050 l00402FFD
l00402FF3:
	ecx_103 = fn00402BA8(0x00000067, ecx_24_8, out edx)
l00402FC2:
	branch (ax_13 & 0xD7B2) != 0xD7B2 l00402FD3
l00402FCC:
	word32 eax_38
	call Mem9[eax + 0x0000001C:word32] (retsize: 4;)
		uses: cl:cl_101,eax:eax,ecx_24_8:ecx_24_8,edx:edx_41
		defs: eax:eax_38,ecx:ecx_40,edx:edx_41
	byte cl_101 = SLICE(ecx, byte, 0)
	esi_12 = eax_38
l00402FD3:
	word24 ecx_24_8_51 = SLICE(ecx, word24, 8)
	word32 ecx_128 = ecx
	branch esi_12 != 0x00000000 l00402FDE
l00402FD7:
	word32 eax_57
	call Mem9[eax + 0x00000024:word32] (retsize: 4;)
		uses: cl:cl_102,eax:eax,ecx_24_8:ecx_24_8_51,edx:edx_60
		defs: eax:eax_57,ecx:ecx_59,edx:edx_60
	byte cl_102 = SLICE(ecx_128, byte, 0)
	esi_12 = eax_57
l00402FDE:
	word24 ecx_24_8_68 = SLICE(ecx_128, word24, 8)
	ecx_103 = ecx_128 (alias)
	branch esi_12 == 0x00000000 l00402FFD
l00402FE2:
	ecx_103 = fn00402BA8(esi_12, ecx_24_8_68, out edx)
l00402FFD:
	edxOut = edx
	return ecx_103
fn00402FAC_exit:


word32 fn00403020(word32 eax, word16 cx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..15] edx:[0..31]
// LiveOut: ecx
// Trashed: SCZO ecx Top
// Preserved: edi esp
fn00403020_entry:
	byte cl = SLICE(ecx, byte, 0)
l00403020:
	word32 edi_36 = eax
	word32 ecx_19 = edx >> 0x00000002
	word32 eax_49 = SEQ(ecx, SEQ(cl, cl))
	branch edx >> 0x00000002 < 0x00000000 l0040303D
l00403034:
	byte al_47 = SLICE(eax_49, byte, 0)
	branch ecx_19 == 0x00000000 l00403036
l00403036:
	ecx_19 = edx & 0x00000003
l0040303B:
	branch ecx_19 == 0x00000000 l0040303D
l0040303D:
	return ecx_19
fn00403020_exit:
l0040303B_1:
	Mem37[edi_36:byte] = al_47
	edi_36 = edi_36 + 0x00000001
	ecx_19 = ecx_19 - 0x00000001
l00403034_1:
	Mem42[edi_36:word32] = eax_49
	edi_36 = edi_36 + 0x00000004
	ecx_19 = ecx_19 - 0x00000001


void fn00403114(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[16..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: ebx esp
fn00403114_entry:
	word16 edx_16_16 = SLICE(edx, word16, 16)
l00403114:
	branch eax == 0x0042B21C l00403127
l0040311F:
	branch eax != 0x0042B3E8 l00403139
l00403127:
	Mem21[eax + 0x00000006:word16] = (uint16) (uint8) Mem6[0x00428034:byte]
	ecx = fn00402CE8(eax, ecx, edx_16_16)
l00403139:
	word24 ecx_24_8_52 = SLICE(ecx, word24, 8)
	branch Mem38[eax + 0x00000004:word16] == 0xD7B2 != 0x00 l00403152
l00403148:
	word32 edx_94
	fn00402BA8(0x00000069, ecx_24_8_52, out edx_94)
l00403152:
	return
fn00403114_exit:


word32 fn00403158(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO ecx edx Top
// Preserved: eax edi esi esp
fn00403158_entry:
	byte al_30 = SLICE(eax, byte, 0)
l00403158:
	word32 esi_11 = edx
	branch Mem9[eax + 0x00000004:word16] == 0xD7B2 l00403173
l00403164:
	fn00403114(eax, ecx, edx)
	branch al_30 == 0x00 l004031A8
l00403173:
	word32 edi_119 = Mem41[eax + 0x00000014:word32] + Mem41[eax + 0x0000000C:word32]
	word32 edx_45 = Mem41[eax + 0x00000008:word32] - Mem41[eax + 0x0000000C:word32]
	branch edx_45 > ecx l004031A3
l004031A3:
	Mem50[eax + 0x0000000C:word32] = Mem41[eax + 0x0000000C:word32] + ecx
l004031A6:
	branch ecx == 0x00000000 l004031A8
l004031A8:
	return ecx
l004031A6_1:
	Mem64[edi_119:byte] = Mem56[esi_11:byte]
	esi_11 = esi_11 + 0x00000001
	edi_119 = edi_119 + 0x00000001
	ecx = ecx - 0x00000001
l00403183:
	Mem69[eax + 0x0000000C:word32] = Mem41[eax + 0x0000000C:word32] + edx_45
	word32 ecx_70 = ecx - edx_45
	word32 ecx_120 = edx_45
l0040318C:
	branch ecx_120 == 0x00000000 l0040318E
l0040318E:
	word32 eax_89
	word32 ecx_90
	call Mem80[eax + 0x0000001C:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_78,edx:edx_45
		defs: eax:eax_89,ecx:ecx_90
	word24 ecx_24_8_96 = SLICE(ecx_90, word24, 8)
	branch eax_89 != 0x00000000 l00403199
l00403199:
	word32 edx_174
	fn00402BA8(eax_89, ecx_24_8_96, out edx_174)
	return ecx_70
fn00403158_exit:
l00403195:
	ecx = ecx_70
l0040318C_1:
	Mem117[edi_119:byte] = Mem80[esi_11:byte]
	esi_11 = esi_11 + 0x00000001
	edi_119 = edi_119 + 0x00000001
	ecx_120 = ecx_120 - 0x00000001


void fn004031AC(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: eax esp
fn004031AC_entry:
l004031AC:
	word32 ecx_5 = edx
l004031AE:
	branch ecx_5 <= 0x00000040 l0040321C
l0040321C:
	branch ecx_5 > 0x00000000 l0040321E_thunk_fn00403158
l0040321E_thunk_fn00403158:
	fn00403158(eax, ecx_5, 0x004031DC)
	return
l00403224:
	return
l004031B8:
	word32 ecx_21 = ecx_5 - 0x00000040
	word32 ecx_75
	word32 edx_76
	branch Mem27[fn004062BC(SLICE(fn00403158(eax, 0x00000040, 0x004031DC), word24, 8), out ecx_75, out edx_76) + 0x00000004:word32] != 0x00000000 l004031D9
l004031D9:
	return
fn004031AC_exit:
l004031D5:
	ecx_5 = ecx_21


word32 fn00403228(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO ecx edx Top
// Preserved: eax ebx esp
fn00403228_entry:
l00403228:
	word16 ecx_16_16_41
	branch (Mem6[eax + 0x00000006:byte] & 0x01) == 0x00 l00403253
l00403253:
	ecx_16_16_41 = SLICE(fn00403158(eax, 0x00000001, fp + 0xFFFFFFF8), word16, 16) (alias)
l00403234:
	ecx_16_16_41 = SLICE(fn00403158(eax, 0x00000002, fp + 0xFFFFFFF8), word16, 16) (alias)
l0040326B:
	fn00402FA0(eax, ecx_16_16_41)
	return eax
fn00403228_exit:


word32 fn004036B8(word32 eax, word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esp
fn004036B8_entry:
l004036B8:
	return fn0040372C(eax, fn00402A28(fn004036E8(eax), ecx))
fn004036B8_exit:


word32 fn004036E8(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn004036E8_entry:
l004036E8:
	return Mem0[eax + 0xFFFFFFD8:word32]
fn004036E8_exit:


word32 fn004036F0(word32 eax, word32 ecx, word32 edx, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: edx
// Trashed: SCZO edx Top
// Preserved: eax esp
fn004036F0_entry:
	byte dl = SLICE(edx, byte, 0)
l004036F0:
	branch dl == 0x00 l004036FC
l004036F4:
	eax = fn00403990(eax, ecx, edx)
l004036FC:
	word32 edx_27 = edx
	branch dl == 0x00 l0040370F
l00403700:
	edx_27 = fn004039E8(eax)
	Mem33[fs:0x00000000:word32] = dwArg00
l0040370F:
	return edx_27
fn004036F0_exit:


word32 fn00403720(word32 eax, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax ecx
// Trashed: SCZO dl eax ecx Top
// Preserved: esp
fn00403720_entry:
l00403720:
	branch eax == 0x00000000 l0040372B
l00403724:
	word32 ecx_10 = Mem0[eax:word32]
	call Mem0[ecx_10 - 0x00000004:word32] (retsize: 4;)
		uses: dl:0x01,eax:eax,ecx:ecx_10
		defs: eax:eax_12,ecx:ecx_14
l0040372B:
	ecxOut = ecx
	return eax
fn00403720_exit:


word32 fn0040372C(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0040372C_entry:
l0040372C:
	Mem17[edx:word32] = eax
	word32 ecx_19 = Mem17[eax - 0x00000028:word32]
	word32 ebx_100 = eax
	word32 edi_102 = edx + 0x00000004
	word32 ecx_110 = (ecx_19 >>u 0x00000002) - 0x00000001
l0040373E:
	branch ecx_110 == 0x00000000 l00403740
l00403740:
	word32 esp_31 = fp - 12
	word32 ecx_105 = ecx_19 & 0x00000003
l00403744:
	branch ecx_105 == 0x00000000 l00403746
l00403746:
l0040374A:
	word32 ecx_42 = Mem41[ebx_100 - 0x00000048:word32]
	branch ecx_42 == 0x00000000 l00403752
l00403751:
	esp_31 = esp_31 - 4
	Mem48[esp_31:word32] = ecx_42
l00403752:
	word32 ebx_51 = Mem50[ebx_100 - 0x00000024:word32]
	branch ebx_51 == 0x00000000 l0040375D
l0040375D:
	branch esp_31 == fp - 12 l0040377E
l00403761:
	word32 ebx_62 = Mem61[esp_31:word32]
	esp_31 = esp_31 + 4
	word32 ecx_64 = Mem61[ebx_62:word32]
	word32 ebx_65 = ebx_62 + 0x00000004
l00403767:
	word32 esi_69 = Mem68[ebx_65 + 0x00000010:word32]
	branch esi_69 == 0x00000000 l00403774
l0040376E:
	Mem75[Mem68[ebx_65 + 0x00000014:word32] + edx:word32] = esi_69
l00403774:
	ebx_65 = ebx_65 + 0x0000001C
	ecx_64 = ecx_64 - 0x00000001
	branch ecx_64 != 0x00000000 l00403767
l0040377A:
	branch esp_31 != fp - 12 l00403761
l0040377E:
	return edx
fn0040372C_exit:
l00403759:
	ebx_100 = Mem50[ebx_51:word32]
l00403744_1:
	Mem103[edi_102:byte] = 0x00
	edi_102 = edi_102 + 0x00000001
	ecx_105 = ecx_105 - 0x00000001
l0040373E_1:
	Mem108[edi_102:word32] = 0x00000000
	edi_102 = edi_102 + 0x00000004
	ecx_110 = ecx_110 - 0x00000001


word32 fn004038DC(word32 eax, word32 edx, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn004038DC_entry:
	word24 eax_24_8_21 = SLICE(eax, word24, 8)
l004038DC:
	branch eax == 0x00000000 l004038F6
l004038E0:
	word32 ecx_15 = eax
l004038E2:
	word32 ecx_11 = Mem0[ecx_15:word32]
	branch ecx_11 == edx l004038F6
l004038F6:
	return <invalid>
fn004038DC_exit:
l004038E8:
	ecx_15 = Mem0[ecx_11 - 0x00000024:word32]
	branch ecx_15 != 0x00000000 l004038E2
l004038EF:
	word32 eax_22 = SEQ(eax_24_8_21, 0x0A)
l004038F1_thunk_fn00402B7C:
	fn00402B7C(eax_22, ecx_15, dwArg00)


bool fn004038F8(word32 eax, word16 si, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] esi:[0..15]
// LiveOut: Z esi
// Trashed: SCZO eax ecx esi Top
// Preserved: edi esp
fn004038F8_entry:
l004038F8:
	word16 ax_63 = SLICE(esi, word16, 0)
	word32 esi_11 = eax
l004038FE:
	word32 edi_14 = Mem13[esi_11 - 0x00000030:word32]
	branch edi_14 == 0x00000000 l00403912
l00403905:
	word32 ecx_18 = (word32) Mem13[edi_14:word16]
	word32 edi_104 = edi_14 + 0x00000002
	bool Z_31 = SLICE(cond(edi_14 + 0x00000002), bool, 2)
	ecx_24 = ecx_18
l0040390C:
	word32 ecx_24
	branch ecx_24 == 0x00000000 l0040390F
l0040390C_1:
	Z_31 = SLICE(cond(ax_63 - Mem21[edi_104:word16]), bool, 2) (alias)
	edi_104 = edi_104 + 0x00000002
	ecx_24 = ecx_24 - 0x00000001
	branch ax_63 == Mem21[edi_104:word16] l0040390C
l0040390F:
	branch Z_31 l0040391B
l0040391B:
	word32 eax_42 = ecx_18 * 0x00000002 - ecx_24
	esiOut = Mem21[edi_104 - 0x00000004 + eax_42 * 0x00000002:word32]
	return SLICE(cond(eax_42), bool, 2)
l00403911:
l00403912:
	word32 esi_54 = Mem53[esi_11 - 0x00000024:word32]
	bool Z_57 = SLICE(cond(esi_54), bool, 2)
	branch esi_54 != 0x00000000 l004038FC
l004038FC:
	esi_11 = Mem53[esi_54:word32]
l00403919:
	esiOut = esi_54
	return Z_57
fn004038F8_exit:


void fn00403928(word32 eax, word32 esi, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] esi:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx esi Top
// Preserved: esp
fn00403928_entry:
l00403928:
	word32 esi_13
	branch fn004038F8(Mem9[eax:word32], esi, out esi_13) l00403937
l00403937:
	word32 ecx_23 = dwArg00
	word32 esp_24 = fp + 4
l00402C74:
	branch Mem9[0x0042B02C:word32] == 0x00000000 l00402C83
l00402C7D:
	call Mem9[0x0042B02C:word32] (retsize: 4;)
		uses: eax:eax,ecx:dwArg00,Stack +0000:dwArg00
		defs: ecx:ecx_29,esp:esp_27
l00402C83:
l00402C88_thunk_fn00404234:
	fn00404234(0x000000D2, ecx_23, Mem9[esp_24:word32])
l00403935:
	call esi_13 (retsize: 4;)
		uses: eax:eax
	return
fn00403928_exit:


word32 fn00403990(word32 eax, word32 ecx, byte dl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..7] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: ebx ecx edx esp
fn00403990_entry:
	byte dl_13 = SLICE(edx, byte, 0)
l00403990:
	branch dl_13 < 0x00 l0040399A
l00403997:
	eax = fn004036B8(eax, ecx)
l0040399A:
	Mem42[fs:0x00000000:word32] = fp + 0x00000004
	return eax
fn00403990_exit:


word32 fn004039E8(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: edx
// Trashed: edx Top
// Preserved: eax ebx esp
fn004039E8_entry:
l004039E8:
	word32 edx_13
	call fnCDE9C3FF (retsize: 4;)
		uses: eax:eax,edx:Mem6[eax:word32]
		defs: edx:edx_13
	return edx_13
fn004039E8_exit:


word32 fn00403C5C(word32 eax, word32 ecx, word32 dwArg00, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: eax ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00403C5C_entry:
l00403C5C:
	branch eax != 0x00000000 l00403C6A
l00403C6A:
	word32 eax_46
	word32 ecx_49
	call Mem44[0x0042B014:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx,edx:dwArg00,Stack +0004:dwArg00,Stack +0008:0x0EEDFADE,Stack +000C:0x00000001,Stack +0010:0x00000007,Stack +0014:fp - 24,Stack +0018:dwArg00,Stack +001C:eax,Stack +0030:fp + 4
		defs: eax:eax_46,ecx:ecx_49
	ecxOut = ecx_49
	return eax_46
fn00403C5C_exit:
l00403C60:
	fn00404234(0x000000D8, ecx, dwLoc04)


void fn00403D08(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00403D08_entry:
l00403D08:
	Mem11[fs:0x00000000:word32] = dwArg04
	call dwArg08 + 0x00000005 (retsize: 4;)
		uses: eax:dwArg04,ecx:dwArg08 + 0x00000005,edx:0x00000000,Stack +0008:dwArg04,Stack +000C:dwArg08
	return
fn00403D08_exit:


void fn00403E60(word32 ebp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00403E60_entry:
l00403E60:
	word32 ecx_11 = Mem0[fs:0x00000000:word32]
	Mem12[fs:0x00000000:word32] = ebp - 0x0000000C
	Mem13[ebp - 0x0000000C:word32] = ecx_11
	Mem14[ebp - 0x00000008:word32] = 0x00403DC0
	Mem15[ebp - 0x00000004:word32] = ebp
	Mem16[0x0042B63C:word32] = ebp - 0x0000000C
	return
fn00403E60_exit:


word32 fn00403E80()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00403E80_entry:
l00403E80:
	word32 eax_6 = Mem0[0x0042B63C:word32]
	branch eax_6 == 0x00000000 l00403EA7
l00403E8B:
	ecx = Mem0[fs:0x00000000:word32]
	branch eax_6 != ecx l00403E9A
l00403E9A:
	branch ecx == 0xFFFFFFFF l00403EA7
l00403E9F:
	branch Mem0[ecx:word32] != eax_6 l00403E98
l00403E98:
	ecx = Mem0[ecx:word32]
l00403EA3:
	Mem23[ecx:word32] = Mem0[eax_6:word32]
l00403EA7:
	return ecx
l00403E92:
	Mem25[fs:0x00000000:word32] = Mem0[eax_6:word32]
	return ecx
fn00403E80_exit:


void fn00403EA8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00403EA8_entry:
l00403EA8:
	word32 eax_19 = Mem17[0x0042B640:word32]
	branch eax_19 == 0x00000000 l00403F11
l00403EBD:
	word32 ebx_23 = Mem17[0x0042B644:word32]
	word32 eax_24 = Mem17[eax_19 + 0x00000004:word32]
	Mem35[fs:0x00000000:word32] = fp + 0xFFFFFFDC
	word32 esp_33 = fp + 0xFFFFFFDC
	branch ebx_23 <= 0x00000000 l00403EF3
l00403ED8:
	ebx_23 = ebx_23 - 0x00000001
	Mem41[0x0042B644:word32] = ebx_23
	word32 eax_44 = Mem41[eax_24 + 0x00000004 + ebx_23 * 0x00000008:word32]
	branch eax_44 == 0x00000000 l00403EEF
l00403EEC:
	word32 edx_55
	call eax_44 (retsize: 4;)
		uses: edx:edx_55
		defs: edx:edx_55,esp:esp_52
l00403EEF:
	branch ebx_23 > 0x00000000 l00403ED8
l00403EF3:
	Mem76[fs:0x00000000:word32] = Mem66[esp_33:word32]
l00403F11:
	return
fn00403EA8_exit:


void fn00403F18()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00403F18_entry:
l00403F18:
	word32 eax_19 = Mem17[0x0042B640:word32]
	branch eax_19 == 0x00000000 l00403F81
l00403F2D:
	word32 esi_23 = Mem17[eax_19:word32]
	word32 eax_25 = Mem17[eax_19 + 0x00000004:word32]
	Mem36[fs:0x00000000:word32] = fp + 0xFFFFFFDC
	word32 ebx_24 = 0x00000000
	word32 esp_34 = fp + 0xFFFFFFDC
	branch esi_23 <= 0x00000000 l00403F63
l00403F49:
	word32 eax_43 = Mem40[eax_25 + ebx_24 * 0x00000008:word32]
	ebx_24 = ebx_24 + 0x00000001
	Mem47[0x0042B644:word32] = ebx_24
	branch eax_43 == 0x00000000 l00403F5F
l00403F5C:
	word32 edx_57
	call eax_43 (retsize: 4;)
		uses: edx:edx_57
		defs: edx:edx_57,esp:esp_54
l00403F5F:
	branch esi_23 > ebx_24 l00403F49
l00403F63:
	Mem79[fs:0x00000000:word32] = Mem69[esp_34:word32]
l00403F81:
	return
fn00403F18_exit:


void fn00403F88(word32 eax, word32 edx, word32 ebp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ebp:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00403F88_entry:
l00403F88:
	Mem4[0x0042B014:word32] = 0x004011DC
	Mem5[0x0042B018:word32] = 0x004011EC
	Mem7[0x0042B640:word32] = eax
	Mem11[0x0042B644:word32] = 0x00000000
	Mem13[0x0042B648:word32] = edx
	Mem15[0x0042B030:word32] = Mem13[edx + 0x00000004:word32]
	fn00403E60(ebp)
	Mem25[0x0042B038:byte] = 0x00
	fn00403F18()
	return
fn00403F88_exit:


word32 fn00404030(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx_24_8:[0..23]
// LiveOut: ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00404030_entry:
l00404030:
	word32 ebx_15 = Mem12[0x00428000:word32]
	word32 ecx_100 = SEQ(ecx_24_8, 0x10)
l00404040:
	Mem33[(uint32) (uint8) SLICE(ecx_100, byte, 0) + 0x00428070:byte] = SLICE((int32) ((int64) ebx_15 % 0x0000000A), byte, 0) + 0x30
	word32 eax_41 = (int32) ((int64) ebx_15 / 0x0000000A)
	ebx_15 = eax_41
	word24 ecx_24_8_80 = SLICE(ecx_100 - 0x00000001, word24, 8)
	ecx_100 = ecx_100 - 0x00000001 (alias)
	branch eax_41 != 0x00000000 l00404040
l00404065:
	word32 eax_50 = Mem33[0x00428004:word32]
	word32 ecx_101 = SEQ(ecx_24_8_80, 0x1C)
l0040406C:
	Mem62[(uint32) (uint8) SLICE(ecx_101, byte, 0) + 0x00428070:byte] = Mem54[(eax_50 & 0x0000000F) + 0x00428090:byte]
	eax_50 = eax_50 >>u 0x00000004
	word32 ecx_66 = ecx_101 - 0x00000001
	ecx_101 = ecx_101 - 0x00000001 (alias)
	branch eax_50 != 0x00000000 l0040406C
l00404086:
	return ecx_66
fn00404030_exit:


word32 fn0040408C(ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ebx ecx esp
// Trashed: SCZO eax ebp ebx ecx edi esi esp Top
// Preserved:
fn0040408C_entry:
l0040408C:
	Mem7[0x00428000:word32] = 0x00000000
	word32 edi_15 = 0x0042B638
	word32 ebx_16 = Mem7[0x0042B650:word32]
	word32 esi_24 = Mem23[0x0042B638:word32]
	word32 ecx_25 = 0x0000000B
l004040B1:
	branch ecx_25 == 0x00000000 l004040B3
l004040B3:
	ebxOut = ebx_16
	return ecx_25
fn0040408C_exit:
l004040B1_1:
	Mem39[edi_15:word32] = Mem28[esi_24:word32]
	esi_24 = esi_24 + 0x00000004
	edi_15 = edi_15 + 0x00000004
	ecx_25 = ecx_25 - 0x00000001


void fn004040BC(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004040BC_entry:
l004040BC:
	branch Mem6[0x0042B04C:byte] == 0x00 l0040411D
l0040411D:
	branch Mem6[0x00428030:byte] != 0x00 l00404139
l00404126:
	MessageBoxA(0x00000000, 0x00428070, 0x00428068, 0x00000000)
l00404139:
	return
l004040C6:
	branch Mem6[0x0042B220:word16] != 0xD7B2 l004040E5
l004040D1:
	branch Mem6[0x0042B228:word32] <=u 0x00000000 l004040E5
l004040DA:
	call Mem6[0x0042B238:word32] (retsize: 4;)
		uses: eax:0x0042B21C,ecx:ecx
l004040E5:
	WriteFile(GetStdHandle(0xFFFFFFF5), 0xFFFFFFF5, 0x00428070, 0x0000001E, fp + 0x0000002C)
	WriteFile(GetStdHandle(0xFFFFFFF5), 0xFFFFFFF5, 0x00404144, 0x00000002, fp + 0x00000014)
	return
fn004040BC_exit:


void fn00404148(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed:
// Preserved: esp
// Terminates process
fn00404148_exit:
fn00404148_entry:
	word24 ecx_24_8_49 = SLICE(ecx, word24, 8)
l00404148:
	word32 esp_109 = fp - 20
	word32 ebx_166 = 0x0042B638
	branch Mem18[0x0042B660:byte] != 0x00 l00404173
l0040415D:
	word32 ecx_219 = ecx
	branch Mem18[0x0042B048:word32] == 0x00000000 l00404173
l00404162:
	Mem29[esp_109:word32] = Mem26[0x0042B048:word32]
	Mem33[0x0042B048:word32] = 0x00000000
	call Mem33[esp_109:word32] (retsize: 4;)
		uses: eax:0x00000000,ecx:ecx_37
		defs: ecx:ecx_40,esp:esp_39
	ecx_24_8_49 = SLICE(ecx_219, word24, 8) (alias)
	branch Mem33[0x0042B048:word32] != 0x00000000 l00404162
l00404173:
	branch Mem46[0x00428004:word32] == 0x00000000 l0040418D
l0040417C:
	fn004040BC(fn00404030(ecx_24_8_49))
	Mem70[0x00428004:word32] = 0x00000000
l0040418D:
	branch Mem72[ebx_166 + 0x00000028:byte] != 0x02 l004041A1
l00404193:
	branch Mem72[0x00428000:word32] != 0x00000000 l004041A1
l0040419C:
	Mem80[ebx_166 + 0x0000000C:word32] = 0x00000000
l004041A1:
	fn00403EA8()
	branch Mem92[ebx_166 + 0x00000028:byte] <=u 0x01 l004041B5
l004041AC:
	branch Mem92[0x00428000:word32] == 0x00000000 l004041D8
l004041B5:
	word32 edi_99 = Mem92[ebx_166 + 0x00000010:word32]
	branch edi_99 == 0x00000000 l004041D8
l004041BC:
	fn00405B44(edi_99)
	word32 ebp_115 = Mem92[ebx_166 + 0x00000010:word32]
	esp_109 = <invalid>
	word32 esi_116 = Mem92[ebp_115 + 0x00000010:word32]
	branch esi_116 == Mem92[ebp_115 + 0x00000004:word32] l004041D8
l004041CE:
	branch esi_116 == 0x00000000 l004041D8
l004041D2:
	Mem123[esp_109 - 4:word32] = esi_116
	FreeLibrary(Mem123[esp_109 - 4:HMODULE])
	esp_109 = esp_109 - 4
l004041D8:
	word32 ecx_128 = fn00403E80()
	branch Mem134[ebx_166 + 0x00000028:byte] != 0x01 l004041E6
l004041E3:
	call Mem134[ebx_166 + 0x00000024:word32] (retsize: 4;)
		uses: ecx:ecx_128
		defs: ecx:ecx_155,esp:esp_154
l004041E6:
	branch Mem134[ebx_166 + 0x00000028:byte] == 0x00 l004041F1
l004041EC:
	word32 esp_170 = <invalid>
	ecx_128 = fn0040408C(out ebx_166)
	esp_109 = esp_170 + 0x0000000C
l004041F1:
	branch Mem134[ebx_166:word32] != 0x00000000 l00404210
l00404210:
	word32 esi_181 = Mem134[ebx_166:word32]
	word32 edi_182 = ebx_166
	word32 ecx_183 = 0x0000000B
l0040421B:
	branch ecx_183 == 0x00000000 l0040421D
l0040421D:
l0040421B_1:
	Mem189[edi_182:word32] = Mem186[esi_181:word32]
	esi_181 = esi_181 + 0x00000004
	edi_182 = edi_182 + 0x00000004
	ecx_183 = ecx_183 - 0x00000001
l004041F6:
	branch Mem134[0x0042B028:word32] == 0x00000000 l00404205
l004041FF:
	call Mem134[0x0042B028:word32] (retsize: 4;)
		uses: ecx:ecx_201
		defs: esp:esp_207
l00404205:
	word32 esp_216 = esp_109 - 4
	Mem217[esp_216:word32] = Mem134[0x00428000:word32]
	ExitProcess(Mem217[esp_216:UINT])


void fn00404228(word32 eax, word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed:
// Preserved: esp
// Terminates process
fn00404228_exit:
fn00404228_entry:
l00404228:
	Mem5[0x00428000:word32] = eax
	fn00404148(ecx)


void fn00404234(word32 eax, word32 ecx, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved: esp
// Terminates process
fn00404234_exit:
fn00404234_entry:
l00404234:
	Mem5[0x00428004:word32] = dwArg00
l0040423A_thunk_fn00404228:
	fn00404228(eax, ecx)


word32 fn00404240(word32 eax, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ecx edx
// Trashed: SCZO ecx edx Top
// Preserved: eax esp
fn00404240_entry:
l00404240:
	word32 edx_6 = Mem0[eax:word32]
	branch edx_6 == 0x00000000 l00404262
l00404246:
	Mem10[eax:word32] = 0x00000000
	word32 ecx_11 = Mem10[edx_6 - 0x00000008:word32]
	ecx = ecx_11 - 0x00000001
	branch ecx_11 < 0x00000001 l00404262
l00404252:
	__lock()
	word32 v10_15 = Mem10[edx_6 - 0x00000008:word32] - 0x00000001
	Mem16[edx_6 - 0x00000008:word32] = v10_15
	branch v10_15 != 0x00000000 l00404262
l00404258:
	fn00402A58(edx_6 - 0x00000008, ecx_11 - 0x00000001, out ecx)
l00404262:
	edxOut = edx_6
	return ecx
fn00404240_exit:


void fn00404264(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO edx Top
// Preserved: eax ebx ecx esi esp
fn00404264_entry:
l00404264:
	word32 ebx_11 = eax
	word32 esi_13 = edx
l0040426A:
	word32 edx_16 = Mem15[ebx_11:word32]
	branch edx_16 == 0x00000000 l0040428A
l00404270:
	Mem20[ebx_11:word32] = 0x00000000
	word32 ecx_21 = Mem20[edx_16 - 0x00000008:word32]
	branch ecx_21 < 0x00000001 l0040428A
l0040427C:
	__lock()
	word32 v12_25 = Mem20[edx_16 - 0x00000008:word32] - 0x00000001
	Mem26[edx_16 - 0x00000008:word32] = v12_25
	branch v12_25 != 0x00000000 l0040428A
l00404282:
	word32 ecx_72
	fn00402A58(edx_16 - 0x00000008, ecx_21 - 0x00000001, out ecx_72)
l0040428A:
	ebx_11 = ebx_11 + 0x00000004
	esi_13 = esi_13 - 0x00000001
	branch esi_13 != 0x00000000 l0040426A
l00404290:
	return
fn00404264_exit:


word32 fn00404294(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: D esp
fn00404294_entry:
l00404294:
	branch edx == 0x00000000 l004042BC
l00404298:
	word32 ecx_9 = Mem0[edx - 0x00000008:word32]
	ecx = ecx_9 + 0x00000001
	branch ecx_9 > 0x00000001 l004042B8
l004042B8:
	__lock()
	Mem13[edx - 0x00000008:word32] = Mem0[edx - 0x00000008:word32] + 0x00000001
l0040429E:
	word32 eax_22 = fn00404304(Mem19[edx - 0x00000004:word32], ecx_9 + 0x00000001)
	ecx = fn00402C1C(edx, Mem34[edx - 0x00000004:word32], eax_22)
	edx = eax_22
l004042BC:
	word32 v9_49 = Mem48[eax:word32]
	Mem51[eax:word32] = edx
	branch v9_49 == 0x00000000 l004042D6
l004042C2:
	word32 ecx_56 = Mem51[v9_49 - 0x00000008:word32]
	ecx = ecx_56 - 0x00000001
	branch ecx_56 < 0x00000001 l004042D6
l004042C8:
	__lock()
	word32 v11_60 = Mem51[v9_49 - 0x00000008:word32] - 0x00000001
	Mem61[v9_49 - 0x00000008:word32] = v11_60
	branch v11_60 != 0x00000000 l004042D6
l004042CE:
	fn00402A58(v9_49 - 0x00000008, ecx_56 - 0x00000001, out ecx)
l004042D6:
	return ecx
fn00404294_exit:


void fn004042D8(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004042D8_entry:
l004042D8:
	branch edx == 0x00000000 l004042E6
l004042DC:
	branch Mem0[edx - 0x00000008:word32] <= 0x00000001 l004042E6
l004042E2:
	__lock()
	Mem13[edx - 0x00000008:word32] = Mem0[edx - 0x00000008:word32] + 0x00000001
l004042E6:
	word32 v9_18 = Mem17[eax:word32]
	Mem20[eax:word32] = edx
	branch v9_18 == 0x00000000 l00404300
l004042EC:
	word32 ecx_25 = Mem20[v9_18 - 0x00000008:word32]
	branch ecx_25 < 0x00000001 l00404300
l004042F2:
	__lock()
	word32 v12_29 = Mem20[v9_18 - 0x00000008:word32] - 0x00000001
	Mem30[v9_18 - 0x00000008:word32] = v12_29
	branch v12_29 != 0x00000000 l00404300
l004042F8:
	word32 ecx_63
	fn00402A58(v9_18 - 0x00000008, ecx_25 - 0x00000001, out ecx_63)
l00404300:
	return
fn004042D8_exit:


word32 fn00404304(word32 eax, word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00404304_entry:
l00404304:
	branch eax <= 0x00000000 l0040432C
l0040432C:
	return 0x00000000
l00404308:
	word32 eax_13 = eax + 0x0000000A & 0xFFFFFFFE
	word32 eax_20 = fn00402A28(eax_13, ecx)
	Mem30[eax_13 - 0x00000002 + eax_20:word16] = 0x0000
	Mem35[eax_20 + 0x00000004:word32] = eax
	Mem36[eax_20:word32] = 0x00000001
	return eax_20 + 0x00000008
fn00404304_exit:


word32 fn00404330(word32 eax, word32 ecx, word32 edx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ecx edx
// Trashed: SCZO ecx edx Top
// Preserved: D eax ebx edi esi esp
fn00404330_entry:
l00404330:
	word32 eax_21 = fn00404304(ecx, ecx)
	branch edx == 0x00000000 l00404351
l00404348:
	fn00402C1C(edx, ecx, eax_21)
l00404351:
	word32 edx_46
	word32 ecx_48 = fn00404240(eax, out edx_46)
	Mem54[eax:word32] = eax_21
	edxOut = edx_46
	return ecx_48
fn00404330_exit:


void fn00404428(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO ecx Top
// Preserved: edx esp
fn00404428_entry:
l00404428:
	word32 edx_21
	fn00404330(eax, 0x00000001, fp - 4, out edx_21)
	return
fn00404428_exit:


word32 fn00404438(word32 eax, word32 edx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ecx edx
// Trashed: SCZO ecx edx Top
// Preserved: esp
fn00404438_entry:
l00404438:
	word32 ecx_4 = 0x00000000
	branch edx == 0x00000000 l0040445F
l0040443E:
	edx_12 = edx
l0040443F:
	word32 edx_12
	branch Mem10[edx_12:byte] == 0x00 l0040445A
l00404443:
	branch Mem10[edx_12 + 0x00000001:byte] == 0x00 l00404459
l00404448:
	branch Mem10[edx_12 + 0x00000002:byte] == 0x00 l00404458
l0040444D:
	branch Mem10[edx_12 + 0x00000003:byte] == 0x00 l00404457
l00404457:
	edx_12 = edx_12 + 0x00000001
l00404458:
	edx_12 = edx_12 + 0x00000001
l00404459:
	edx_12 = edx_12 + 0x00000001
l0040445A:
	ecx_4 = edx_12 - edx
l0040445F:
l0040445F_thunk_fn00404330:
	word32 edx_58
	word32 ecx_57 = fn00404330(eax, ecx_4, edx, out edx_58)
	edxOut = edx_58
	return ecx_57
fn00404438_exit:
l00404452:
	edx_12 = edx_12 + 0x00000004


void fn004044A4(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: esp
fn004044A4_entry:
l004044A4:
	word32 ecx_13 = (uint32) (uint8) Mem0[edx:byte]
l004044A9_thunk_fn00404330:
	word32 edx_22
	fn00404330(eax, ecx_13, edx + 0x00000001, out edx_22)
	return
fn004044A4_exit:


word32 fn004044B0(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: edx
// Trashed: SCZO ecx edx Top
// Preserved: eax edi esp
fn004044B0_entry:
l004044B0:
	word32 edi_14 = edx
	bool Z_25 = SLICE(cond(0x00000000), bool, 2)
	ecx_18 = ecx
l004044B7:
	word32 ecx_18
	branch ecx_18 == 0x00000000 l004044B9
l004044B7_1:
	Z_25 = SLICE(cond(0x00 - Mem12[edi_72:byte]), bool, 2) (alias)
	edi_14 = edi_72 + 0x00000001
	ecx_18 = ecx_18 - 0x00000001
	edi_72 = edi_14
	branch Mem12[edi_72:byte] == 0x00 l004044B7
l004044B9:
	branch Z_25 l004044BD
l004044BB:
	ecx_18 = ~ecx_18
l004044BD:
	word32 ecx_39 = ecx_18 + ecx
l004044C2_thunk_fn00404330:
	word32 edx_53
	fn00404330(eax, ecx_39, edx, out edx_53)
	return edx_53
fn004044B0_exit:


word32 fn00404500(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn00404500_entry:
l00404500:
	branch eax == 0x00000000 l00404507
l00404504:
	eax = Mem0[eax - 0x00000004:word32]
l00404507:
	return eax
fn00404500_exit:


void fn00404508(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: D ebx edi esi esp
fn00404508_entry:
l00404508:
	branch edx == 0x00000000 l0040454B
l0040454B:
	return
l0040450C:
	word32 ecx_10 = Mem0[eax:word32]
	branch ecx_10 == 0x00000000 l00404510_thunk_fn00404294
l00404510_thunk_fn00404294:
	fn00404294(eax, edx)
	return
l00404516:
	word32 ecx_40
	word32 eax_39
	word32 edi_34 = Mem31[ecx_10 - 0x00000004:word32]
	branch edx == ecx_10 l00404540
l00404540:
	fn00404830(eax, ecx, edx)
	eax_39 = Mem31[eax:word32]
	ecx_40 = edi_34
l00404529:
	fn00404830(eax, ecx, edx)
	eax_39 = edx
	ecx_40 = Mem31[edx - 0x00000004:word32]
l00404533:
	fn00402C1C(eax_39, ecx_40, Mem31[eax:word32] + edi_34)
	return
fn00404508_exit:


void fn0040454C(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: D ebx edi esi esp
fn0040454C_entry:
l0040454C:
	branch edx == 0x00000000 l004045B1
l004045B1:
l004045B3_thunk_fn00404294:
	fn00404294(eax, ecx)
	return
l00404550:
	branch ecx == 0x00000000 l00404552_thunk_fn00404294
l00404552_thunk_fn00404294:
	fn00404294(eax, edx)
	return
l00404558:
	branch edx == Mem0[eax:word32] l004045B8
l004045B8:
l004045BA_thunk_fn00404508:
	fn00404508(eax, ecx)
	return
l0040455C:
	branch ecx == Mem0[eax:word32] l0040456E
l0040456E:
	word32 eax_61 = fn00404304(Mem57[edx - 0x00000004:word32] + Mem57[ecx - 0x00000004:word32], ecx)
	fn00402C1C(edx, Mem57[edx - 0x00000004:word32], eax_61)
	fn00402C1C(ecx, Mem57[ecx - 0x00000004:word32], eax_61 + Mem57[edx - 0x00000004:word32])
	branch eax_61 == 0x00000000 l004045A8
l004045A5:
	Mem99[eax_61 - 0x00000008:word32] = Mem57[eax_61 - 0x00000008:word32] - 0x00000001
l004045A8:
	fn00404294(eax, eax_61)
	return
l00404560:
	fn00404294(eax, edx)
l00404569_thunk_fn00404508:
	fn00404508(eax, ecx)
	return
fn0040454C_exit:


bool fn0040464C(word32 eax, word32 edx, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: Z ecx edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0040464C_entry:
l0040464C:
	word32 esi_101 = eax
	word32 edi_102 = edx
	bool Z_124 = SLICE(cond(eax - edx), bool, 2)
	branch eax == edx l004046EA
l0040465B:
	branch eax == 0x00000000 l004046C7
l004046C7:
	edx = Mem12[edx - 0x00000004:word32]
	Z_124 = SLICE(cond(eax - edx), bool, 2) (alias)
l0040465F:
	branch edx == 0x00000000 l004046CE
l004046CE:
	Z_124 = SLICE(cond(Mem12[eax - 0x00000004:word32] - edx), bool, 2) (alias)
l00404663:
	word32 edx_32 = Mem12[edx - 0x00000004:word32]
	word32 eax_33 = Mem12[eax - 0x00000004:word32] - edx_32
	branch eax_33 >u 0x00000000 l0040466F
l0040466D:
	edx_32 = edx_32 + eax_33
l0040466F:
	word32 edx_104 = edx_32 >>u 0x00000002
	branch edx_104 == 0x00000000 l0040469B
l00404675:
	ecx = Mem41[esi_101:word32]
	word32 ebx_245 = Mem41[edi_102:word32]
	branch ecx != ebx_245 l004046D5
l0040467D:
	word32 edx_53 = edx_104 - 0x00000001
	branch edx_53 == 0x00000000 l00404695
l00404695:
	esi_101 = esi_101 + 0x00000004
	edi_102 = edi_102 + 0x00000004
l00404680:
	ecx = Mem41[esi_101 + 0x00000004:word32]
	ebx_245 = Mem41[edi_102 + 0x00000004:word32]
	branch ecx != ebx_245 l004046D5
l004046D5:
	byte bl_71 = SLICE(ebx_245, byte, 0)
	byte cl_68 = SLICE(ecx, byte, 0)
	byte bh_79 = SLICE(ebx_245, byte, 8)
	byte ch_76 = SLICE(ecx, byte, 8)
	edx = edx_32
	Z_124 = SLICE(cond(cl_68 - bl_71), bool, 2) (alias)
	branch cl_68 != bl_71 l004046EA
l004046DA:
	Z_124 = SLICE(cond(ch_76 - bh_79), bool, 2) (alias)
	branch ch_76 != bh_79 l004046EA
l004046DE:
	byte cl_94 = SLICE(ecx >>u 0x00000010, byte, 0)
	byte bl_95 = SLICE(ebx_245 >>u 0x00000010, byte, 0)
	ecx = ecx >>u 0x00000010
	byte ch_98 = SLICE(ecx >>u 0x00000010, byte, 8)
	byte bh_99 = SLICE(ebx_245 >>u 0x00000010, byte, 8)
	Z_124 = SLICE(cond(cl_94 - bl_95), bool, 2) (alias)
	branch cl_94 != bl_95 l004046EA
l004046E8:
	ecx = ecx >>u 0x00000010 (alias)
	Z_124 = SLICE(cond(ch_98 - bh_99), bool, 2) (alias)
l0040468A:
	esi_101 = esi_101 + 0x00000008
	edi_102 = edi_102 + 0x00000008
	edx_104 = edx_53 - 0x00000001
	branch edx_53 != 0x00000001 l00404675
l00404693:
l0040469B:
	edx = edx_32 & 0x00000003
	branch (edx_32 & 0x00000003) == 0x00000000 l004046C3
l004046A1:
	ecx = Mem41[esi_101:word32]
	word32 ebx_120 = Mem41[edi_102:word32]
	byte cl_121 = SLICE(ecx, byte, 0)
	byte bl_122 = SLICE(ebx_120, byte, 0)
	byte ch_128 = SLICE(ecx, byte, 8)
	byte bh_129 = SLICE(ebx_120, byte, 8)
	Z_124 = SLICE(cond(cl_121 - bl_122), bool, 2) (alias)
	branch cl_121 != bl_122 l004046EA
l004046A9:
	edx = (edx_32 & 0x00000003) - 0x00000001
	branch edx == 0x00000000 l004046C3
l004046AC:
	Z_124 = SLICE(cond(ch_128 - bh_129), bool, 2) (alias)
	branch ch_128 != bh_129 l004046EA
l004046B0:
	edx = edx - 0x00000001
	branch edx == 0x00000001 l004046C3
l004046B3:
	ecx = ecx & 0x00FF0000
	Z_124 = SLICE(cond((ecx & 0x00FF0000) - (ebx_120 & 0x00FF0000)), bool, 2) (alias)
	branch (ecx & 0x00FF0000) != (ebx_120 & 0x00FF0000) l004046EA
l004046C3:
	Z_124 = SLICE(cond(eax_33 * 0x00000002), bool, 2) (alias)
l004046EA:
	ecxOut = ecx
	edxOut = edx
	return Z_124
fn0040464C_exit:


void fn004046F0(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SCZO edx Top
// Preserved: esp
fn004046F0_entry:
l004046F0:
	branch eax == 0x00000000 l004046FE
l004046F4:
	branch Mem0[eax - 0x00000008:word32] <= 0x00000001 l004046FE
l004046FA:
	__lock()
	Mem13[eax - 0x00000008:word32] = Mem0[eax - 0x00000008:word32] + 0x00000001
l004046FE:
	return
fn004046F0_exit:


word32 fn00404700(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn00404700_entry:
l00404700:
	branch eax == 0x00000000 l00404706
l00404706:
	return 0x00404705
l00404704:
	return eax
fn00404700_exit:


void fn00404750(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: D ebx esp
fn00404750_entry:
l00404750:
l0040470C:
	word32 edx_6 = Mem0[eax:word32]
	branch edx_6 == 0x00000000 l0040474A
l00404712:
	word32 ecx_10 = Mem0[edx_6 - 0x00000008:word32]
	branch ecx_10 == 0x00000001 l0040474A
l00404718:
	word32 eax_20 = fn00404304(Mem16[edx_6 - 0x00000004:word32], ecx_10 - 0x00000001)
	word32 eax_29 = Mem16[eax:word32]
	Mem30[eax:word32] = eax_20
	fn00402C1C(eax_29, Mem32[eax_29 - 0x00000004:word32], eax_20)
	word32 ecx_43 = Mem32[eax_29 - 0x00000008:word32]
	branch ecx_43 < 0x00000001 l00404747
l00404739:
	__lock()
	word32 v11_47 = Mem32[eax_29 - 0x00000008:word32] - 0x00000001
	Mem48[eax_29 - 0x00000008:word32] = v11_47
	branch v11_47 != 0x00000000 l00404747
l0040473F:
	word32 ecx_97
	fn00402A58(eax_29 - 0x00000008, ecx_43 - 0x00000001, out ecx_97)
l00404747:
l0040474A:
	return
fn00404750_exit:


word32 fn00404760(word32 eax, word32 ecx, word32 edx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esp
fn00404760_entry:
l00404760:
	word32 ecx_42
	branch eax == 0x00000000 l00404792
l00404765:
	word32 ebx_11 = Mem6[eax - 0x00000004:word32]
	branch ebx_11 == 0x00000000 l00404792
l0040476C:
	word32 edx_16 = edx - 0x00000001
	branch edx < 0x00000001 l0040478A
l0040478A:
	edx_16 = 0x00000000
l0040476F:
	branch edx - 0x00000001 >= ebx_11 l00404792
l00404773:
	word32 ebx_26 = ebx_11 - edx_16
	branch ecx < 0x00000000 l00404792
l00404792:
	word32 edx_40
	ecx_42 = fn00404240(dwArg04, out edx_40)
l00404779:
	branch ecx > ebx_26 l0040478E
l0040478E:
	ecx = ebx_26
l0040477D:
	word32 edx_61
	ecx_42 = fn00404330(dwArg04, ecx, edx_16 + eax, out edx_61)
l0040479B:
	return ecx_42
fn00404760_exit:


void fn004047A0(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: D ebx edi esi esp
fn004047A0_entry:
l004047A0:
	fn00404750(eax)
	word32 edi_18 = ecx
	word32 edx_28 = Mem12[eax:word32]
	branch edx_28 == 0x00000000 l004047E4
l004047B4:
	word32 ecx_32 = Mem12[edx_28 - 0x00000004:word32]
	branch edx < 0x00000001 l004047E4
l004047BA:
	branch edx - 0x00000001 >= ecx_32 l004047E4
l004047BE:
	branch ecx <= 0x00000000 l004047E4
l004047C2:
	word32 ecx_40 = ecx_32 - (edx - 0x00000001)
	branch ecx <= ecx_40 l004047CA
l004047C8:
	edi_18 = ecx_40
l004047CA:
	word32 edx_49 = edx_28 + (edx - 0x00000001)
	fn00404830(eax, fn00402C1C(edi_18 + edx_49, ecx_40 - edi_18, edx_49), Mem12[Mem12[eax:word32] - 0x00000004:word32] - edi_18)
l004047E4:
	return
fn004047A0_exit:


word32 fn004047E8(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebx edi edx esi esp
fn004047E8_entry:
l004047E8:
	branch eax == 0x00000000 l0040482C
l004047EC:
	branch edx == 0x00000000 l00404821
l00404821:
	return 0x00000000
l004047F0:
	word32 edi_195 = edx
	word32 ecx_26 = Mem23[edx - 0x00000004:word32]
	word32 edx_29 = Mem28[eax - 0x00000004:word32]
	branch edx_29 < 0x00000001 l0040481C
l00404801:
	word32 ecx_103 = ecx_26 - (edx_29 - 0x00000001)
	byte al_33 = Mem28[eax:byte]
	bool Z_107 = SLICE(cond(ecx_103), bool, 2)
	branch ecx_103 <= 0x00000000 l0040481C
l00404808:
	word32 esi_62 = eax + 0x00000001
	branch ecx_103 == 0x00000000 l0040480A
l00404808_1:
	Z_107 = SLICE(cond(al_33 - Mem41[edi_195:byte]), bool, 2) (alias)
	edi_195 = edi_195 + 0x00000001
	ecx_103 = ecx_103 - 0x00000001
	branch al_33 == Mem41[edi_195:byte] l00404808
l0040480A:
	branch Z_107 l0040481C
l0040481C:
	eax = 0x00000000
l0040480C:
	word32 ecx_69 = edx_29 - 0x00000001
	edi_73 = edi_195
l00404812:
	word32 edi_73
	branch ecx_69 == 0x00000000 l00404814
l00404812_2:
	Z_107 = SLICE(cond(Mem66[esi_196:byte] - Mem66[edi_197:byte]), bool, 2) (alias)
	esi_62 = esi_196 + 0x00000001
	edi_73 = edi_197 + 0x00000001
	ecx_69 = ecx_69 - 0x00000001
	esi_196 = esi_62
	edi_197 = edi_73
	branch Mem66[esi_196:byte] != Mem66[edi_197:byte] l00404812
l00404814:
	branch Z_107 l00404824
l00404824:
	eax = edi_195 - edx
l00404829:
l0040482C:
	return eax
fn004047E8_exit:
l00404818:


void fn00404830(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: D ebx edi esi esp
fn00404830_entry:
l00404830:
	word32 edi_17 = 0x00000000
	branch edx <= 0x00000000 l00404885
l0040483D:
	word32 eax_20 = Mem12[eax:word32]
	branch eax_20 == 0x00000000 l00404866
l00404843:
	branch Mem12[eax_20 - 0x00000008:word32] != 0x00000001 l00404866
l00404866:
	word32 eax_32 = fn00404304(edx, ecx)
	edi_17 = eax_32
	word32 eax_43 = Mem12[eax:word32]
	branch eax_43 == 0x00000000 l00404885
l00404875:
	word32 ecx_48 = Mem12[eax_43 - 0x00000004:word32]
	branch ecx_48 < edx l00404880
l0040487E:
	ecx_48 = edx
l00404880:
	fn00402C1C(eax_43, ecx_48, eax_32)
l00404885:
	word32 edx_68
	fn00404240(eax, out edx_68)
	Mem77[eax:word32] = edi_17
l00404849:
	fn00402A78(fp - 16, edx + 0x00000009, dwLoc14)
	Mem93[eax:word32] = eax_20
	Mem94[eax_20 - 0x00000004:word32] = edx
	Mem95[edx + eax_20:byte] = 0x00
l0040488E:
	return
fn00404830_exit:


word32 fn00404894(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebx esp
// Trashed: SCZO ebx ecx edx esi esp Top
// Preserved: eax
fn00404894_entry:
l00404894:
	fn004048B0(eax, 0x00000000, edx)
	return esi
fn00404894_exit:


void fn004048B0(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: ebx esp
fn004048B0_entry:
l004048B0:
	word32 edx_10 = ecx
	word32 ecx_11 = 0x00000000
	branch edx == 0x00000000 l004048C0
l004048BB:
	ecx_11 = Mem6[edx - 0x00000004:word32]
	edx_10 = ecx - ecx_11
l004048C0:
	fn004031AC(eax, edx_10)
l004048CA_thunk_fn00403158:
	fn00403158(eax, ecx_11, edx)
	return
fn004048B0_exit:


void fn00404900(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SCZO eax edx esp Top
// Preserved:
fn00404900_entry:
l00404900:
	word32 edx_6 = Mem0[eax:word32]
	branch edx_6 == 0x00000000 l00404914
l00404906:
	Mem10[eax:word32] = 0x00000000
	SysFreeString(edx_6)
l00404914:
	return
fn00404900_exit:


void fn00404918(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: ebx esi esp
fn00404918_entry:
l00404918:
	word32 ebx_11 = eax
	word32 esi_13 = edx
l0040491E:
	word32 eax_16 = Mem15[ebx_11:word32]
	branch eax_16 == 0x00000000 l00404930
l00404924:
	Mem20[ebx_11:word32] = 0x00000000
	SysFreeString(eax_16)
l00404930:
	ebx_11 = ebx_11 + 0x00000004
	esi_13 = esi_13 - 0x00000001
	branch esi_13 != 0x00000000 l0040491E
l00404936:
	return
fn00404918_exit:


void fn0040493C(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0040493C_entry:
l0040493C:
	branch edx == 0x00000000 l0040493E_thunk_fn00404900
l0040493E_thunk_fn00404900:
	fn00404900(eax)
	return
l00404944:
	word32 ecx_17 = Mem0[edx - 0x00000004:word32]
	branch ecx_17 >>u 0x00000001 == 0x00000000 l00404949_thunk_fn00404900
l00404949_thunk_fn00404900:
	fn00404900(eax)
	return
l0040494F:
	word32 eax_34 = SysReAllocStringLen(eax, edx, ecx_17 >>u 0x00000001)
	word24 eax_24_8_39 = SLICE(eax_34, word24, 8)
	branch eax_34 == 0x00000000 l004048D0
l004048D0:
	word32 eax_40 = SEQ(eax_24_8_39, 0x01)
l004048D2_thunk_fn00402B7C:
	fn00402B7C(eax_40, ecx_17 >>u 0x00000001, eax)
l0040495F:
	return
fn0040493C_exit:


word32 fn00404B90(word32 eax, word32 edx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: ecx edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00404B90_entry:
l00404B90:
	word32 ecx_21 = (uint32) (uint8) Mem9[edx + 0x00000001:byte]
	word32 esi_22 = ecx_21 + 0x0000000A + edx
	word32 edi_23 = Mem17[ecx_21 + 0x00000006 + edx:word32]
l00404BA2:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 edx_38
	word32 ecx_37 = fn00404BC0(Mem17[esi_22 + 0x00000004:word32] + eax, 0x00000001, Mem17[Mem17[esi_22:word32]:word32], stackArg0, out edx_38)
	esi_22 = esi_22 + 0x00000008
	edi_23 = edi_23 - 0x00000001
	branch edi_23 > 0x00000000 l00404BA2
l00404BBB:
	edxOut = edx_38
	return ecx_37
fn00404B90_exit:


word32 fn00404BC0(word32 eax, word32 ecx, word32 edx, word32 dwArg00, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: ecx edx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx edi esi esp
fn00404BC0_entry:
	word24 eax_24_8_131 = SLICE(eax, word24, 8)
l00404BC0:
	branch ecx == 0x00000000 l00404C52
l00404BC8:
	word32 ebx_107 = eax
	word32 edi_111 = ecx
	byte al_23 = Mem16[edx:byte]
	ecx = 0x00000000
	edx = (uint32) (uint8) Mem16[edx + 0x00000001:byte] (alias)
	branch al_23 == 0x0A l00404C00
l00404BDE:
	branch al_23 == 0x0B l00404C00
l00404BE2:
	branch al_23 == 0x0C l00404C0A
l00404C0A:
	Mem34[ebx_107:word32] = 0x00000000
	Mem35[ebx_107 + 0x00000004:word32] = 0x00000000
	Mem36[ebx_107 + 0x00000008:word32] = 0x00000000
	Mem37[ebx_107 + 0x0000000C:word32] = 0x00000000
	ebx_107 = ebx_107 + 0x00000010
	edi_111 = edi_111 - 0x00000001
	branch edi_111 > 0x00000000 l00404C0A
l00404C1B:
l00404BE6:
	branch al_23 == 0x0D l00404C1D
l00404C1D:
l00404C20:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	ebx_107 = ebx_107 + Mem47[(edx + 0x00000002) + edx:word32]
	word32 stackArg0 = <invalid>
	ecx = fn00404BC0(ebx_107, Mem47[edx + 0x00000006 + edx:word32], Mem47[Mem47[edx + 0x0000000A + edx:word32]:word32], stackArg0, out edx)
	edi_111 = edi_111 - 0x00000001
	branch edi_111 > 0x00000000 l00404C20
l00404C38:
l00404BEA:
	branch al_23 == 0x0E l00404C3B
l00404C3B:
l00404C3E:
	ebx_107 = ebx_107 + Mem78[(edx + 0x00000002) + edx:word32]
	ecx = fn00404B90(ebx_107, edx, out edx)
	edi_111 = edi_111 - 0x00000001
	branch edi_111 > 0x00000000 l00404C3E
l00404C4E:
l00404BEE:
	branch al_23 == 0x0F l00404C00
l00404BF2:
	branch al_23 == 0x11 l00404C00
l00404C00:
	Mem108[ebx_107:word32] = 0x00000000
	ebx_107 = ebx_107 + 0x00000004
	edi_111 = edi_111 - 0x00000001
	branch edi_111 > 0x00000000 l00404C00
l00404C08:
l00404C4F:
l00404C52:
	edxOut = edx
	return ecx
fn00404BC0_exit:
l00404BF6:
	word32 eax_132 = SEQ(eax_24_8_131, 0x02)
l00404BFB_thunk_fn00402B7C:
	fn00402B7C(eax_132, 0x00000000, dwArg00)


word32 fn00404C60(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: ecx
// Trashed: SCZO ecx edx Top
// Preserved: eax ebx edi esi esp
fn00404C60_entry:
l00404C60:
	word32 ecx_21 = (uint32) (uint8) Mem9[edx + 0x00000001:byte]
	word32 esi_22 = ecx_21 + 0x0000000A + edx
	word32 edi_23 = Mem17[ecx_21 + 0x00000006 + edx:word32]
l00404C72:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 ecx_37
	word32 ebp_65
	fn00404CAC(Mem17[esi_22 + 0x00000004:word32] + eax, 0x00000001, Mem17[Mem17[esi_22:word32]:word32], stackArg0, out ecx_37, out ebp_65)
	esi_22 = esi_22 + 0x00000008
	edi_23 = edi_23 - 0x00000001
	branch edi_23 > 0x00000000 l00404C72
l00404C8B:
	return ecx_37
fn00404C60_exit:


word32 fn00404C94(word32 eax, word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax_24_8:[0..23] ecx:[0..31] fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00404C94_entry:
l00404C94:
	branch Mem0[0x0042800C:word32] == 0x00000000 l00404CA4
l00404CA4:
	fn00402B7C(SEQ(eax_24_8, 0x10), ecx, dwLoc04)
l00404C9D:
	word32 ecx_15
	call Mem0[0x0042800C:word32] (retsize: 4;)
		uses: eax_24_8:eax_24_8,ecx:ecx,Stack +0000:dwLoc04
		defs: ecx:ecx_15
	return ecx_15
fn00404C94_exit:


word32 fn00404CAC(word32 eax, word32 ecx, word32 edx, word32 dwArg00, ptr32 & ecxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: eax ebp ecx
// Trashed: SCZO ebp ecx edx Top
// Preserved: eax ebx edi esi esp
fn00404CAC_entry:
l00404CAC:
	branch ecx == 0x00000000 l00404D95
l00404CB5:
	word32 ebx_119 = eax
	word32 edi_100 = ecx
	byte al_24 = Mem18[edx:byte]
	word32 edx_88 = (uint32) (uint8) Mem18[edx + 0x00000001:byte]
	branch al_24 == 0x0A l00404CEF
l00404CEF:
	branch ecx > 0x00000001 l00404D00
l00404D00:
	fn00404264(eax, ecx)
l00404CF6:
	word32 edx_294
	ecx = fn00404240(eax, out edx_294)
l00404CCA:
	branch al_24 == 0x0B l00404D0C
l00404D0C:
	branch ecx > 0x00000001 l00404D1A
l00404D1A:
	fn00404918(eax, ecx)
l00404D13:
	fn00404900(eax)
l00404CCE:
	branch al_24 == 0x0C l00404D23
l00404D23:
	ebx_119 = ebx_119 + 0x00000010
	ecx = fn00404C94(SLICE(ebx_119, word24, 8), ecx)
	edi_100 = edi_100 - 0x00000001
	branch edi_100 > 0x00000000 l00404D23
l00404D30:
l00404CD2:
	branch al_24 == 0x0D l00404D32
l00404D32:
l00404D35:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	ebx_119 = ebx_119 + Mem86[(edx + 0x00000002) + edx_88:word32]
	word32 stackArg0 = <invalid>
	word32 ebp_293
	fn00404CAC(ebx_119, Mem86[edx + 0x00000006 + edx_88:word32], Mem86[Mem86[edx + 0x0000000A + edx_88:word32]:word32], stackArg0, out ecx, out ebp_293)
	edi_100 = edi_100 - 0x00000001
	branch edi_100 > 0x00000000 l00404D35
l00404D4D:
l00404CD6:
	branch al_24 == 0x0E l00404D50
l00404D50:
l00404D53:
	ebx_119 = ebx_119 + Mem117[(edx + 0x00000002) + edx_88:word32]
	ecx = fn00404C60(ebx_119, edx)
	edi_100 = edi_100 - 0x00000001
	branch edi_100 > 0x00000000 l00404D53
l00404D63:
l00404CDA:
	branch al_24 == 0x0F l00404D66
l00404D66:
	fn00405BC8(ebx_119)
	ebx_119 = ebx_119 + 0x00000004
	edi_100 = edi_100 - 0x00000001
	branch edi_100 > 0x00000000 l00404D66
l00404D73:
l00404CE2:
	branch al_24 == 0x11 l00404D75
l00404D75:
	ebx_119 = ebx_119 + 0x00000004
	ecx = fn0040547C(ebx_119, edx)
	edi_100 = edi_100 - 0x00000001
	branch edi_100 > 0x00000000 l00404D75
l00404D84:
l00404D91:
l00404D95:
	ecxOut = ecx
	ebpOut = ebp
	return <invalid>
fn00404CAC_exit:
l00404CEA:
l00404D86:
	word32 eax_204 = SEQ(SLICE(eax, word24, 8), 0x02)
l00404D8C_thunk_fn00402B7C:
	fn00402B7C(eax_204, ecx, dwArg00)


word32 fn00404DA4(word32 eax, word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax_24_8:[0..23] ecx:[0..31] fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00404DA4_entry:
l00404DA4:
	branch Mem0[0x00428014:word32] == 0x00000000 l00404DB4
l00404DB4:
	fn00402B7C(SEQ(eax_24_8, 0x10), ecx, dwLoc04)
l00404DAD:
	word32 ecx_15
	call Mem0[0x00428014:word32] (retsize: 4;)
		uses: eax_24_8:eax_24_8,ecx:ecx,Stack +0000:dwLoc04
		defs: ecx:ecx_15
	return ecx_15
fn00404DA4_exit:


void fn00404DBC(word32 eax, word32 ecx, word32 edx, word32 ebx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ebx:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: D ebp ebx edi esi esp
fn00404DBC_entry:
l00404DBC:
	word32 edi_192 = (uint32) (uint8) Mem15[ecx + 0x00000001:byte] + 0x0000000A + ecx
	word32 ebp_128 = Mem15[edi_192 - 0x00000004:word32]
	word32 eax_191 = 0x00000000
	word32 ecx_30 = Mem15[edi_192 - 0x00000008:word32]
l00404DD6:
	word32 ecx_37 = Mem34[edi_192 + 0x00000004:word32] - eax_191
	word24 ecx_24_8_96 = SLICE(ecx_37, word24, 8)
	branch ecx_37 <= 0x00000000 l00404DE8
l00404DDD:
	ecx_24_8_96 = SLICE(fn00402C1C(eax_191 + edx, ecx_37, eax_191 + eax), word24, 8) (alias)
l00404DE8:
	word32 eax_107
	word32 eax_55 = Mem34[edi_192 + 0x00000004:word32]
	word32 edx_57 = Mem34[Mem34[edi_192:word32]:word32]
	word24 eax_24_8_235 = SLICE(eax_55, word24, 8)
	byte cl_58 = Mem34[edx_57:byte]
	branch cl_58 == 0x0A l00404E27
l00404E27:
	fn00404294(eax_55 + eax, Mem34[eax_55 + edx:word32])
	eax_107 = 0x00000004
l00404DF6:
	branch cl_58 == 0x0B l00404E38
l00404E38:
	fn0040493C(eax_55 + eax, Mem34[eax_55 + edx:word32])
	eax_107 = 0x00000004
l00404DFB:
	word32 ecx_99 = SEQ(ecx_24_8_96, cl_58)
	branch cl_58 == 0x0C l00404E49
l00404E49:
	fn00404DA4(SLICE(eax_55 + eax, word24, 8), ecx_99)
	eax_107 = 0x00000010
l00404E00:
	branch cl_58 == 0x0D l00404E5A
l00404E5A:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 ecx_113 = (uint32) (uint8) Mem34[edx_57 + 0x00000001:byte]
	word32 stackArg0 = <invalid>
	fn00404ED8(eax_55 + eax, Mem121[Mem121[ecx_113 + 0x0000000A + edx_57:word32]:word32], eax_55 + edx, stackArg0, Mem118[ecx_113 + 0x00000006 + edx_57:word32])
	eax_107 = ecx_30
l00404E05:
	branch cl_58 == 0x0E l00404E7A
l00404E7A:
	word32 ecx_146 = Mem34[(uint32) (uint8) Mem34[edx_57 + 0x00000001:byte] + 0x00000002 + edx_57:word32]
	fn00404DBC(eax_55 + eax, edx_57, eax_55 + edx, eax)
	eax_107 = ecx_146
l00404E0A:
	branch cl_58 == 0x0F l00404E93
l00404E93:
	fn00405BE0(eax_55 + eax, Mem34[eax_55 + edx:word32])
	eax_107 = 0x00000004
l00404E13:
	word32 ecx_237 = SEQ(ecx_24_8_96, cl_58)
	branch cl_58 == 0x11 l00404EA4
l00404EA4:
	fn004054B8(eax_55 + eax, edx_57, Mem34[eax_55 + edx:word32])
	eax_107 = 0x00000004
l00404EB5:
	eax_191 = eax_107 + Mem190[edi_192 + 0x00000004:word32]
	edi_192 = edi_192 + 0x00000008
	ebp_128 = ebp_128 - 0x00000001
	branch ebp_128 != 0x00000000 l00404DD6
l00404EC2:
	word32 ecx_201 = ecx_30 - eax_191
	branch ecx_201 <= 0x00000000 l00404ED1
l00404EC7:
	fn00402C1C(eax_191 + edx, ecx_201, eax_191 + eax)
l00404ED1:
	return
fn00404DBC_exit:
l00404E1C:
	word32 eax_236 = SEQ(eax_24_8_235, 0x02)
l00404E22_thunk_fn00402B7C:
	fn00402B7C(eax_236, ecx_237, ebx)


void fn00404ED8(word32 eax, word32 ecx, word32 edx, word32 dwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00404ED8_entry:
	word24 eax_24_8_226 = SLICE(eax, word24, 8)
	word24 ecx_24_8_228 = SLICE(ecx, word24, 8)
l00404ED8:
	word32 esp_109 = fp - 16
	word32 ebx_101 = eax
	word32 esi_103 = edx
	word32 ebp_112 = dwArg04
	byte cl_23 = Mem15[ecx:byte]
	branch cl_23 == 0x0A l00404F1E
l00404F1E:
	fn00404294(ebx_101, Mem15[esi_103:word32])
	ebx_101 = ebx_101 + 0x00000004
	esi_103 = esi_103 + 0x00000004
	ebp_112 = ebp_112 - 0x00000001
	branch ebp_112 != 0x00000000 l00404F1E
l00404F30:
l00404EED:
	branch cl_23 == 0x0B l00404F35
l00404F35:
	fn0040493C(ebx_101, Mem15[esi_103:word32])
	ebx_101 = ebx_101 + 0x00000004
	esi_103 = esi_103 + 0x00000004
	ebp_112 = ebp_112 - 0x00000001
	branch ebp_112 != 0x00000000 l00404F35
l00404F47:
l00404EF2:
	word32 ecx_231 = SEQ(ecx_24_8_228, cl_23)
	branch cl_23 == 0x0C l00404F49
l00404F49:
	ecx_231 = fn00404DA4(SLICE(ebx_101, word24, 8), ecx_231)
	ebx_101 = ebx_101 + 0x00000010
	ebp_112 = ebp_112 - 0x00000001
	branch ebp_112 != 0x00000000 l00404F49
l00404F5B:
l00404EF7:
	branch cl_23 == 0x0D l00404F5D
l00404F5D:
	word32 edi_100 = (uint32) (uint8) Mem15[ecx + 0x00000001:byte] + 0x00000002 + ecx
l00404F66:
	word32 ecx_107 = Mem106[edi_100 + 0x00000008:word32]
	word32 esp_110 = esp_109 - 4
	Mem111[esp_110:word32] = Mem106[edi_100 + 0x00000004:word32]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	fn00404ED8(ebx_101, ecx_107, esi_103, stackArg0, dwArg00)
	esp_109 = esp_110 + 0x00000008
	ebx_101 = ebx_101 + Mem111[edi_100:word32]
	esi_103 = esi_103 + Mem111[edi_100:word32]
	ebp_112 = ebp_112 - 0x00000001
	branch ebp_112 != 0x00000000 l00404F66
l00404F7C:
l00404EFC:
	branch cl_23 == 0x0E l00404F7E
l00404F7E:
	fn00404DBC(ebx_101, ecx, esi_103, ebx_101)
	word32 eax_149 = (uint32) (uint8) Mem15[ecx + 0x00000001:byte]
	ebx_101 = ebx_101 + Mem15[(eax_149 + 0x00000002) + ecx:word32]
	esi_103 = esi_103 + Mem15[(eax_149 + 0x00000002) + ecx:word32]
	ebp_112 = ebp_112 - 0x00000001
	branch ebp_112 != 0x00000000 l00404F7E
l00404F99:
l00404F01:
	branch cl_23 == 0x0F l00404F9B
l00404F9B:
	fn00405BE0(ebx_101, Mem15[esi_103:word32])
	ebx_101 = ebx_101 + 0x00000004
	esi_103 = esi_103 + 0x00000004
	ebp_112 = ebp_112 - 0x00000001
	branch ebp_112 != 0x00000000 l00404F9B
l00404FAD:
l00404F0A:
	word32 ecx_229 = SEQ(ecx_24_8_228, cl_23)
	branch cl_23 == 0x11 l00404FAF
l00404FAF:
	fn004054B8(ebx_101, ecx, Mem15[esi_103:word32])
	ebx_101 = ebx_101 + 0x00000004
	esi_103 = esi_103 + 0x00000004
	ebp_112 = ebp_112 - 0x00000001
	branch ebp_112 != 0x00000000 l00404FAF
l00404FC3:
	return
fn00404ED8_exit:
l00404F13:
	word32 eax_227 = SEQ(eax_24_8_226, 0x02)
l00404F19_thunk_fn00402B7C:
	fn00402B7C(eax_227, ecx_229, dwArg00)


word32 fn00405294(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn00405294_entry:
l00405294:
	branch eax == 0x00000000 l0040529B
l00405298:
	eax = Mem0[eax - 0x00000004:word32]
l0040529B:
	return eax
fn00405294_exit:


word32 fn0040529C(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn0040529C_entry:
l0040529C:
	return fn00405294(eax) - 0x00000001
fn0040529C_exit:


word32 fn004052A4(word32 eax, word32 ecx, word32 edx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ecx edx esp Top
// Preserved:
fn004052A4_entry:
l004052A4:
	fn00404ED8(eax, ecx, edx, dwLoc0C, dwArg04)
	return dwArg00
fn004052A4_exit:


word32 fn004052B4(word32 eax, word32 ecx, word32 edx, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: ebp
// Trashed: SCZO ebp ecx edx Top
// Preserved: esp
fn004052B4_entry:
l004052B4:
l004052B4_thunk_fn00404CAC:
	word32 ebp_12
	word32 ecx_18
	fn00404CAC(eax, ecx, edx, dwArg00, out ecx_18, out ebp_12)
	return ebp_12
fn004052B4_exit:


word32 fn004052BC(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO ecx edx Top
// Preserved: esp
fn004052BC_entry:
l004052BC:
	return fn0040547C(eax, edx)
fn004052BC_exit:


word32 fn004052C4(word32 eax, word32 ecx, word32 edx, word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ebx ecx edi esi esp
// Trashed: SCZDO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004052C4_entry:
l004052C4:
	word32 ecx_237
	word32 eax_25 = Mem23[eax:word32]
	word32 ebp_156 = fp - 4
	word32 esp_15 = fp + 0xFFFFFFD4
	word32 dwLoc1C_329 = eax_25
	word24 eax_24_8_291 = SLICE(dwArg04, word24, 8)
	word32 ebx_28 = Mem26[dwArg04:word32]
	branch ebx_28 > 0x00000000 l00405302
l00405302:
	word32 edi_108 = 0x00000000
	branch eax_25 == 0x00000000 l00405317
l0040530A:
	edi_108 = Mem35[eax_25 - 0x00000004:word32]
	dwLoc1C_329 = eax_25 - 0x00000008
l00405317:
	word32 dwLoc0C_335
	word32 v18_45 = edx + (word32) Mem42[edx + 0x00000001:byte]
	word32 esi_48 = Mem46[v18_45 + 0x00000002:word32]
	word32 edx_49 = Mem46[v18_45 + 0x00000006:word32]
	branch edx_49 == 0x00000000 l00405335
l00405335:
	dwLoc0C_335 = 0x00000000
l0040532E:
	dwLoc0C_335 = Mem46[edx_49:word32]
l0040533A:
	word32 eax_64 = SLICE(esi_48 *s ebx_28, word32, 0)
	word32 eax_73 = (int32) ((word64) eax_64 / ebx_28)
	word24 eax_24_8_77 = SLICE(eax_73, word24, 8)
	branch esi_48 == eax_73 l00405352
l00405352:
	branch dwLoc1C_329 == 0x00000000 l00405364
l0040535C:
	branch Mem87[dwLoc1C_329:word32] != 0x00000001 l004053A0
l004053A0:
	Mem95[dwLoc1C_329:word32] = Mem87[dwLoc1C_329:word32] - 0x00000001
	word32 eax_98 = fn00402A28(eax_64 + 0x00000008, ecx)
	word32 dwLoc14_342 = edi_108
	branch ebx_28 >= edi_108 l004053BB
l004053B8:
	dwLoc14_342 = ebx_28
l004053BB:
	branch dwLoc0C_335 == 0x00000000 l004053ED
l004053ED:
	fn00402C1C(Mem114[eax:word32], dwLoc14_342 *s esi_48, eax_98 + 0x00000008)
l004053C1:
	fn00403020(eax_98 + 0x00000008, 0x00000000, dwLoc14_342 *s esi_48)
	word32 esp_159 = <invalid>
	ebp_156 = fn004052A4(eax_98 + 0x00000008, dwLoc0C_335, Mem147[eax:word32], dwLoc14_342)
	esp_15 = esp_159 + 0x00000004
l00405364:
	branch edi_108 <= ebx_28 l0040538D
l0040536E:
	branch dwLoc0C_335 == 0x00000000 l0040538D
l00405374:
	ebp_156 = fn004052B4(dwLoc1C_329 + 0x00000008 + ebx_28 *s esi_48, edi_108 - ebx_28, dwLoc0C_335, dwLoc30)
	esp_15 = fp + 0xFFFFFFD0
l0040538D:
	fn00402A78(ebp_156 - 0x0000001C, Mem169[ebp_156 - 0x00000014:word32], Mem169[esp_15 + -4:word32])
	Mem209[ebp_156 - 0x00000018:word32] = Mem169[ebp_156 - 0x0000001C:word32]
l00405403:
	Mem213[Mem211[ebp_156 - 0x00000018:word32]:word32] = 0x00000001
	Mem215[ebp_156 - 0x00000018:word32] = Mem213[ebp_156 - 0x00000018:word32] + 0x00000004
	Mem220[Mem215[ebp_156 - 0x00000018:word32]:word32] = ebx_28
	Mem222[ebp_156 - 0x00000018:word32] = Mem220[ebp_156 - 0x00000018:word32] + 0x00000004
	ecx_237 = fn00403020(esi_48 *s edi_108 + Mem222[ebp_156 - 0x00000018:word32], 0x00000000, (ebx_28 - edi_108) *s esi_48)
	branch Mem222[ebp_156 - 0x0000000C:word32] <= 0x00000001 l0040545D
l00405435:
	Mem245[ebp_156 + 0x00000008:word32] = Mem222[ebp_156 + 0x00000008:word32] + 0x00000004
	Mem247[ebp_156 - 0x0000000C:word32] = Mem245[ebp_156 - 0x0000000C:word32] - 0x00000001
	branch ebx_28 < 0x00000001 l0040545D
l00405441:
	word32 ebx_252 = ebx_28
	word32 esi_253 = 0x00000000
l00405444:
	Mem261[esp_15 - 4:word32] = Mem257[ebp_156 + 0x00000008:word32]
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 esp_271 = <invalid>
	word32 ebx_409
	word32 ebp_410
	word32 esi_411
	word32 edi_412
	ecx_237 = fn004052C4(Mem261[ebp_156 - 0x00000018:word32] + esi_253 * 0x00000004, Mem261[ebp_156 - 0x0000000C:word32], Mem261[ebp_156 - 0x00000008:word32], stackArg4, out ebx_409, out ebp_410, out esi_411, out edi_412)
	esp_15 = esp_271 + 0x00000004
	esi_253 = esi_253 + 0x00000001
	ebx_252 = ebx_252 - 0x00000001
	branch ebx_252 != 0x00000000 l00405444
l0040545D:
	Mem286[Mem283[ebp_156 - 0x00000004:word32]:word32] = Mem283[ebp_156 - 0x00000018:word32]
l0040534B:
	fn00402B7C(SEQ(eax_24_8_77, 0x04), ecx, dwLoc30)
l004052E7:
	branch ebx_28 >= 0x00000000 l004052F2
l004052F2:
	ecx_237 = fn004052BC(eax, edx)
l00405465:
	word32 esp_307 = esp_15 + 4
	word32 edi_306 = Mem305[esp_15:word32]
	word32 esi_308 = Mem305[esp_307:word32]
	word32 ebp_313 = Mem305[ebp_156:word32]
	ebxOut = Mem305[esp_307 + 4:word32]
	ebpOut = ebp_313
	esiOut = esi_308
	ediOut = edi_306
	return ecx_237
fn004052C4_exit:
l004052EB:
	fn00402B7C(SEQ(eax_24_8_291, 0x04), ecx, dwLoc30)


word32 fn00405470(word32 eax, word32 ecx, word32 edx, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ebx ecx edi esi
// Trashed: SCZDO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00405470_entry:
l00405470:
	word32 ebx_14
	word32 esi_17
	word32 edi_19
	word32 ebp_21
	word32 ecx_15 = fn004052C4(eax, ecx, edx, fp + 0x00000004, out ebx_14, out ebp_21, out esi_17, out edi_19)
	ebxOut = ebx_14
	ebpOut = ebp_21
	esiOut = esi_17
	ediOut = edi_19
	return ecx_15
fn00405470_exit:


word32 fn0040547C(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO ecx edx Top
// Preserved: eax esp
fn0040547C_entry:
l0040547C:
	word32 ecx_46 = Mem0[eax:word32]
	branch ecx_46 == 0x00000000 l004054B5
l00405482:
	Mem10[eax:word32] = 0x00000000
	__lock()
	word32 v8_11 = Mem10[ecx_46 - 0x00000008:word32] - 0x00000001
	Mem12[ecx_46 - 0x00000008:word32] = v8_11
	branch v8_11 != 0x00000000 l004054B5
l0040548E:
	word32 ecx_22 = (uint32) (uint8) Mem16[edx + 0x00000001:byte]
	word32 eax_17 = ecx_46
	word32 edx_23 = Mem16[ecx_22 + 0x00000006 + edx:word32]
	branch edx_23 == 0x00000000 l004054AC
l0040549E:
	ecx_22 = Mem16[ecx_46 - 0x00000004:word32]
	branch ecx_22 == 0x00000000 l004054AC
l004054A5:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 ebp_74
	eax_17 = fn00404CAC(ecx_46, ecx, Mem16[edx_23:word32], stackArg0, out ecx_22, out ebp_74)
l004054AC:
	fn00402A58(eax_17 - 0x00000008, ecx_22, out ecx_46)
l004054B5:
	return ecx_46
fn0040547C_exit:


void fn004054B8(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO ecx Top
// Preserved: eax ebx edx esp
fn004054B8_entry:
l004054B8:
	word32 ebx_8 = Mem6[eax:word32]
	branch edx == 0x00000000 l004054C3
l004054BF:
	__lock()
	Mem14[edx - 0x00000008:word32] = Mem6[edx - 0x00000008:word32] + 0x00000001
l004054C3:
	branch ebx_8 == 0x00000000 l004054DB
l004054C7:
	__lock()
	word32 v10_21 = Mem20[ebx_8 - 0x00000008:word32] - 0x00000001
	Mem22[ebx_8 - 0x00000008:word32] = v10_21
	branch v10_21 != 0x00000000 l004054DB
l004054CD:
	Mem36[ebx_8 - 0x00000008:word32] = Mem31[ebx_8 - 0x00000008:word32] + 0x00000001
	fn0040547C(eax, ecx)
l004054DB:
	Mem53[eax:word32] = edx
	return
fn004054B8_exit:


word32 fn00405508(word32 eax, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: eax ebp
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esi esp
fn00405508_entry:
l00405508:
	word32 ebx_12 = eax
	branch Mem9[eax + 0x00000010:word32] != 0x00000000 l00405543
l00405518:
	GetModuleFileNameA(Mem19[eax + 0x00000004:word32], fp + 0xFFFFFEF0, 0x00000105)
	word32 eax_27 = fn0040579C(fp + 0xFFFFFEE4, out ebx_12, out ebp)
	Mem40[ebx_12 + 0x00000010:word32] = eax_27
	branch eax_27 != 0x00000000 l00405543
l0040553D:
	Mem45[ebx_12 + 0x00000010:word32] = Mem40[ebx_12 + 0x00000004:word32]
l00405543:
	word32 eax_48 = Mem47[ebx_12 + 0x00000010:word32]
	ebpOut = ebp
	return eax_48
fn00405508_exit:


word32 fn00405550(word32 eax, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: eax ebp
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx edi esi esp
fn00405550_entry:
l00405550:
	word32 edi_41
	word32 eax_19 = Mem15[0x00428038:word32]
	word32 dwLoc10_78 = eax_19
	branch eax_19 == 0x00000000 l0040558F
l00405564:
	branch eax == Mem24[dwLoc10_78 + 0x00000004:word32] l00405579
l0040556B:
	branch eax == Mem24[dwLoc10_78 + 0x00000008:word32] l00405579
l00405572:
	branch eax != Mem24[dwLoc10_78 + 0x0000000C:word32] l00405584
l00405584:
	word32 eax_36 = Mem24[dwLoc10_78:word32]
	dwLoc10_78 = eax_36
	branch eax_36 != 0x00000000 l00405564
l0040558F:
	edi_41 = eax
l00405579:
	edi_41 = fn00405508(dwLoc10_78, out ebp)
l00405591:
	ebpOut = ebp
	return edi_41
fn00405550_exit:


word32 fn00405598(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebp ebx esi esp
fn00405598_entry:
l00405598:
	word32 dwLoc08_51 = eax
l004055AF:
	byte bl_23 = Mem21[dwLoc08_51:byte]
	branch bl_23 == 0x00 l004055BC
l004055B7:
	branch bl_23 != 0x5C l004055A5
l004055A5:
	dwLoc08_51 = CharNextA(dwLoc08_51)
l004055BC:
	return dwLoc08_51
fn00405598_exit:


word32 fn004055C4(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: ebx
// Trashed: SCZO ebx ecx edi edx esi Top
// Preserved: eax ebp esp
fn004055C4_entry:
l004055C4:
	word32 esp_100 = fp + 0xFFFFFD90
	word32 eax_26 = GetModuleHandleA(0x00405778)
	branch eax_26 == 0x00000000 l00405630
l004055EC:
	esp_100 = fp + 0xFFFFFD88
	word32 eax_35 = GetProcAddress(eax_26, 0x00405788)
	branch eax_35 == 0x00000000 l00405630
l00405600:
	esp_100 = fp + 0xFFFFFD7C
	branch eax_35() == 0x00000000 l00405630
l00405630:
	word32 dwLoc14_239
	branch Mem56[eax:byte] != 0x5C l00405679
l00405679:
	dwLoc14_239 = eax + 0x00000002
l00405638:
	branch Mem56[eax + 0x00000001:byte] != 0x5C l0040576C
l00405645:
	word32 eax_70 = fn00405598(eax + 0x00000002)
	branch Mem76[eax_70:byte] == 0x00 l0040576C
l0040565F:
	word32 eax_83 = fn00405598(eax_70 + 0x00000001)
	dwLoc14_239 = eax_83
	branch Mem89[eax_83:byte] == 0x00 l0040576C
l00405677:
l00405682:
	word32 ebx_128 = dwLoc14_239 - eax
	word32 esp_101 = esp_100 - 4
	Mem102[esp_101:word32] = ebx_128 + 0x00000001
	Mem105[esp_101 - 4:word32] = eax
	Mem108[esp_101 - 8:word32] = fp - 0x0000025F
	lstrcpynA(Mem108[esp_101 - 8:LPSTR], Mem108[esp_101 - 4:LPCSTR], Mem108[esp_101:int32])
	esp_100 = esp_101 - 8
l0040574C:
	branch Mem111[dwLoc14_239:byte] != 0x00 l004056A1
l004056A1:
	word32 eax_118 = fn00405598(dwLoc14_239 + 0x00000001)
	word32 edi_126 = eax_118 - dwLoc14_239
	branch edi_126 + ebx_128 > 0x00000104 l0040576C
l004056C3:
	word32 esp_135 = esp_100 - 4
	Mem136[esp_135:word32] = edi_126 + 0x00000001
	Mem139[esp_135 - 4:word32] = dwLoc14_239
	Mem143[esp_135 - 8:word32] = fp - 0x0000025F + ebx_128
	lstrcpynA(Mem143[esp_135 - 8:LPSTR], Mem143[esp_135 - 4:LPCSTR], Mem143[esp_135:int32])
	Mem147[esp_135 - 12:word32] = fp - 0x0000015A
	Mem150[esp_135 - 16:word32] = fp - 0x0000025F
	esp_100 = esp_135 - 16
	word32 eax_151 = FindFirstFileA(Mem150[esp_135 - 16:LPCSTR], Mem150[esp_135 - 12:LPWIN32_FIND_DATAA])
	branch eax_151 == 0xFFFFFFFF l0040576C
l004056F1:
	Mem156[esp_135 - 20:word32] = eax_151
	FindClose(Mem156[esp_135 - 20:HANDLE])
	Mem160[esp_135 - 24:word32] = fp - 0x0000012E
	esp_100 = esp_135 - 24
	branch lstrlenA(Mem160[esp_135 - 24:LPCSTR]) + (ebx_128 + 0x00000001) > 0x00000104 l0040576C
l00405710:
	Mem167[fp - 0x0000025F + ebx_128:byte] = 0x5C
	Mem172[esp_135 - 28:word32] = 0x00000105 - ebx_128 - 0x00000001
	Mem175[esp_135 - 32:word32] = fp - 0x0000012E
	Mem180[esp_135 - 36:word32] = fp - 0x0000025F + ebx_128 + 0x00000001
	lstrcpynA(Mem180[esp_135 - 36:LPSTR], Mem180[esp_135 - 32:LPCSTR], Mem180[esp_135 - 28:int32])
	Mem184[esp_135 - 40:word32] = fp - 0x0000012E
	esp_100 = esp_135 - 40
	ebx_128 = ebx_128 + (lstrlenA(Mem184[esp_135 - 40:LPCSTR]) + 0x00000001)
	dwLoc14_239 = eax_118
l00405758:
	word32 esp_192 = esp_100 - 4
	Mem193[esp_192:word32] = edx
	Mem196[esp_192 - 4:word32] = fp - 0x0000025F
	Mem199[esp_192 - 8:word32] = eax
	lstrcpynA(Mem199[esp_192 - 8:LPSTR], Mem199[esp_192 - 4:LPCSTR], Mem199[esp_192:int32])
	esp_100 = esp_192 - 8
l00405617:
	lstrcpynA(eax, fp - 0x0000025F, edx)
	esp_100 = fp + 0xFFFFFD70
l0040576C:
	return Mem212[esp_100 + 8:word32]
fn004055C4_exit:


word32 fn0040579C(word32 eax, ptr32 & ebxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: eax ebp ebx
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0040579C_entry:
l0040579C:
	GetModuleFileNameA(0x00000000, fp - 0x00000125, 0x00000105)
	word32 esp_225 = fp + 0xFFFFFEB4
	branch RegOpenKeyExA(0x80000001, 0x004059E0, 0x00000000, 0x000F0019, fp - 0x0000000C) == 0x00000000 l0040581E
l004057DE:
	esp_225 = fp + 0xFFFFFEA0
	branch RegOpenKeyExA(0x80000002, 0x004059E0, 0x00000000, 0x000F0019, fp - 0x0000000C) == 0x00000000 l0040581E
l004057FC:
	esp_225 = fp + 0xFFFFFE8C
	branch RegOpenKeyExA(0x80000001, 0x004059FC, 0x00000000, 0x000F0019, fp - 0x0000000C) != 0x00000000 l004058A7
l004058A7:
	lstrcpynA(fp - 0x00000125, eax, 0x00000105)
	GetLocaleInfoA(GetThreadLocale(), 0x00000003, fp - 0x00000011, 0x00000005)
	word32 esp_146 = fp + 0xFFFFFE70
	word32 ebx_149 = 0x00000000
	branch bLoc0125 == 0x00 l004059D7
l004058DE:
	branch bLoc11 != 0x00 l004058EE
l004058E4:
	branch 0x00 == 0x00 l004059D7
l004058EE:
	esp_146 = fp + 0xFFFFFE6C
	word32 dwLoc20_341 = lstrlenA(fp - 0x00000125) + (fp - 0x00000125)
l0040590A:
	branch Mem106[dwLoc20_341:byte] == 0x2E l0040591D
l00405912:
	branch fp - 0x00000125 != dwLoc20_341 l00405907
l00405907:
	dwLoc20_341 = dwLoc20_341 - 0x00000001
l0040591D:
	branch fp - 0x00000125 == dwLoc20_341 l004059D7
l0040592C:
	word32 v14_121 = dwLoc20_341 + 0x00000001
	branch 0x00 == 0x00 l00405961
l00405935:
	lstrcpynA(v14_121, fp - 0x00000016, 0x00000105 - (v14_121 - (fp - 0x00000125)))
	esp_146 = fp + 0xFFFFFE54
	ebx_149 = LoadLibraryExA(fp - 0x00000125, 0x00000000, 0x00000002)
l00405961:
	branch ebx_149 != 0x00000000 l004059D7
l00405965:
	branch bLoc11 == 0x00 l004059D7
l0040596B:
	word32 esp_167 = esp_146 - 4
	Mem168[esp_167:word32] = 0x00000105 - (v14_121 - (fp - 0x00000125))
	Mem171[esp_167 - 4:word32] = fp - 0x00000011
	Mem174[esp_167 - 8:word32] = v14_121
	lstrcpynA(Mem174[esp_167 - 8:LPSTR], Mem174[esp_167 - 4:LPCSTR], Mem174[esp_167:int32])
	Mem177[esp_167 - 12:word32] = 0x00000002
	Mem179[esp_167 - 16:word32] = 0x00000000
	Mem182[esp_167 - 20:word32] = fp - 0x00000125
	word32 eax_183 = LoadLibraryExA(Mem182[esp_167 - 20:LPCSTR], Mem182[esp_167 - 16:HANDLE], Mem182[esp_167 - 12:DWORD])
	esp_146 = esp_167 - 20
	ebx_149 = eax_183
	branch eax_183 != 0x00000000 l004059D7
l004059A1:
	Mem196[esp_167 - 24:word32] = 0x00000105 - (v14_121 - (fp - 0x00000125))
	Mem199[esp_167 - 28:word32] = fp - 0x00000011
	Mem202[esp_167 - 32:word32] = v14_121
	lstrcpynA(Mem202[esp_167 - 32:LPSTR], Mem202[esp_167 - 28:LPCSTR], Mem202[esp_167 - 24:int32])
	Mem205[esp_167 - 36:word32] = 0x00000002
	Mem207[esp_167 - 40:word32] = 0x00000000
	Mem210[esp_167 - 44:word32] = fp - 0x00000125
	esp_146 = esp_167 - 44
	ebx_149 = LoadLibraryExA(Mem210[esp_167 - 44:LPCSTR], Mem210[esp_167 - 40:HANDLE], Mem210[esp_167 - 36:DWORD])
l004059D7:
	ebxOut = Mem216[esp_146:word32]
	ebpOut = ebp
	return ebx_149
l0040581E:
	word32 esp_226 = esp_225 - 4
	Mem228[esp_226:word32] = fp - 4
	Mem230[esp_226 - 4:word32] = 0x004058A0
	Mem235[esp_226 - 8:word32] = Mem230[fs:0x00000000:word32]
	Mem236[fs:0x00000000:word32] = esp_226 - 8
	word32 ebx_240 = fn004055C4(fp - 0x00000125, 0x00000105)
	Mem251[esp_226 - 12:word32] = fp - 0x0000001C
	Mem254[esp_226 - 16:word32] = fp - 0x00000016
	Mem256[esp_226 - 20:word32] = 0x00000000
	Mem258[esp_226 - 24:word32] = 0x00000000
	Mem261[esp_226 - 28:word32] = fp - 0x00000125
	Mem264[esp_226 - 32:word32] = dwLoc0C
	word32 esp_263 = esp_226 - 32
	branch RegQueryValueExA(Mem264[esp_226 - 32:HKEY], Mem264[esp_226 - 28:LPCSTR], Mem264[esp_226 - 24:LPDWORD], Mem264[esp_226 - 20:LPDWORD], Mem264[esp_226 - 16:LPBYTE], Mem264[esp_226 - 12:LPDWORD]) == 0x00000000 l00405885
l00405863:
	Mem271[esp_226 - 36:word32] = fp - 0x0000001C
	Mem274[esp_226 - 40:word32] = fp - 0x00000016
	Mem276[esp_226 - 44:word32] = 0x00000000
	Mem278[esp_226 - 48:word32] = 0x00000000
	Mem280[esp_226 - 52:word32] = 0x00405A1C
	Mem283[esp_226 - 56:word32] = dwLoc0C
	esp_263 = esp_226 - 56
	branch RegQueryValueExA(Mem283[esp_226 - 56:HKEY], Mem283[esp_226 - 52:LPCSTR], Mem283[esp_226 - 48:LPDWORD], Mem283[esp_226 - 44:LPDWORD], Mem283[esp_226 - 40:LPBYTE], Mem283[esp_226 - 36:LPDWORD]) == 0x00000000 l00405885
l00405881:
l00405885:
	Mem302[fs:0x00000000:word32] = Mem290[esp_263:word32]
	word32 esp_296 = esp_263 + 4
	Mem304[esp_296 + 4:word32] = 0x004058A7
	Mem307[esp_296:word32] = dwLoc0C
	word32 eax_308 = RegCloseKey(Mem307[esp_296:HKEY])
	ebxOut = ebx_240
	ebpOut = fp - 4
	return eax_308
fn0040579C_exit:


void fn00405AD8(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00405AD8_entry:
l00405AD8:
	word32 eax_20 = Mem19[0x0042803C:word32]
	word32 esp_15 = fp + 0xFFFFFFE8
	word32 dwLoc0C_84 = eax_20
	branch eax_20 == 0x00000000 l00405B2B
l00405AF2:
	word32 esp_28 = esp_15 - 4
	Mem30[esp_28:word32] = fp - 4
	Mem32[esp_28 - 4:word32] = 0x00405B13
	Mem36[esp_28 - 8:word32] = Mem32[fs:0x00000000:word32]
	Mem37[fs:0x00000000:word32] = esp_28 - 8
	word32 esp_43
	call Mem37[dwLoc0C_84 + 0x00000004:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_52
		defs: esp:esp_43
	word32 edx_52 = Mem37[esp_43:word32]
	Mem58[fs:0x00000000:word32] = edx_52
	esp_15 = esp_43 + 12
l00405B1D:
	word32 eax_60 = Mem58[dwLoc0C_84:word32]
	dwLoc0C_84 = eax_60
	branch eax_60 != 0x00000000 l00405AF2
l00405B2B:
	return
fn00405AD8_exit:


void fn00405B34(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: edx Top
// Preserved: esp
fn00405B34_entry:
l00405B34:
	Mem7[eax:word32] = Mem0[0x00428038:word32]
	Mem8[0x00428038:word32] = eax
	return
fn00405B34_exit:


void fn00405B44(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: esp
// Trashed: SCZO eax ebp ecx edx esp Top
// Preserved:
fn00405B44_entry:
l00405B44:
	word32 v9_19 = Mem17[fs:0x00000000:word32]
	Mem22[fs:0x00000000:word32] = fp + 0xFFFFFFE8
	fn00405AD8(Mem22[eax + 0x00000004:word32])
	Mem40[fs:0x00000000:word32] = v9_19
	branch eax != Mem42[0x00428038:word32] l00405B8A
l00405B8A:
	word32 eax_46 = Mem42[0x00428038:word32]
	word32 dwLoc0C_74 = eax_46
	branch eax_46 == 0x00000000 l00405BBC
l00405B98:
	branch Mem51[dwLoc0C_74:word32] != eax l00405BAE
l00405BAE:
	word32 eax_57 = Mem51[dwLoc0C_74:word32]
	dwLoc0C_74 = eax_57
	branch eax_57 != 0x00000000 l00405B98
l00405BA2:
	Mem64[dwLoc0C_74:word32] = Mem51[eax:word32]
l00405B7E:
	Mem67[0x00428038:word32] = Mem42[eax:word32]
l00405BBC:
	return
fn00405B44_exit:


void fn00405BC8(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SCZO edx Top
// Preserved: eax esp
fn00405BC8_entry:
l00405BC8:
	word32 edx_6 = Mem0[eax:word32]
	branch edx_6 == 0x00000000 l00405BDC
l00405BCE:
	Mem10[eax:word32] = 0x00000000
	word32 eax_15 = Mem14[edx_6:word32]
	call Mem14[eax_15 + 0x00000008:word32] (retsize: 4;)
		uses: eax:eax_15,Stack +0004:edx_6,Stack +0008:eax
l00405BDC:
	return
fn00405BC8_exit:


void fn00405BE0(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00405BE0_entry:
l00405BE0:
	branch edx == 0x00000000 l00405BFD
l00405BFD:
	word32 ecx_10 = Mem0[eax:word32]
	Mem13[eax:word32] = edx
	branch ecx_10 == 0x00000000 l00405C0B
l00405C05:
	word32 eax_15 = Mem13[ecx_10:word32]
	call Mem17[eax_15 + 0x00000008:word32] (retsize: 4;)
		uses: eax:eax_15,edx:edx,Stack +0004:ecx_10
l00405C0B:
	return
l00405BE4:
	word32 eax_28 = Mem27[edx:word32]
	word32 edx_32
	call Mem30[eax_28 + 0x00000004:word32] (retsize: 4;)
		uses: eax:eax_28,edx:edx,Stack +0004:edx,Stack +0008:eax,Stack +000C:edx
		defs: edx:edx_32
	word32 ecx_39 = Mem30[eax:word32]
	Mem40[eax:word32] = edx
	branch ecx_39 != 0x00000000 l00405BF6
l00405BF6:
	word32 eax_45 = Mem40[ecx_39:word32]
	call Mem47[eax_45 + 0x00000008:word32] (retsize: 4;)
		uses: eax:eax_45,edx:edx_32,Stack +0004:ecx_39
	return
l00405BF5:
	return
fn00405BE0_exit:


word32 fn00406050(word32 eax, word32 edx, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ecx edx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn00406050_entry:
l00406050:
	branch eax == 0x00000000 l0040609E
l00406061:
	branch Mem13[eax + 0x00000004:word32] >= 0x00010000 l00406094
l00406094:
	ecx = fn00404438(edx, Mem13[eax + 0x00000004:word32], out edx)
l0040606A:
	ecx = fn00404330(edx, LoadStringA(fn00405550(Mem40[Mem40[eax:word32]:word32], out ebp), Mem37[eax + 0x00000004:word32], fp + 0xFFFFEFF8, 0x00001000), fp + 0xFFFFEFE8, out edx)
l0040609E:
	edxOut = edx
	ebpOut = ebp
	return ecx
fn00406050_exit:


word32 fn00406264(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax esp
// Trashed: eax esp Top
// Preserved:
fn00406264_entry:
l00406264:
	return LocalAlloc(0x00000040, eax)
fn00406264_exit:


word32 fn00406270()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn00406270_entry:
l00406270:
	return 0x0000000C
fn00406270_exit:


void fn00406278(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: ebx esp
fn00406278_entry:
l00406278:
	word32 eax_7 = fn00406270()
	branch eax_7 == 0x00000000 l004062BA
l00406284:
	branch Mem6[0x004280A0:word32] != 0xFFFFFFFF l00406297
l00406297:
	word32 eax_18 = fn00406264(eax_7)
	word32 esp_19 = <invalid>
	branch eax_18 != 0x00000000 l004062AE
l004062AE:
	Mem24[esp_19 - 4:word32] = eax_18
	Mem27[esp_19 - 8:word32] = Mem24[0x004280A0:word32]
	TlsSetValue(Mem27[esp_19 - 8:DWORD], Mem27[esp_19 - 4:LPVOID])
l004062BA:
	return
fn00406278_exit:
l004062A2:
	fn00404234(0x000000E2, ecx, Mem6[esp_19 + -4:word32])
l0040628D:
	fn00404234(0x000000E2, ecx, dwLoc08)


word32 fn004062BC(word32 ecx, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx_24_8:[0..23] fs:[0..15]
// LiveOut: eax ecx edx
// Trashed: SCZO eax ecx edx esp Top
// Preserved:
fn004062BC_entry:
l004062BC:
	byte cl_5 = Mem0[0x0042B664:byte]
	word32 eax_6 = Mem0[0x004280A0:word32]
	word32 ecx_17 = SEQ(ecx_24_8, cl_5)
	branch cl_5 != 0x00 l004062F1
l004062F1:
	word32 eax_12 = TlsGetValue(eax_6)
	branch eax_12 == 0x00000000 l004062D6
l004062D6:
	fn00406278(ecx_17)
	word32 eax_27 = TlsGetValue(Mem11[0x004280A0:word32])
	branch eax_27 == 0x00000000 l004062EB
l004062EB:
	word32 eax_31 = Mem26[0x0042B670:word32]
	ecxOut = <invalid>
	edxOut = edx
	return eax_31
l004062EA:
	ecxOut = <invalid>
	edxOut = edx
	return eax_27
l004062FB:
	ecxOut = <invalid>
	edxOut = edx
	return eax_12
l004062CB:
	word32 edx_32 = Mem0[fs:0x0000002C:word32]
	word32 eax_33 = Mem0[edx_32 + eax_6 * 0x00000004:word32]
	ecxOut = <invalid>
	edxOut = edx_32
	return eax_33
fn004062BC_exit:


void fn004062FC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: eax edx Top
// Preserved: esp
fn004062FC_entry:
l004062FC:
	fn00405B34(0x004280A4)
	return
fn004062FC_exit:


void fn00406308(word32 eax, word32 ebp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ebp:[0..31] fs:[0..15]
// LiveOut: esp
// Trashed: SCZO eax ebx ecx edx esp Top
// Preserved:
fn00406308_entry:
l00406308:
	Mem10[0x004280A0:word32] = 0x00000000
	Mem14[0x0042B668:word32] = GetModuleHandleA(0x00000000)
	Mem16[0x004280A8:word32] = Mem14[0x0042B668:word32]
	Mem18[0x004280AC:word32] = 0x00000000
	Mem22[0x004280B0:word32] = 0x00000000
	fn004062FC()
	fn00403F88(eax, 0x004280A4, ebp)
	return
fn00406308_exit:


void fn00406384(word32 eax, word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: eax Top
// Preserved: ebp ebx esp
fn00406384_entry:
l00406384:
	Mem13[dwArg04:word32] = eax
	Mem15[dwArg04 + 0x00000004:word32] = edx
	Mem17[dwArg04 + 0x0000000C:word32] = dwArg08
	Mem19[dwArg04 + 0x00000008:word32] = ecx
	return
fn00406384_exit:


word32 fn0040772C(word32 edx, ptr32 & clOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] fs:[0..15]
// LiveOut: eax ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0040772C_entry:
	word24 edx_24_8_26 = SLICE(edx, word24, 8)
l0040772C:
	word32 ecx_29
	word32 ecx_35
	word32 eax_34 = fn00403C5C(fn0040B100(Mem22[0x00407178:word32], eax, SEQ(edx_24_8_26, 0x01), out ecx_29), ecx_29, edx, out ecx_35)
	clOut = <invalid>
	return eax_34
fn0040772C_exit:


void fn004077C0(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn004077C0_entry:
l004077C0:
	word32 eax_20 = fn00404500(eax)
	fn00404830(edx, ecx, eax_20)
	word32 ebx_25 = eax_20
	word32 dwLoc14_84 = eax
	word32 dwLoc10_85 = Mem38[edx:word32]
	branch eax_20 == 0x00000000 l0040780A
l004077E9:
	byte al_47 = Mem45[dwLoc14_84:byte]
	branch al_47 <u 0x41 l004077F8
l004077F2:
	branch al_47 >u 0x5A l004077F8
l004077F6:
	al_47 = al_47 + 0x20
l004077F8:
	Mem58[dwLoc10_85:byte] = al_47
	dwLoc14_84 = dwLoc14_84 + 0x00000001
	dwLoc10_85 = dwLoc10_85 + 0x00000001
	ebx_25 = ebx_25 - 0x00000001
	branch ebx_25 != 0x00000000 l004077E9
l0040780A:
	return
fn004077C0_exit:


byte fn00407810(word32 eax, word32 ecx, word32 edx, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31]
// LiveOut: eax ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn00407810_entry:
l00407810:
	word32 esi_11 = eax
	word32 edi_129 = edx
	word32 eax_16 = 0x00000000
	word32 ecx_18 = ecx >> 0x00000002
	bool Z_29 = SLICE(cond(ecx >> 0x00000002), bool, 2)
	branch ecx >> 0x00000002 < 0x00000000 l0040782C
l00407822:
	branch ecx_18 == 0x00000000 l00407824
l00407822_1:
	Z_29 = SLICE(cond(Mem9[esi_11:word32] - Mem9[edi_129:word32]), bool, 2) (alias)
	esi_11 = esi_11 + 0x00000004
	edi_129 = edi_129 + 0x00000004
	ecx_18 = ecx_18 - 0x00000001
	branch Mem9[esi_11:word32] != Mem9[edi_129:word32] l00407822
l00407824:
	branch Z_29 l0040782D
l00407826:
	ecx_18 = ecx & 0x00000003
l00407828:
	branch ecx_18 == 0x00000000 l0040782A
l00407828_2:
	Z_29 = SLICE(cond(Mem9[esi_130:byte] - Mem9[edi_131:byte]), bool, 2) (alias)
	esi_11 = esi_130 + 0x00000001
	edi_129 = edi_131 + 0x00000001
	ecx_18 = ecx_18 - 0x00000001
	esi_130 = esi_11
	edi_131 = edi_129
	branch Mem9[esi_130:byte] != Mem9[edi_131:byte] l00407828
l0040782A:
	branch Z_29 l0040782D
l0040782C:
	eax_16 = 0x00000001
l0040782D:
	ecxOut = ecx_18
	return SLICE(eax_16, byte, 0)
fn00407810_exit:


void fn004078A8(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn004078A8_entry:
l004078A8:
	word32 eax_18 = fn00404500(eax)
	word32 edx_76
	fn00404330(edx, eax_18, fn00404700(eax), out edx_76)
	branch eax_18 <= 0x00000000 l004078D7
l004078CE:
	CharUpperBuffA(Mem44[edx:word32], eax_18)
l004078D7:
	return
fn004078A8_exit:


word32 fn00407914(word32 eax, word32 edx, ptr32 & ebxOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: eax ebx esi esp
// Trashed: SCZO eax ebx esi esp Top
// Preserved:
fn00407914_entry:
l00407914:
	word32 eax_51 = CompareStringA(0x00000400, 0x00000001, fn00404700(eax), fn00404500(eax), fn00404700(edx), fn00404500(edx)) - 0x00000002
	ebxOut = 0x00000001
	esiOut = 0x00000400
	return eax_51
fn00407914_exit:


word32 fn00407A54(word32 eax, word32 edx, word32 esi, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] esi:[0..31]
// LiveOut: ecx esi
// Trashed: SCZO al ecx edx esi FPU -1 FPU -2 FPU -3 FPU -4 FPUF Top
// Preserved: esp
fn00407A54_entry:
l00407A54:
	word16 wLoc06_105 = __fstcw()
	__fldcw(__fstcw() | 0x0F00)
	branch (Mem14[eax + 0x00000004:word32] & 0x80000000) == 0x00000000 l00407A9E
l00407A9E:
l00407A77:
l00407AA0:
	int8 Top_50 = -4
	esi_141 = esi
l00407AA5:
	word32 esi_141
	int8 Top_55 = Top_50 + 1
	ST57[Top_55:real64] = ST56[Top_55:real64] % ST56[Top_55 + 1:real64]
	byte bLoc08_126 = SLICE((int16) ST57[Top_55:real64], byte, 0)
	ST61[Top_55 + 1:real64] = ST57[Top_55 + 2:real64] / ST57[Top_55 + 1:real64]
	esi_141 = esi_141 - 0x00000001
	byte al_63 = bLoc08_126 + 0x30
	branch bLoc08_126 <u 0x0A l00407AB8
l00407AB6:
	al_63 = bLoc08_126 + 0x37
l00407AB8:
	Mem70[esi_141:byte] = al_63
	ST74[Top_55:real64] = ST61[Top_55 + 1:real64]
	__wait()
	Top_50 = Top_55
	branch ST74[Top_55:real64] >=u ST74[Top_55:real64] l00407AA5
l00407AC4:
	__fldcw(wLoc06_105)
	__ffree(ST74[Top_55 + 3:real64])
	__ffree(ST74[Top_55 + 2:real64])
	__ffree(ST74[Top_55 + 1:real64])
	__ffree(ST74[Top_55:real64])
	word32 ecx_138 = esi - esi_141
	word32 edx_88 = edx - ecx_138
	branch edx_88 <=u 0x00000000 l00407AEA
l00407ADA:
	esi_141 = esi_141 - edx_88
	ecx_138 = ecx_138 + edx_88
l00407AE5:
	edx_88 = edx_88 - 0x00000001
	branch edx_88 != 0x00000000 l00407AE2
l00407AE2:
	Mem101[edx_88 + esi_141:byte] = 0x30
l00407AE8:
	Mem102[esi_141:byte] = 0x30
l00407AEA:
	esiOut = esi_141
	return ecx_138
fn00407A54_exit:


word32 fn00407E64(word32 eax, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: eax ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esi esp
fn00407E64_entry:
l00407E64:
	word32 esp_10 = fp + 0xFFFFFFF0
l00407E87:
	word32 esi_33
	branch (Mem15[eax + 0x00000018:word32] & Mem15[eax + 0x00000010:word32]) != 0x00000000 l00407E6D
l00407E6D:
	word32 esp_23 = esp_10 - 4
	Mem24[esp_23:word32] = eax + 0x00000018
	Mem27[esp_23 - 4:word32] = Mem24[eax + 0x00000014:word32]
	esp_10 = esp_23 - 4
	branch FindNextFileA(Mem27[esp_23 - 4:HANDLE], Mem27[esp_23:LPWIN32_FIND_DATAA]) != 0x00000000 l00407E87
l00407E7E:
	esi_33 = GetLastError()
l00407E8F:
	word32 esp_35 = esp_10 - 4
	Mem36[esp_35:word32] = esp_10
	Mem39[esp_35 - 4:word32] = eax + 0x0000002C
	FileTimeToLocalFileTime(Mem39[esp_35 - 4:(ptr32 FILETIME)], Mem39[esp_35:LPFILETIME])
	Mem42[esp_35 - 8:word32] = eax
	Mem45[esp_35 - 12:word32] = eax + 0x00000002
	Mem48[esp_35 - 16:word32] = esp_35 - 0x00000004
	FileTimeToDosDateTime(Mem48[esp_35 - 16:(ptr32 FILETIME)], Mem48[esp_35 - 12:LPWORD], Mem48[esp_35 - 8:LPWORD])
	Mem51[eax + 0x00000004:word32] = Mem48[eax + 0x00000038:word32]
	Mem53[eax + 0x00000008:word32] = Mem51[eax + 0x00000018:word32]
	fn004044B0(eax + 0x0000000C, 0x00000104, eax + 0x00000044)
	esi_33 = 0x00000000
l00407EC6:
	ecxOut = dwLoc10
	return esi_33
fn00407E64_exit:


word32 fn00407ED0(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax esp
// Trashed: SCZO eax ebx ecx edi edx esi esp Top
// Preserved:
fn00407ED0_entry:
l00407ED0:
	word32 esi_40
	Mem22[ecx + 0x00000010:word32] = ~edx & 0x0000001E
	word32 eax_34 = FindFirstFileA(fn00404700(eax), ecx + 0x00000018)
	Mem36[ecx + 0x00000014:word32] = eax_34
	branch eax_34 == 0xFFFFFFFF l00407F10
l00407F10:
	esi_40 = GetLastError()
l00407EFA:
	word32 ecx_43
	word32 eax_46 = fn00407E64(ecx, out ecx_43)
	esi_40 = eax_46
	branch eax_46 == 0x00000000 l00407F17
l00407F07:
	fn00407F44(ecx)
l00407F17:
	return esi_40
fn00407ED0_exit:


word32 fn00407F20(word32 eax, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: eax ecx
// Trashed: SCZO eax ebx ecx edx esp Top
// Preserved:
fn00407F20_entry:
l00407F20:
	branch FindNextFileA(Mem11[eax + 0x00000014:word32], eax + 0x00000018) == 0x00000000 l00407F3D
l00407F3D:
	word32 eax_19 = GetLastError()
	ecxOut = ecx
	return eax_19
l00407F34:
	word32 ecx_24
	word32 eax_27 = fn00407E64(eax, out ecx_24)
	ecxOut = ecx_24
	return eax_27
fn00407F20_exit:


void fn00407F44(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: ebx esp
fn00407F44_entry:
l00407F44:
	word32 eax_9 = Mem6[eax + 0x00000014:word32]
	branch eax_9 == 0xFFFFFFFF l00407F5C
l00407F4F:
	FindClose(eax_9)
	Mem15[eax + 0x00000014:word32] = 0xFFFFFFFF
l00407F5C:
	return
fn00407F44_exit:


word32 fn00407F98(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00407F98_entry:
l00407F98:
	word32 eax_21 = fn00404500(edx)
	word32 edi_26 = eax_21
	word32 eax_28 = fn00404700(eax)
	branch eax_21 <= 0x00000000 l00407FE0
l00407FB7:
	byte bl_39 = Mem33[edx - 0x00000001 + edi_26:byte]
	branch bl_39 == 0x00 l00407FDB
l00407FBF:
	word32 ecx_50
	branch fn004081FC(eax_28, bl_39, out ecx_50) == 0x00000000 l00407FDB
l00407FCD:
	branch SLICE((uint32) (uint8) fn0040B920(edx, ecx_50, edi_26), byte, 0) != 0x02 l00407FE0
l00407FDA:
	edi_26 = edi_26 - 0x00000001
l00407FDB:
	edi_26 = edi_26 - 0x00000001
	branch edi_26 > 0x00000000 l00407FB7
l00407FE0:
	return edi_26
fn00407F98_exit:


void fn00407FE8(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00407FE8_entry:
l00407FE8:
	word32 eax_20 = fn00407F98(0x00408038, eax)
	word32 ebx_26 = eax_20
	branch eax_20 <= 0x00000001 l0040801D
l00408002:
	branch Mem12[eax - 0x00000001 + eax_20:byte] != 0x5C l0040801D
l00408009:
	branch SLICE((uint32) (uint8) fn0040BBE0(0x00408038, eax_20 - 0x00000001, eax), byte, 0) != 0x00 l0040801D
l0040801C:
	ebx_26 = eax_20 - 0x00000001
l0040801D:
	fn00404760(eax, ebx_26, 0x00000001, edx)
	return
fn00407FE8_exit:


word32 fn0040803C(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0040803C_entry:
l0040803C:
	return fn00404760(eax, 0x7FFFFFFF, fn00407F98(0x00408070, eax) + 0x00000001, edx)
fn0040803C_exit:


void fn00408148(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31]
// LiveOut:
// Trashed: SCZDO ecx edx Top
// Preserved: eax esp
fn00408148_entry:
l00408148:
	fn00402C1C(edx, ecx, eax)
	return
fn00408148_exit:


void fn00408158(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: eax ebx edi esi esp
fn00408158_entry:
l00408158:
	word32 ecx_23
	word32 edi_16 = edx
	bool Z_22 = SLICE(cond(ecx), bool, 2)
	ecx_23 = ecx
	ecx_23 = ecx
	branch ecx == 0x00000000 l0040816C
l00408167:
	branch ecx_23 == 0x00000000 l00408169
l00408167_1:
	Z_22 = SLICE(cond(0x00 - Mem12[edi_127:byte]), bool, 2) (alias)
	edi_16 = edi_127 + 0x00000001
	ecx_23 = ecx_23 - 0x00000001
	edi_127 = edi_16
	branch Mem12[edi_127:byte] == 0x00 l00408167
l00408169:
	branch Z_22 l0040816C
l0040816B:
	ecx_23 = ecx_23 + 0x00000001
l0040816C:
	word32 ebx_40 = ecx - ecx_23
	word32 edi_44 = eax
	word32 esi_48 = edx
	word32 ecx_51 = ebx_40 >>u 0x00000002
l00408179:
	branch ecx_51 == 0x00000000 l0040817B
l0040817B:
	word32 ecx_56 = ebx_40 & 0x00000003
l00408180:
	branch ecx_56 == 0x00000000 l00408182
l00408182:
	Mem62[edi_44:byte] = 0x00
	return
fn00408158_exit:
l00408180_1:
	Mem75[edi_44:byte] = Mem73[esi_48:byte]
	esi_48 = esi_48 + 0x00000001
	edi_44 = edi_44 + 0x00000001
	ecx_56 = ecx_56 - 0x00000001
l00408179_1:
	Mem83[edi_44:word32] = Mem80[esi_48:word32]
	esi_48 = esi_48 + 0x00000004
	edi_44 = edi_44 + 0x00000004
	ecx_51 = ecx_51 - 0x00000001


void fn0040818C(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: eax ebx esi esp
fn0040818C_entry:
l0040818C:
	fn00408158(eax, fn00404500(edx), fn00404700(edx))
	return
fn0040818C_exit:


word32 fn004081FC(word32 eax, byte dl, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl:[0..7] eax:[0..31]
// LiveOut: eax ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004081FC_entry:
l004081FC:
	word32 dwLoc04_36 = eax
l0040820F:
	byte al_13 = Mem11[dwLoc04_36:byte]
	branch dl != al_13 l00408203
l00408203:
	branch al_13 != 0x00 l0040820D
l0040820D:
	dwLoc04_36 = dwLoc04_36 + 0x00000001
l00408207:
	dwLoc04_36 = 0x00000000
l00408217:
	ecxOut = fp - 4
	return dwLoc04_36
fn004081FC_exit:


word32 fn004082B8(word32 ecx, word32 edx, ptr32 & clOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] edx:[0..31]
// LiveOut: eax ecx
// Trashed: SCZDO eax ecx edx Top
// Preserved: ebx edi esi esp
fn004082B8_entry:
l004082B8:
	word32 ebx_15 = ecx
	branch ecx <=u 0x0000001F l004082CE
l004082C9:
	ebx_15 = 0x0000001F
l004082CE:
	branch SLICE((uint32) (uint8) fn0040B944(edx, ebx_15 - 0x00000001), byte, 0) != 0x01 l004082DD
l004082DC:
	ebx_15 = ebx_15 - 0x00000001
l004082DD:
	fn00408148(fp + 0xFFFFFFCC, ebx_15, edx)
	Mem55[fp + 0xFFFFFFCC + ebx_15:byte] = 0x00
	byte cl_100
	word32 eax_71 = fn0040772C(fp + 0xFFFFFFEC, out cl_100)
	clOut = <invalid>
	return eax_71
fn004082B8_exit:


void fn00408334(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: eax ebx esp
fn00408334_entry:
l00408334:
	word32 edx_21
	fn00404240(eax, out edx_21)
	return
fn00408334_exit:


word32 fn00408340(word32 eax, word32 ecx, word32 edx, word32 dwArg0C, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +000C:[0..31]
// LiveOut: eax ecx
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00408340_entry:
l00408340:
	word32 ebp_104 = fp - 4
	word32 esp_151 = fp + 0xFFFFFF80
	word32 edi_112 = eax
	word32 esi_108 = ecx
	word32 ecx_109 = ecx + dwArg0C
	word24 eax_24_8_368 = 0x000000
l00408369:
	word32 edx_337 = edx
	branch edx == 0x00000000 l0040837A
l0040836B_thunk_fn0040837A:
	word32 ecx_47
	word32 edx_453
	word32 esi_456
	word32 edi_457
	word32 ebx_454
	word32 ebp_455
	word32 eax_44 = fn0040837A(ebp_104, edi_112, out ecx_47, out edx_453, out ebx_454, out ebp_455, out esi_456, out edi_457)
	ecxOut = ecx_47
	return eax_44
l0040836D:
	branch esi_108 == ecx_109 l0040837A
l0040836F_thunk_fn0040837A:
	word32 ecx_67
	word32 edx_458
	word32 ebx_459
	word32 ebp_460
	word32 edi_462
	word32 esi_461
	word32 eax_64 = fn0040837A(ebp_104, edi_112, out ecx_67, out edx_458, out ebx_459, out ebp_460, out esi_461, out edi_462)
	ecxOut = ecx_67
	return eax_64
l00408371:
	byte al_332 = Mem77[esi_108:byte]
	esi_108 = esi_108 + 0x00000001
	branch al_332 == 0x25 l00408384
l00408384:
	branch esi_108 == ecx_109 l0040837A
l00408386_thunk_fn0040837A:
	word32 ecx_87
	word32 edi_472
	word32 esi_471
	word32 ebp_470
	word32 ebx_469
	word32 edx_468
	word32 eax_84 = fn0040837A(ebp_104, edi_112, out ecx_87, out edx_468, out ebx_469, out ebp_470, out esi_471, out edi_472)
	ecxOut = ecx_87
	return eax_84
l00408388:
	al_332 = Mem77[esi_108:byte]
	esi_108 = esi_108 + 0x00000001
	branch al_332 == 0x25 l00408376
l0040838D:
	Mem102[ebp_104 - 0x00000018:word32] = esi_108 - 0x00000001
	word32 eax_449 = SEQ(eax_24_8_368, al_332)
l00408393:
	byte al_103 = SLICE(eax_449, byte, 0)
	Mem105[ebp_104 - 0x00000019:byte] = al_103
	word24 eax_24_8_130 = SLICE(eax_449, word24, 8)
	word32 eax_129 = eax_449
	branch al_103 != 0x2D l0040839F
l0040839A:
	branch esi_108 == ecx_109 l0040837A
l0040839C_thunk_fn0040837A:
	word32 ecx_117
	word32 edi_477
	word32 esi_476
	word32 ebp_475
	word32 ebx_474
	word32 edx_473
	word32 eax_114 = fn0040837A(ebp_104, edi_112, out ecx_117, out edx_473, out ebx_474, out ebp_475, out esi_476, out edi_477)
	ecxOut = ecx_117
	return eax_114
l0040839E:
	esi_108 = esi_108 + 0x00000001
	eax_129 = SEQ(eax_24_8_130, Mem105[esi_108:byte]) (alias)
l0040839F:
	word32 ebx_140
	word32 edx_143
	word32 esi_144
	word32 eax_138 = fn00408422(eax_129, ecx_109, ebp_104, esi_108, edi_112, out ecx_109, out edx_143, out ebx_140, out ebp_104, out esi_144, out edi_112)
	byte al_153 = SLICE(eax_138, byte, 0)
	word24 eax_24_8_177 = SLICE(eax_138, word24, 8)
	esp_151 = esp_151 + 0x00000004
	branch al_153 != 0x3A l004083B2
l004083B2:
	Mem156[ebp_104 - 0x00000020:word32] = ebx_140
	word32 ebx_157 = 0xFFFFFFFF
	branch al_153 != 0x2E l004083C8
l004083BE:
	branch esi_144 == ecx_109 l004083C0_thunk_fn0040837A
l004083C0_thunk_fn0040837A:
	word32 ebx_484
	word32 edx_483
	word32 ecx_165
	word32 ebp_485
	word32 esi_486
	word32 edi_487
	word32 eax_162 = fn0040837A(ebp_104, edi_112, out ecx_165, out edx_483, out ebx_484, out ebp_485, out esi_486, out edi_487)
	ecxOut = ecx_165
	return eax_162
l004083C2:
	fn00408422(SEQ(eax_24_8_177, Mem156[esi_144:byte]), ecx_109, ebp_104, esi_144 + 0x00000001, edi_112, out ecx_109, out edx_143, out ebx_157, out ebp_104, out esi_144, out edi_112)
	esp_151 = esp_151 + 0x00000004
l004083C8:
	Mem194[ebp_104 - 0x00000024:word32] = ebx_157
	Mem196[ebp_104 - 0x00000028:word32] = esi_144
	word32 esp_198 = esp_151 - 4
	Mem200[esp_198:word32] = ecx_109
	Mem203[esp_198 - 4:word32] = edx_143
	word32 ecx_210
	eax_24_8_368 = SLICE(fn0040846A(ebp_104, out ecx_210), word24, 8) (alias)
	word32 edx_215 = Mem203[esp_198:word32]
	word32 ebx_218 = Mem203[ebp_104 - 0x00000020:word32] - ecx_210
	branch ebx_218 >=u 0x00000000 l004083DF
l004083DD:
	ebx_218 = 0x00000000
l004083DF:
	branch Mem203[ebp_104 - 0x00000019:byte] != 0x2D l004083EF
l004083E5:
	edx_215 = edx_215 - ecx_210
	branch edx_215 >=u 0x00000000 l004083ED
l004083E9:
	ecx_210 = ecx_210 + edx_215
	edx_215 = 0x00000000
l004083ED:
	branch ecx_210 == 0x00000000 l004083EF
l004083EF:
	word32 ecx_243 = ebx_218
	word32 edx_247 = edx_215 - ebx_218
	branch edx_247 >=u 0x00000000 l004083F9
l004083F5:
	ecx_243 = ebx_218 + edx_247
	edx_247 = 0x00000000
l004083F9:
l004083FB:
	branch ecx_243 == 0x00000000 l004083FD
l004083FD:
	word32 ecx_258 = ecx_210
	edx = edx_247 - ecx_210
	branch edx >=u 0x00000000 l00408407
l00408403:
	ecx_258 = ecx_210 + edx
	edx = 0x00000000
l00408407:
	branch ecx_258 == 0x00000000 l00408409
l00408409:
	branch Mem270[ebp_104 - 0x00000010:word32] == 0x00000000 l00408419
l0040840F:
	Mem276[esp_198:word32] = edx
	word32 eax_277 = ebp_104 - 0x00000010
	fn00408334(eax_277)
	eax_24_8_368 = SLICE(eax_277, word24, 8) (alias)
	edx = Mem276[esp_198:word32]
l00408419:
	ecx_109 = Mem289[esp_198 + 0x00000004:word32]
	esp_151 = esp_198 + 0x00000008
	esi_108 = Mem289[ebp_104 - 0x00000028:word32]
l00408407_1:
	Mem297[edi_112:byte] = Mem270[esi_144:byte]
	esi_144 = esi_144 + 0x00000001
	edi_112 = edi_112 + 0x00000001
	ecx_258 = ecx_258 - 0x00000001
l004083FB_1:
	Mem303[edi_112:byte] = 0x20
	edi_112 = edi_112 + 0x00000001
	ecx_243 = ecx_243 - 0x00000001
l004083ED_1:
	Mem310[edi_112:byte] = Mem307[esi_144:byte]
	esi_144 = esi_144 + 0x00000001
	edi_112 = edi_112 + 0x00000001
	ecx_210 = ecx_210 - 0x00000001
l004083A8:
	Mem314[ebp_104 - 0x0000000C:word32] = ebx_140
	branch esi_144 == ecx_109 l004083AD_thunk_fn0040837A
l004083AD_thunk_fn0040837A:
	word32 edi_482
	word32 esi_481
	word32 ebp_480
	word32 ebx_479
	word32 edx_478
	word32 ecx_320
	word32 eax_317 = fn0040837A(ebp_104, edi_112, out ecx_320, out edx_478, out ebx_479, out ebp_480, out esi_481, out edi_482)
	ecxOut = ecx_320
	return eax_317
l004083AF:
	esi_108 = esi_144 + 0x00000001
	eax_449 = SEQ(eax_24_8_177, Mem314[esi_144:byte]) (alias)
l00408376:
	Mem334[edi_112:byte] = al_332
	edi_112 = edi_112 + 0x00000001
	edx_337 = edx_337 - 0x00000001
	branch edx_337 != 0x00000000 l0040836D
l00408378_thunk_fn0040837A:
	word32 edi_467
	word32 esi_466
	word32 ebp_465
	word32 ebx_464
	word32 ecx_346
	word32 edx_463
	word32 eax_343 = fn0040837A(ebp_104, edi_112, out ecx_346, out edx_463, out ebx_464, out ebp_465, out esi_466, out edi_467)
	ecxOut = ecx_346
	return eax_343
fn00408340_exit:


word32 fn0040837A(word32 ebp, word32 edi, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: eax ebp ebx ecx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0040837A_entry:
l0040837A:
	word32 eax_8 = edi - Mem0[ebp - 0x00000008:word32]
l004086A7:
	word32 edx_12
	word32 ecx_11 = fn00408697(ebp, out edx_12)
	word32 ebp_26 = Mem0[ebp:word32]
	ecxOut = ecx_11
	edxOut = edx_12
	ebxOut = dwArg0C
	ebpOut = ebp_26
	esiOut = dwArg04
	ediOut = dwArg00
	return eax_8
fn0040837A_exit:


word32 fn00408422(byte al, word32 ecx, word32 ebp, word32 esi, word32 edi, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..7] ebp:[0..31] ecx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: eax ebp ebx ecx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00408422_entry:
	byte al = SLICE(eax, byte, 0)
l00408422:
	word32 eax_87
	word32 ebx_100 = 0x00000000
	word32 eax_133 = eax
	branch al == 0x2A l0040844A
l0040844A:
	word32 eax_10 = Mem0[ebp - 0x0000000C:word32]
	word24 eax_24_8_93 = SLICE(eax_10, word24, 8)
	eax_24_8_93 = SLICE(eax_10, word24, 8) (alias)
	branch eax_10 > Mem0[ebp + 0x00000008:word32] l00408464
l00408452:
	Mem14[ebp - 0x0000000C:word32] = Mem0[ebp - 0x0000000C:word32] + 0x00000001
	word32 ebx_15 = Mem14[ebp + 0x0000000C:word32]
	ebx_100 = Mem14[ebx_15 + eax_10 * 0x00000008:word32]
	branch Mem14[ebx_15 + 0x00000004 + eax_10 * 0x00000008:byte] == 0x00 l00408464
l00408462:
	ebx_100 = 0x00000000
l00408464:
	branch esi == ecx l00408444
l00408468:
	esi = esi + 0x00000001
	eax_87 = SEQ(eax_24_8_93, Mem28[esi:byte]) (alias)
l00408428:
	byte al_31 = SLICE(eax_133, byte, 0)
	eax_87 = eax_133 (alias)
	branch al_31 <u 0x30 l00408469
l0040842C:
	eax_87 = eax_133 (alias)
	branch al_31 >u 0x39 l00408469
l00408469:
	ecxOut = ecx
	edxOut = edx
	ebxOut = ebx_100
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return eax_87
l00408430:
	word32 eax_39 = (word32) (al_31 - 0x30)
	word24 eax_24_8_90 = SLICE(eax_39, word24, 8)
	ebx_100 = ebx_100 *s 0x0000000A + eax_39
	branch esi == ecx l00408444
l00408444:
l00408445_thunk_fn0040837A:
	word32 ebp_64
	word32 ebx_65
	word32 ecx_66
	word32 edi_67
	word32 edx_68
	word32 esi_69
	word32 eax_63 = fn0040837A(ebp, edi, out ecx_66, out edx_68, out ebx_65, out ebp_64, out esi_69, out edi_67)
	ecxOut = ecx_66
	edxOut = edx_68
	ebxOut = ebx_65
	ebpOut = ebp_64
	esiOut = esi_69
	ediOut = edi_67
	return eax_63
fn00408422_exit:
l00408441:
	esi = esi + 0x00000001
	eax_133 = SEQ(eax_24_8_90, Mem0[esi:byte]) (alias)


word32 fn0040846A(word32 ebp, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp:[0..31] fs:[0..15]
// LiveOut: eax ecx
// Trashed: SCZO eax ebx ecx edx esi FPUF Top
// Preserved: esp
fn0040846A_entry:
l0040846A:
	word32 ebx_10 = Mem0[ebp - 0x0000000C:word32]
	branch ebx_10 > Mem0[ebp + 0x00000008:word32] l004084D7
l004084D7:
	word32 edx_200
	fn00408697(ebp, out edx_200)
	word32 edx_23 = Mem0[ebp - 0x00000018:word32]
	word32 ecx_32 = <invalid>
	byte cl_201
	word32 eax_31 = fn004082B8(Mem0[ebp - 0x00000028:word32] - edx_23, edx_23, out cl_201)
	byte cl_45 = SLICE(ecx_32, byte, 0)
	byte ch_66 = SLICE(ecx_32, byte, 8)
	word24 eax_24_8_159 = SLICE(eax_31, word24, 8)
	word24 eax_24_8_161 = SLICE(eax_31, word24, 8)
	word32 edx_37 = Mem0[ebp - 0x00000024:word32]
	branch edx_37 <=u 0x00000020 l004084F9
l004084F7:
	edx_37 = 0x00000000
l004084F9:
	byte bl_50 = SLICE(ecx_32, byte, 0)
	word16 cx_195 = SEQ(ch_66, cl_45 - 0x44)
	branch cl_45 == 0x44 l00407A20
l00408504:
	cx_195 = 0x0010 (alias)
	branch bl_50 == 0x58 l00407A20
l00408512:
	cx_195 = 0x000A (alias)
	branch bl_50 == 0x55 l00407A20
l00407A20:
	branch SLICE(cx_195, byte, 0) != 0x00 l00407A54
l00407A22_thunk_fn00407A54:
	word32 esi_202
	ecxOut = fn00407A54(eax_31, edx_37, ebp - 0x00000049, out esi_202)
	return SEQ(eax_24_8_159, al_74)
l00407A24:
	branch (Mem0[eax_31 + 0x00000004:word32] & 0x80000000) == 0x00000000 l00407A54
l00407A30_thunk_fn00407A54:
	word32 esi_203
	ecxOut = fn00407A54(eax_31, edx_37, ebp - 0x00000049, out esi_203)
	return SEQ(eax_24_8_161, al_91)
l00407A32:
	word32 esi_122
	word32 ecx_120 = fn00407A54(fp - 8, edx_37, ebp - 0x00000049, out esi_122)
	Mem129[esi_122 - 0x00000001:byte] = 0x2D
	ecxOut = ecx_120 + 0x00000001
	return SEQ(SLICE(fp - 8, word24, 8), al_119)
l00408520:
l004084D5:
l0040847B:
	Mem138[ebp - 0x0000000C:word32] = Mem0[ebp - 0x0000000C:word32] + 0x00000001
	word32 esi_141 = Mem138[ebp + 0x0000000C:word32] + ebx_10 * 0x00000008
	word32 edx_143 = (word32) Mem138[esi_141 + 0x00000004:byte]
	word32 eax_145
	word32 ecx_146
	call Mem138[edx_143 * 0x00000004 + 0x00408491:word32] (retsize: 4;)
		uses: eax:Mem138[esi_141:word32],edx:edx_143
		defs: eax:eax_145,ecx:ecx_146
	ecxOut = ecx_146
	return eax_145
fn0040846A_exit:


word32 fn00408697(word32 ebp, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp:[0..31] fs:[0..15]
// LiveOut: ecx edx
// Trashed: SCZO ecx edx Top
// Preserved: eax ebx esp
fn00408697_entry:
l00408697:
	word32 edx_14
	word32 ecx_16 = fn00404240(ebp - 0x00000014, out edx_14)
	edxOut = edx_14
	return ecx_16
fn00408697_exit:


void fn00408704()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: eax ecx edx Top
// Preserved: ebp esp
fn00408704_entry:
l00408704:
	fn00408718(dwArg04, edx, eax)
	return
fn00408704_exit:


void fn00408718(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00408718_entry:
l00408718:
	word32 edi_147
	word32 ebx_28 = 0x00001000
	branch fn00404500(edx) >= 0x00000C00 l0040876C
l0040876C:
	word32 eax_38 = fn00404500(edx)
	ebx_28 = eax_38
	edi_147 = eax_38
l00408744:
	edi_147 = fn00408340(fp + 0xFFFFEFF4, edx, 0x00000FFF, fn00404500(edx), out ecx)
l00408778:
	branch edi_147 < ebx_28 - 0x00000001 l004087C5
l004087C5:
	word32 edx_84
	fn00404330(eax, edi_147, fp + 0xFFFFEFF4, out edx_84)
l0040877F:
l004087B3:
	branch edi_147 >= ebx_28 - 0x00000001 l00408781
l00408781:
	ebx_28 = ebx_28 * 0x00000002
	word32 edx_215
	fn00404830(eax, fn00404240(eax, out edx_215), ebx_28)
	edi_147 = fn00408340(Mem134[eax:word32], edx, ebx_28 - 0x00000001, fn00404500(edx), out ecx)
l004087BA:
	fn00404830(eax, ecx, edi_147)
l004087D4:
	return
fn00408718_exit:


word32 fn0040B008(word32 eax, word32 ecx, word32 edx, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0040B008_entry:
	byte dl = SLICE(edx, byte, 0)
l0040B008:
	word32 esp_10 = fp - 12
	branch dl == 0x00 l0040B017
l0040B00F:
	esp_10 = fp + 0xFFFFFFE4
	eax = fn00403990(eax, ecx, edx)
l0040B017:
	word32 ecx_41 = fn00404294(eax + 0x00000004, ecx)
	branch dl == 0x00 l0040B03C
l0040B02D:
	fn004039E8(eax)
	Mem56[fs:0x00000000:word32] = Mem12[esp_10:word32]
l0040B03C:
	ecxOut = ecx_41
	return eax
fn0040B008_exit:


word32 fn0040B044(word32 eax, word32 ecx, word32 edx, ptr32 & ecxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebp ebx ecx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0040B044_entry:
	byte dl = SLICE(edx, byte, 0)
l0040B044:
	word32 esp_16 = fp - 20
	branch dl == 0x00 l0040B058
l0040B050:
	esp_16 = fp - 0x00000024
	eax = fn00403990(eax, ecx, edx)
l0040B058:
	word32 esp_46 = esp_16 - 4
	Mem48[esp_46:word32] = fp - 4
	Mem50[esp_46 - 4:word32] = 0x0040B09E
	Mem54[esp_46 - 8:word32] = Mem50[fs:0x00000000:word32]
	Mem55[fs:0x00000000:word32] = esp_46 - 8
	Mem58[esp_46 - 12:word32] = fp - 0x00000008
	fn00408704()
	fn00404294(eax + 0x00000004, 0x00000000)
	Mem86[fs:0x00000000:word32] = Mem58[esp_46 - 0x00000008:word32]
	Mem88[esp_46:word32] = 0x0040B0A5
	word32 edx_113
	ecxOut = fn00404240(fp - 0x00000008, out edx_113)
	ebxOut = edx
	ebpOut = fp - 4
	esiOut = ecx
	ediOut = eax
	return fp - 0x00000008
fn0040B044_exit:


word32 fn0040B0C4(word32 eax, word32 ecx, word32 edx, ptr32 & ecxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx edi esi esp
fn0040B0C4_entry:
	byte dl = SLICE(edx, byte, 0)
l0040B0C4:
	word32 esp_10 = fp - 12
	branch dl == 0x00 l0040B0D3
l0040B0CB:
	esp_10 = fp + 0xFFFFFFE4
	eax = fn00403990(eax, ecx, edx)
l0040B0D3:
	word32 edx_42
	word32 ebp_43
	word32 ecx_41 = fn00406050(ecx, eax + 0x00000004, out edx_42, out ebp_43)
	branch dl == 0x00 l0040B0F8
l0040B0E9:
	fn004039E8(eax)
	Mem57[fs:0x00000000:word32] = Mem12[esp_10:word32]
l0040B0F8:
	ecxOut = ecx_41
	ebpOut = ebp_43
	return eax
fn0040B0C4_exit:


word32 fn0040B100(word32 eax, word32 ecx, word32 edx, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ecx
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn0040B100_entry:
	byte dl = SLICE(edx, byte, 0)
l0040B100:
	word32 esp_18 = fp - 24
	branch dl == 0x00 l0040B116
l0040B10E:
	esp_18 = fp - 0x00000028
	eax = fn00403990(eax, ecx, edx)
l0040B116:
	word32 esp_48 = esp_18 - 4
	Mem50[esp_48:word32] = fp - 4
	Mem52[esp_48 - 4:word32] = 0x0040B16C
	Mem56[esp_48 - 8:word32] = Mem52[fs:0x00000000:word32]
	Mem57[fs:0x00000000:word32] = esp_48 - 8
	Mem60[esp_48 - 12:word32] = fp - 0x00000008
	word32 ebp_67
	word32 edx_124
	fn00406050(ecx, fp - 0x0000000C, out edx_124, out ebp_67)
	fn00408704()
	fn00404294(eax + 0x00000004, Mem60[ebp_67 - 0x00000004:word32])
	Mem100[fs:0x00000000:word32] = 0x00000000
	fn00404264(ebp_67 - 0x00000008, 0x00000002)
	ecxOut = dwArg00
	return ebp_67 - 0x00000008
fn0040B100_exit:


byte fn0040B8A8(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[8..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn0040B8A8_entry:
	word24 ecx_24_8 = SLICE(ecx, word24, 8)
	word24 eax_24_8_71 = SLICE(eax, word24, 8)
l0040B8A8:
	word32 edx_12 = 0x00000000
	branch eax == 0x00000000 l0040B918
l0040B8B2:
	branch Mem9[eax + edx:byte] == 0x00 l0040B918
l0040B8B8:
	branch edx != 0x00000000 l0040B8D0
l0040B8D0:
	word32 esi_23 = edx - 0x00000001
l0040B8D6:
	word24 eax_24_8_63 = SLICE(eax, word24, 8)
	branch esi_23 < 0x00000000 l0040B8EC
l0040B8DA:
	word32 ecx_33 = SEQ(ecx_24_8, Mem9[eax + esi_23:byte])
	ecx_24_8 = SLICE(ecx_33 & 0x000000FF, word24, 8) (alias)
	branch __bt(Mem9[0x0042810C:word32], ecx_33 & 0x000000FF) l0040B8D5
l0040B8D5:
	esi_23 = esi_23 - 0x00000001
l0040B8EC:
	word32 ecx_43 = edx - esi_23
	word32 ecx_44 = ecx_43 & 0x80000001
	branch (ecx_43 & 0x80000001) >= 0x00000000 l0040B8FD
l0040B8F8:
	ecx_44 = ((ecx_43 & 0x80000001) - 0x00000001 | 0xFFFFFFFE) + 0x00000001
l0040B8FD:
	edx_12 = 0x00000000 (alias)
	branch ecx_44 != 0x00000000 l0040B905
l0040B905:
	branch __bt(Mem9[0x0042810C:word32], SEQ(eax_24_8_63, Mem9[eax + edx:byte]) & 0x000000FF) l0040B918
l0040B916:
	edx_12 = 0x00000001 (alias)
l0040B901:
	edx_12 = 0x00000002 (alias)
l0040B8BC:
	branch __bt(Mem9[0x0042810C:word32], SEQ(eax_24_8_71, Mem9[eax:byte]) & 0x000000FF) l0040B918
l0040B8CC:
	edx_12 = 0x00000001 (alias)
l0040B918:
	return SLICE(edx_12, byte, 0)
fn0040B8A8_exit:


byte fn0040B920(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esi esp
fn0040B920_entry:
l0040B920:
	word32 eax_14 = 0x00000000
	branch Mem9[0x0042B750:byte] == 0x00 l0040B940
l0040B931:
	eax_14 = (uint32) (uint8) fn0040B8A8(fn00404700(eax), ecx, edx - 0x00000001)
l0040B940:
	return SLICE(eax_14, byte, 0)
fn0040B920_exit:


byte fn0040B944(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0040B944_entry:
l0040B944:
	word32 ecx_17 = 0x00000000
	branch Mem0[0x0042B750:byte] == 0x00 l0040B956
l0040B94F:
	ecx_17 = (uint32) (uint8) fn0040B8A8(eax, 0x00000000, edx)
l0040B956:
	return SLICE(ecx_17, byte, 0)
fn0040B944_exit:


byte fn0040BBE0(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0040BBE0_entry:
l0040BBE0:
	word32 ebx_22 = 0x00000000
	branch ecx <= 0x00000000 l0040BC1D
l0040BBF0:
	branch ecx > fn00404500(edx) l0040BC1D
l0040BBFB:
	branch SLICE((uint32) (uint8) fn0040B920(edx, ecx, ecx), byte, 0) != 0x00 l0040BC1D
l0040BC08:
	word32 ecx_104
	ebx_22 = (uint32) (uint8) (fn004081FC(fn00404700(eax), Mem15[edx - 0x00000001 + ecx:byte], out ecx_104) != 0x00000000) (alias)
l0040BC1D:
	return SLICE(ebx_22, byte, 0)
fn0040BBE0_exit:


word32 fn0040C940(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0040C940_entry:
l0040C940:
	word32 edx_6 = Mem0[eax:word32]
	Mem10[eax:word32] = 0x00000000
	word32 ecx_22
	fn00403720(edx_6, out ecx_22)
	return SEQ(SLICE(edx_6, word24, 8), dl_13)
fn0040C940_exit:


void fn00413CD0(word32 eax, word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: eax Top
// Preserved: ebp ebx ecx edi edx esi esp
fn00413CD0_entry:
l00413CD0:
	fn00406384(eax, ecx, edx, dwArg04, dwArg08)
	return
fn00413CD0_exit:


void fn0041420C(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0041420C_entry:
l0041420C:
	word32 esi_17 = Mem12[eax + 0x00000008:word32]
	branch esi_17 != Mem12[eax + 0x0000000C:word32] l00414221
l0041421B:
	word32 edx_21 = Mem12[eax:word32]
	word32 ecx_25
	call Mem12[edx_21:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_25,edx:edx_21
		defs: ecx:ecx_25
l00414221:
	Mem33[Mem12[eax + 0x00000004:word32] + esi_17 * 0x00000004:word32] = edx
	Mem35[eax + 0x00000008:word32] = Mem33[eax + 0x00000008:word32] + 0x00000001
	branch edx == 0x00000000 l00414239
l0041422E:
	call Mem35[Mem35[eax:word32] + 0x00000004:word32] (retsize: 4;)
		uses: eax:eax,ecx:0x00000000,edx:edx
l00414239:
	return
fn0041420C_exit:


word32 fn00414258(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZDO eax ebp ecx edx Top
// Preserved: ebx edi esi esp
fn00414258_entry:
l00414258:
	word32 esi_14 = edx
	word32 ebx_16 = eax
	branch edx < 0x00000000 l00414268
l00414263:
	branch edx < Mem12[eax + 0x00000008:word32] l00414277
l00414268:
	word32 ebp_149
	word32 edi_150
	fn004142F4(Mem12[0x0042A8E0:word32], out ebx_16, out ebp_149, out esi_14, out edi_150)
l00414277:
	word32 ebp_49
	word32 ecx_50
	word32 edi_151
	word32 eax_48 = fn00414348(ebx_16, esi_14, out ecx_50, out ebp_49, out edi_151)
	Mem61[ebx_16 + 0x00000008:word32] = Mem12[ebx_16 + 0x00000008:word32] - 0x00000001
	word32 eax_62 = Mem61[ebx_16 + 0x00000008:word32]
	branch esi_14 >= eax_62 l004142A5
l0041428C:
	fn00402C1C(Mem61[ebx_16 + 0x00000004:word32] + 0x00000004 + esi_14 * 0x00000004, eax_62 - esi_14 << 0x00000002, Mem61[ebx_16 + 0x00000004:word32] + esi_14 * 0x00000004)
l004142A5:
	branch eax_48 == 0x00000000 l004142B4
l004142A9:
	call Mem61[Mem61[ebx_16:word32] + 0x00000004:word32] (retsize: 4;)
		uses: cl:0x02,eax:ebx_45,edx:eax_48
l004142B4:
	return ebp_49
fn00414258_exit:


void fn004142B8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn004142B8_entry:
l004142B8:
	return
fn004142B8_exit:


word32 fn004142BC(word32 edx, word32 dwArg00, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn004142BC_entry:
	word24 edx_24_8_30 = SLICE(edx, word24, 8)
l004142BC:
	fn004142B8()
	word32 ebp_34
	word32 ebx_35
	word32 ecx_36
	word32 edi_37
	word32 esi_39
	word32 eax_33 = fn0040B044(Mem26[0x00413404:word32], edx, SEQ(edx_24_8_30, 0x01), out ecx_36, out ebx_35, out ebp_34, out esi_39, out edi_37)
l004142E9_thunk_fn00403C5C:
	word32 ecx_65
	fn00403C5C(eax_33, ecx_36, dwArg00, out ecx_65)
	ebpOut = ebp_34
	esiOut = esi_39
	ediOut = edi_37
	return ebx_35
fn004142BC_exit:


word32 fn004142F4(word32 edx, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31] fs:[0..15]
// LiveOut: ebp ebx ecx edi esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004142F4_entry:
l004142F4:
	word32 v12_28 = Mem26[fs:0x00000000:word32]
	Mem31[fs:0x00000000:word32] = fp - 28
	word32 ebp_38
	word32 edx_91
	fn00406050(edx, fp - 0x00000008, out edx_91, out ebp_38)
	word32 ebp_47
	word32 edi_50
	word32 esi_52
	word32 ebx_48 = fn004142BC(Mem31[ebp_38 - 0x00000004:word32], dwLoc20, out ebp_47, out esi_52, out edi_50)
	Mem67[fs:0x00000000:word32] = v12_28
	word32 edx_92
	word32 ecx_73 = fn00404240(ebp_47 - 0x00000004, out edx_92)
	ebxOut = ebx_48
	ebpOut = ebp_47
	esiOut = esi_52
	ediOut = edi_50
	return ecx_73
fn004142F4_exit:


word32 fn00414348(word32 eax, word32 edx, ptr32 & ecxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebp ecx edi
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esi esp
fn00414348_entry:
l00414348:
	word32 esi_11 = edx
	word32 ebx_13 = eax
	branch edx < 0x00000000 l00414357
l00414352:
	branch edx < Mem9[eax + 0x00000008:word32] l00414366
l00414357:
	ecx = fn004142F4(Mem9[0x0042A8E0:word32], out ebx_13, out ebp, out esi_11, out edi)
l00414366:
	word32 eax_44 = Mem9[Mem9[ebx_13 + 0x00000004:word32] + esi_11 * 0x00000004:word32]
	ecxOut = ecx
	ebpOut = ebp
	ediOut = edi
	return eax_44
fn00414348_exit:


word32 fn004143A4(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebx esp
fn004143A4_entry:
l004143A4:
	word32 ecx_10 = 0x00000000
l004143AA:
	branch ecx_10 >= Mem6[eax + 0x00000008:word32] l004143B7
l004143AF:
	branch edx != Mem6[Mem6[eax + 0x00000004:word32] + ecx_10 * 0x00000004:word32] l004143A9
l004143A9:
	ecx_10 = ecx_10 + 0x00000001
l004143B7:
	branch ecx_10 != Mem6[eax + 0x00000008:word32] l004143BF
l004143BC:
	ecx_10 = ecx_10 | 0xFFFFFFFF
l004143BF:
	return ecx_10
fn004143A4_exit:


word32 fn004143C4(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO ebp ecx edx Top
// Preserved: D ebx esi esp
fn004143C4_entry:
l004143C4:
	word32 eax_14 = fn004143A4(eax, edx)
	branch eax_14 < 0x00000000 l004143DE
l004143D5:
	ebp = fn00414258(eax, eax_14)
l004143DE:
	return ebp
fn004143C4_exit:


word32 fn00414564(word32 eax, ptr32 & edxOut, ptr32 & blOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ebp ebx ecx edi edx
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00414564_entry:
l00414564:
	word32 ebx_20
	fn004145EC(eax, out ebx_20)
	word32 esp_21 = <invalid>
	Mem24[esp_21 - 4:word32] = fp - 4
	Mem26[esp_21 - 8:word32] = 0x004145E0
	Mem30[esp_21 - 12:word32] = Mem26[fs:0x00000000:word32]
	Mem31[fs:0x00000000:word32] = esp_21 - 12
	word32 ebp_56 = fp - 4
	word32 esp_29 = esp_21 - 12
	branch Mem31[eax + 0x00000020:byte] == 0x01 l0041459D
l0041458D:
	branch fn004143A4(Mem31[eax + 0x00000004:word32], ebx_20) != 0x00000001 l004145AC
l004145AC:
	branch Mem31[eax + 0x00000020:byte] != 0x02 l004145CA
l004145B5:
	word32 ebx_57
	word32 esi_124
	fn004142F4(Mem31[0x0042A788:word32], out ebx_57, out ebp_56, out esi_124, out edi)
	esp_29 = <invalid>
l0041459D:
	fn0041420C(Mem31[eax + 0x00000004:word32], ebx_20)
l004145CA:
	word32 esp_89 = esp_29 + 4
	word32 edx_88 = Mem31[esp_29:word32]
	word32 ecx_92 = Mem31[esp_89 + 4:word32]
	Mem96[fs:0x00000000:word32] = edx_88
	Mem98[esp_89 + 4:word32] = 0x004145E7
	fn00414650(Mem98[ebp_56 - 0x00000004:word32])
	edxOut = edx_88
	blOut = <invalid>
	ebpOut = ebp_56
	ediOut = edi
	return ecx_92
fn00414564_exit:


word32 fn004145EC(word32 eax, ptr32 & ebxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax ebx esp
// Trashed: eax ebx esp Top
// Preserved:
fn004145EC_entry:
l004145EC:
	EnterCriticalSection(eax + 0x00000008)
	word32 eax_12 = Mem11[eax + 0x00000004:word32]
	ebxOut = eax + 0x00000008
	return eax_12
fn004145EC_exit:


word32 fn00414600(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edx Top
// Preserved: esp
fn00414600_entry:
l00414600:
	word32 ebx_20
	fn004145EC(eax, out ebx_20)
	word32 esp_21 = <invalid>
	Mem26[esp_21 - 4:word32] = fp - 4
	Mem28[esp_21 - 8:word32] = 0x00414643
	Mem32[esp_21 - 12:word32] = Mem28[fs:0x00000000:word32]
	Mem33[fs:0x00000000:word32] = esp_21 - 12
	word32 ebp_39 = fn004143C4(Mem33[eax + 0x00000004:word32], ebx_20)
	Mem54[fs:0x00000000:word32] = Mem33[esp_21 - 12:word32]
	Mem56[esp_21 - 4:word32] = 0x0041464A
	fn00414650(Mem56[ebp_39 - 0x00000004:word32])
	return ebp_39
fn00414600_exit:


void fn00414650(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SCZO eax esp Top
// Preserved:
fn00414650_entry:
l00414650:
	LeaveCriticalSection(eax + 0x00000008)
	return
fn00414650_exit:


word32 fn00414AAC(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: ecx
// Trashed: SCZO dl eax ecx Top
// Preserved: ebx esp
fn00414AAC_entry:
l00414AAC:
	branch Mem6[eax + 0x00000008:word32] != 0x00000000 l00414ABE
l00414AB5:
	word32 ecx_13 = Mem6[eax:word32]
	call Mem6[ecx_13 + 0x00000030:word32] (retsize: 4;)
		uses: dl:0x01,eax:eax,ecx:ecx_13
		defs: ecx:ecx_17
l00414ABE:
	Mem23[eax + 0x00000008:word32] = Mem6[eax + 0x00000008:word32] + 0x00000001
	return ecx
fn00414AAC_exit:


void fn00414B68(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00414B68_entry:
l00414B68:
	Mem7[eax + 0x00000008:word32] = Mem0[eax + 0x00000008:word32] - 0x00000001
	branch Mem7[eax + 0x00000008:word32] != 0x00000000 l00414B78
l00414B71:
	word32 ecx_13 = Mem7[eax:word32]
	call Mem7[ecx_13 + 0x00000030:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_13,edx:0x00000000
l00414B78:
	return
fn00414B68_exit:


void fn00415C9C(word32 eax, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn00415C9C_entry:
l00415C9C:
	word32 ecx_18 = Mem13[eax:word32]
	call Mem13[ecx_18 + 0x00000018:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_18,edx:0x00000000,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +0014:dwArg04,Stack +0018:dwArg08
	return
fn00415C9C_exit:


word32 fn00417B7C(word32 eax, word32 edx, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut: eax ecx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00417B7C_entry:
l00417B7C:
	word32 ecx_20 = edx
	word32 edx_15 = eax
	word16 ax_11 = 0x0000
l00417B82:
	ax_26 = SEQ(ah_25, al_17) (alias)
	word16 ax_13 = __rol(ax_11, 0x05)
	byte al_17 = SLICE(ax_13, byte, 0) ^ Mem0[edx_15:byte]
	byte ah_25 = SLICE(ax_13, byte, 8)
	edx_15 = edx_15 + 0x00000001
	ecx_20 = ecx_20 - 0x00000001
	word32 eax_31 = SEQ(0x0000, SLICE(ax_13, byte, 8), al_17)
	ax_11 = ax_26
	branch ecx_20 != 0x00000000 l00417B82
l00417B8C:
	ecxOut = ecx_20
	return eax_31
fn00417B7C_exit:


void fn00417BF0(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: esp
// Trashed: SCZO eax esp Top
// Preserved:
fn00417BF0_entry:
l00417BF0:
	EnterCriticalSection(eax + 0x00000008)
	return
fn00417BF0_exit:


word32 fn00417BFC(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: SCZO eax esp Top
// Preserved:
fn00417BFC_entry:
l00417BFC:
	LeaveCriticalSection(eax + 0x00000008)
	return eax + 0x00000008
fn00417BFC_exit:


word32 fn00417C08(word32 eax, word32 edx, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebp ebx ecx edx esi
// Trashed: SCZO eax ebp ebx ecx edx esi Top
// Preserved: D esp
fn00417C08_entry:
l00417C08:
	word32 ecx_24
	word32 eax_23 = fn00417B7C(edx, (word32) Mem19[eax + 0x00000020:word16], out ecx_24)
	fn00417BF0(eax)
	word32 esp_33 = <invalid>
	Mem42[esp_33 - 4:word32] = fp - 4
	Mem44[esp_33 - 8:word32] = 0x00417CDC
	Mem48[esp_33 - 12:word32] = Mem44[fs:0x00000000:word32]
	Mem49[fs:0x00000000:word32] = esp_33 - 12
	word16 si_163 = SLICE(eax_23, word16, 0)
	word32 dwLoc0C_170 = Mem49[eax + 0x00000004:word32]
l00417C4E:
	branch dwLoc0C_170 == 0x00000000 l00417C75
l00417C54:
	branch si_163 != Mem54[dwLoc0C_170 + 0x0000000C:word16] l00417C46
l00417C5D:
	branch SLICE((uint32) (uint8) fn00407810(dwLoc0C_170 + 0x00000010, (word32) Mem54[eax + 0x00000020:word16], edx, out ecx_24), byte, 0) == 0x00 l00417C46
l00417C46:
	dwLoc0C_170 = Mem54[dwLoc0C_170:word32]
l00417C75:
	branch dwLoc0C_170 != 0x00000000 l00417CC0
l00417C7B:
	word32 eax_98 = fn00402A28((word32) Mem54[eax + 0x00000020:word16] + 0x00000010, ecx_24)
	Mem110[eax_98:word32] = Mem106[eax + 0x00000004:word32]
	Mem114[eax_98 + 0x00000004:word32] = 0x00000000
	Mem117[eax_98 + 0x00000008:word32] = Mem114[edx:word32]
	Mem119[eax_98 + 0x0000000C:word16] = si_163
	fn00402C1C(edx, (word32) Mem119[eax + 0x00000020:word16], eax_98 + 0x00000010)
	Mem133[eax + 0x00000004:word32] = eax_98
	dwLoc0C_170 = eax_98
l00417CC0:
	Mem138[dwLoc0C_170 + 0x00000004:word32] = Mem135[dwLoc0C_170 + 0x00000004:word32] + 0x00000001
	word32 edx_146 = Mem138[esp_33 - 12:word32]
	word32 ecx_150 = Mem138[esp_33 - 4:word32]
	Mem153[fs:0x00000000:word32] = edx_146
	Mem155[esp_33 - 4:word32] = 0x00417CE3
	word32 eax_157 = fn00417BFC(eax)
	ecxOut = ecx_150
	edxOut = edx_146
	ebxOut = edx
	ebpOut = fp - 4
	esiOut = eax_23
	return eax_157
fn00417C08_exit:


word32 fn00417CEC(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: esp
fn00417CEC_entry:
l00417CEC:
	branch edx == 0x00000000 l00417DA4
l00417DA4:
	return ebp
l00417D02:
	fn00417BF0(eax)
	word32 esp_22 = <invalid>
	Mem29[esp_22 - 4:word32] = fp - 4
	Mem31[esp_22 - 8:word32] = 0x00417D7F
	Mem35[esp_22 - 12:word32] = Mem31[fs:0x00000000:word32]
	Mem36[fs:0x00000000:word32] = esp_22 - 12
	Mem39[edx + 0x00000004:word32] = Mem36[edx + 0x00000004:word32] - 0x00000001
	branch Mem39[edx + 0x00000004:word32] == 0x00000000 == 0x00 l00417D69
l00417D35:
	word32 eax_47 = Mem43[eax + 0x00000004:word32]
	branch eax_47 != edx l00417D4D
l00417D4D:
	word32 dwLoc10_96 = eax_47
l00417D55:
	word32 eax_54 = Mem52[dwLoc10_96:word32]
	branch eax_54 != edx l00417D52
l00417D52:
	dwLoc10_96 = eax_54
l00417D5F:
	Mem61[dwLoc10_96:word32] = Mem52[edx:word32]
l00417D40:
	Mem65[eax + 0x00000004:word32] = Mem43[edx:word32]
l00417D69:
	Mem80[fs:0x00000000:word32] = Mem71[esp_22 - 12:word32]
	Mem82[esp_22 - 4:word32] = 0x00417D86
	fn00417BFC(eax)
	return fp - 4
fn00417CEC_exit:


word32 fn00417DA8(word32 eax, word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00417DA8_entry:
l00417DA8:
	fn00417BF0(eax)
	word32 esp_27 = <invalid>
	Mem36[esp_27 - 4:word32] = fp - 4
	Mem38[esp_27 - 8:word32] = 0x00417E14
	Mem42[esp_27 - 12:word32] = Mem38[fs:0x00000000:word32]
	Mem43[fs:0x00000000:word32] = esp_27 - 12
	word32 ebp_49
	word32 ebx_50
	word32 esi_120
	word32 edx_119
	word32 ecx_118
	word32 eax_48 = fn00417C08(eax, ecx, out ecx_118, out edx_119, out ebx_50, out ebp_49, out esi_120)
	Mem60[ebx_50 + 0x00000010:word32] = eax_48
	word32 esp_41 = esp_27 - 12
	word16 esi_16_16_65 = SLICE(eax_48, word16, 16)
	branch eax_48 == Mem60[ebp_49 - 0x00000008:word32] l00417DF3
l00417DE8:
	fn00403928(ebx_50, SEQ(esi_16_16_65, 0xFFFD), Mem60[esp_27 - 16:word32])
	esp_41 = esp_27 - 0x00000010
l00417DF3:
	word32 ebp_80 = fn00417CEC(Mem60[ebp_49 - 0x00000004:word32], Mem60[ebp_49 - 0x00000008:word32])
	Mem98[fs:0x00000000:word32] = Mem60[esp_41:word32]
	Mem100[esp_41 + 8:word32] = 0x00417E1B
	fn00417BFC(Mem100[ebp_80 - 0x00000004:word32])
	return ebp_80
fn00417DA8_exit:


word32 fn004182D4(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax esp
// Trashed: SCZO eax esp Top
// Preserved:
fn004182D4_entry:
l004182D4:
	branch eax >= 0x00000000 l004182E3
l004182D8:
	eax = GetSysColor(eax & 0x000000FF)
l004182E3:
	return eax
fn004182D4_exit:


void fn00418318(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: esp
// Trashed: SCZO edx esp Top
// Preserved:
fn00418318_entry:
l00418318:
	word32 edx_6 = Mem0[eax + 0x00000014:word32]
	branch edx_6 == 0x00000000 l00418325
l0041831F:
	EnterCriticalSection(edx_6)
l00418325:
	return
fn00418318_exit:


void fn00418328(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SCZO edx esp Top
// Preserved:
fn00418328_entry:
l00418328:
	word32 edx_6 = Mem0[eax + 0x00000014:word32]
	branch edx_6 == 0x00000000 l00418335
l0041832F:
	LeaveCriticalSection(edx_6)
l00418335:
	return
fn00418328_exit:


word32 fn0041850C(word32 eax, word32 ecx, word32 edx, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ecx edx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn0041850C_entry:
	byte dl = SLICE(edx, byte, 0)
l0041850C:
	word32 esp_14 = fp - 8
	branch dl == 0x00 l0041851A
l00418512:
	fn00403990(eax, ecx, edx)
	esp_14 = fp + 0xFFFFFFE8
l0041851A:
	Mem34[0x004283AC:word32] = 0x00000000
	word32 ebx_40
	word32 ecx_41
	word32 esi_43
	word32 ebp_96
	word32 edx_42
	Mem49[esi_43 + 0x00000010:word32] = fn00417C08(Mem34[0x0042B8D0:word32], 0x004283AC, out ecx_41, out edx_42, out ebx_40, out ebp_96, out esi_43)
	Mem50[esi_43 + 0x00000018:word32] = 0xFF000008
	Mem52[esi_43 + 0x0000001C:word32] = Mem50[0x0042B88C:word32]
	branch SLICE(ebx_40, byte, 0) == 0x00 l0041855B
l0041854C:
	edx_42 = fn004039E8(esi_43)
	Mem61[fs:0x00000000:word32] = Mem52[esp_14:word32]
l0041855B:
	ecxOut = ecx_41
	edxOut = edx_42
	return esi_43
fn0041850C_exit:


word32 fn004186F4(word32 eax, ptr32 & ecxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: eax ebp ebx ecx esi esp
// Trashed: SCZO eax ebp ebx ecx edx esi esp Top
// Preserved:
fn004186F4_entry:
l004186F4:
	word32 v11_24 = Mem22[fs:0x00000000:word32]
	Mem27[fs:0x00000000:word32] = fp + 0xFFFFFFA0
	word32 ebx_125 = eax
	word32 eax_28 = Mem27[eax + 0x00000010:word32]
	branch Mem29[eax_28 + 0x00000008:word32] != 0x00000000 l0041885C
l0041885C:
	word32 ebx_34 = Mem29[eax_28 + 0x00000008:word32]
	Mem44[fs:0x00000000:word32] = v11_24
	fn00404264(fp - 0x00000050, 0x00000003)
	ecxOut = fp - 4
	ebxOut = ebx_34
	ebpOut = <invalid>
	esiOut = esi
	return fp - 0x00000050
l00418729:
	fn00417BF0(Mem29[0x0042B8D0:word32])
	word32 esp_56 = <invalid>
	Mem63[esp_56 - 4:word32] = fp - 4
	Mem65[esp_56 - 8:word32] = 0x00418855
	Mem68[esp_56 - 12:word32] = Mem65[fs:0x00000000:word32]
	Mem69[fs:0x00000000:word32] = esp_56 - 12
	word32 esp_194 = esp_56 - 12
	branch Mem69[eax_28 + 0x00000008:word32] != 0x00000000 l0041883D
l0041874E:
	branch (Mem81[eax_28 + 0x00000019:byte] & 0x01) == 0x00 l00418778
l00418778:
l0041876F:
l0041877F:
	fn004044A4(fp - 0x00000048, eax_28 + 0x0000001B)
	word32 esp_127 = <invalid>
	branch fn00407914(0x00000000, 0x00418894, out ebx_125, out esi) != 0x00000000 l004187E8
l004187E8:
	fn004044A4(fp - 0x00000050, eax_28 + 0x0000001B)
	fn0040818C(fp - 0x00000028, 0x00000000)
l004187CE:
	fn004044A4(fp - 0x0000004C, 0x004283B7)
	fn0040818C(fp - 0x00000028, 0x00000000)
l00418801:
	byte al_180 = SLICE((uint32) (uint8) fn004189B4(ebx_125), byte, 0)
	branch al_180 == 0x01 l0041881E
l0041881E:
l00418818:
	branch al_180 == 0x02 l00418824
l00418824:
l0041881C:
l0041882A:
l0041882E:
	Mem195[esp_127 - 0x00000008:word32] = fp - 0x00000044
	Mem198[eax_28 + 0x00000008:word32] = CreateFontIndirectA(Mem195[esp_127 - 0x00000008:(ptr32 LOGFONTA)])
	esp_194 = esp_127 - 0x00000008
l0041883D:
	word32 esp_205 = esp_194 + 4
	word32 ecx_208 = Mem203[esp_205 + 4:word32]
	Mem213[fs:0x00000000:word32] = Mem203[esp_194:word32]
	Mem215[esp_205 + 4:word32] = 0x0041885C
	word32 eax_217 = fn00417BFC(Mem215[0x0042B8D0:word32])
	ecxOut = ecx_208
	ebxOut = ebx_125
	ebpOut = <invalid>
	esiOut = esi
	return eax_217
fn004186F4_exit:


byte fn004189B4(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004189B4_entry:
l004189B4:
	word32 eax_6 = Mem0[eax + 0x00000010:word32]
	return Mem0[eax_6 + 0x00000018:byte]
fn004189B4_exit:


word32 fn00418A14(word32 eax, word32 ecx, word32 edx, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ecx edx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn00418A14_entry:
	byte dl = SLICE(edx, byte, 0)
l00418A14:
	word32 esp_14 = fp - 8
	branch dl == 0x00 l00418A22
l00418A1A:
	fn00403990(eax, ecx, edx)
	esp_14 = fp + 0xFFFFFFE8
l00418A22:
	word32 ebx_37
	word32 ecx_38
	word32 esi_40
	word32 ebp_91
	word32 edx_39
	Mem46[esi_40 + 0x00000010:word32] = fn00417C08(Mem9[0x0042B8D4:word32], 0x0042860C, out ecx_38, out edx_39, out ebx_37, out ebp_91, out esi_40)
	Mem47[esi_40 + 0x00000018:byte] = 0x04
	branch SLICE(ebx_37, byte, 0) == 0x00 l00418A51
l00418A42:
	edx_39 = fn004039E8(esi_40)
	Mem56[fs:0x00000000:word32] = Mem47[esp_14:word32]
l00418A51:
	ecxOut = ecx_38
	edxOut = edx_39
	return esi_40
fn00418A14_exit:


word32 fn00418BD0(word32 eax, ptr32 & ecxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: eax ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: esp
fn00418BD0_entry:
l00418BD0:
	word32 eax_10 = Mem6[eax + 0x00000010:word32]
	branch Mem11[eax_10 + 0x00000008:word32] != 0x00000000 l00418C5D
l00418C5D:
	word32 eax_16 = Mem11[eax_10 + 0x00000008:word32]
	ecxOut = ecx
	ebpOut = ebp
	return eax_16
l00418BE5:
	fn00417BF0(Mem11[0x0042B8D4:word32])
	word32 esp_22 = <invalid>
	Mem29[esp_22 - 4:word32] = fp - 4
	Mem31[esp_22 - 8:word32] = 0x00418C56
	Mem35[esp_22 - 12:word32] = Mem31[fs:0x00000000:word32]
	Mem36[fs:0x00000000:word32] = esp_22 - 12
	word32 esp_34 = esp_22 - 12
	branch Mem36[eax_10 + 0x00000008:word32] != 0x00000000 l00418C3E
l00418C06:
	fn004182D4(Mem46[eax_10 + 0x00000014:word32])
	word32 esp_50 = <invalid>
	Mem58[esp_50 - 4:word32] = fp - 0x00000018
	Mem61[eax_10 + 0x00000008:word32] = CreatePenIndirect(Mem58[esp_50 - 4:(ptr32 LOGPEN)])
	esp_34 = esp_50 - 4
l00418C3E:
	word32 esp_68 = esp_34 + 4
	word32 ecx_71 = Mem66[esp_68 + 4:word32]
	Mem74[fs:0x00000000:word32] = Mem66[esp_34:word32]
	Mem76[esp_68 + 4:word32] = 0x00418C5D
	word32 eax_78 = fn00417BFC(Mem76[0x0042B8D4:word32])
	ecxOut = ecx_71
	ebpOut = fp - 4
	return eax_78
fn00418BD0_exit:


word32 fn00418CE0(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn00418CE0_entry:
	byte dl = SLICE(edx, byte, 0)
l00418CE0:
	word32 esp_14 = fp - 8
	branch dl == 0x00 l00418CEE
l00418CE6:
	fn00403990(eax, ecx, edx)
	esp_14 = fp + 0xFFFFFFE8
l00418CEE:
	word32 ebx_37
	word32 edx_39
	word32 esi_40
	word32 ebp_89
	word32 ecx_88
	Mem46[esi_40 + 0x00000010:word32] = fn00417C08(Mem9[0x0042B8D8:word32], 0x0042862C, out ecx_88, out edx_39, out ebx_37, out ebp_89, out esi_40)
	branch SLICE(ebx_37, byte, 0) == 0x00 l00418D19
l00418D0A:
	fn004039E8(esi_40)
	Mem55[fs:0x00000000:word32] = Mem46[esp_14:word32]
l00418D19:
	return esi_40
fn00418CE0_exit:


void fn00418DF0(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: edi esi esp
fn00418DF0_entry:
l00418DF0:
	word32 eax_11 = Mem9[eax + 0x00000010:word32]
	Mem16[edx:word32] = Mem9[eax_11 + 0x00000010:word32]
	Mem20[edx + 0x00000004:word32] = Mem16[eax_11 + 0x00000014:word32]
	Mem24[edx + 0x00000008:word32] = Mem20[eax_11 + 0x00000018:word32]
	Mem28[edx + 0x0000000C:word32] = Mem24[eax_11 + 0x0000001C:word32]
	Mem30[edx:word32] = 0x00000000
	Mem34[edx + 0x00000008:word32] = 0x00000000
	return
fn00418DF0_exit:


word32 fn00418E0C(word32 eax, word32 edx, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ecx
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00418E0C_entry:
l00418E0C:
	fn00418318(eax)
	word32 esp_20 = <invalid>
	Mem29[esp_20 - 4:word32] = fp - 4
	Mem31[esp_20 - 8:word32] = 0x00418E51
	Mem35[esp_20 - 12:word32] = Mem31[fs:0x00000000:word32]
	Mem36[fs:0x00000000:word32] = esp_20 - 12
	word32 ebp_41 = fn00417DA8(Mem36[0x0042B8D8:word32], edx)
	word32 ecx_59 = Mem36[esp_20 - 4:word32]
	Mem61[fs:0x00000000:word32] = Mem36[esp_20 - 12:word32]
	Mem63[esp_20 - 4:word32] = 0x00418E58
	fn00418328(Mem63[ebp_41 - 0x00000004:word32])
	ebpOut = ebp_41
	return ecx_59
fn00418E0C_exit:


word32 fn00418E5C(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn00418E5C_entry:
l00418E5C:
	return Mem0[Mem0[eax + 0x00000010:word32] + 0x00000014:word32]
fn00418E5C_exit:


word32 fn00418E64(word32 eax, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ebp ecx
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esi esp
fn00418E64_entry:
l00418E64:
	fn00418DF0(eax, fp + 0xFFFFFFE8)
	branch bLoc0C != 0x01 l00418E86
l00418E81:
l00418E86:
	word32 ebp_34
	word32 ecx_36 = fn00418E0C(eax, fp + 0xFFFFFFE8, out ebp_34)
	ebpOut = ebp_34
	return ecx_36
fn00418E64_exit:


word32 fn00418E98(word32 eax, ptr32 & ecxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: eax ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: esp
fn00418E98_entry:
l00418E98:
	word32 eax_10 = Mem6[eax + 0x00000010:word32]
	branch Mem11[eax_10 + 0x00000008:word32] != 0x00000000 l00418F6C
l00418F6C:
	word32 eax_16 = Mem11[eax_10 + 0x00000008:word32]
	ecxOut = ecx
	ebpOut = ebp
	return eax_16
l00418EB1:
	fn00417BF0(Mem11[0x0042B8D8:word32])
	word32 esp_22 = <invalid>
	Mem29[esp_22 - 4:word32] = fp - 4
	Mem31[esp_22 - 8:word32] = 0x00418F65
	Mem35[esp_22 - 12:word32] = Mem31[fs:0x00000000:word32]
	Mem36[fs:0x00000000:word32] = esp_22 - 12
	word32 esp_106 = esp_22 - 12
	branch Mem36[eax_10 + 0x00000008:word32] != 0x00000000 l00418F4D
l00418ED2:
	word32 eax_41 = Mem36[eax_10 + 0x00000018:word32]
	branch eax_41 == 0x00000000 l00418EFA
l00418EFA:
	byte al_48 = Mem46[eax_10 + 0x0000001C:byte]
	branch al_48 <u 0x01 l00418F10
l00418F10:
l00418F0C:
	branch al_48 == 0x01 l00418F17
l00418F17:
l00418F0E:
l00418F20:
l00418EDC:
	word32 ecx_69 = Mem67[eax_41:word32]
	call Mem67[ecx_69 + 0x0000006C:word32] (retsize: 4;)
		uses: dl:0x01,eax:eax_41,ecx:ecx_69,edx:edx_81,Stack +FFFFFFF0:0x00000003
	word32 eax_77 = Mem67[eax_10 + 0x00000018:word32]
	word32 edx_78 = Mem67[eax_77:word32]
	word32 edx_81
	word32 ecx_82
	call Mem67[edx_78 + 0x00000064:word32] (retsize: 4;)
		uses: eax:eax_77,ecx:ecx_82,edx:edx_78
		defs: ecx:ecx_82,edx:edx_81
l00418F30:
	fn004182D4(Mem87[eax_10 + 0x00000014:word32])
	word32 esp_91 = <invalid>
	Mem99[esp_91 - 4:word32] = fp - 0x00000014
	Mem102[eax_10 + 0x00000008:word32] = CreateBrushIndirect(Mem99[esp_91 - 4:(ptr32 LOGBRUSH)])
	esp_106 = esp_91 - 4
l00418F4D:
	word32 esp_109 = esp_106 + 4
	word32 ecx_112 = Mem107[esp_109 + 4:word32]
	Mem116[fs:0x00000000:word32] = Mem107[esp_106:word32]
	Mem118[esp_109 + 4:word32] = 0x00418F6C
	word32 eax_120 = fn00417BFC(Mem118[0x0042B8D8:word32])
	ecxOut = ecx_112
	ebpOut = fp - 4
	return eax_120
fn00418E98_exit:


byte fn00418F78(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn00418F78_entry:
l00418F78:
	word32 eax_6 = Mem0[eax + 0x00000010:word32]
	return Mem0[eax_6 + 0x0000001C:byte]
fn00418F78_exit:


word32 fn00418F80(word32 eax, byte dl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..7] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esi esp
fn00418F80_entry:
l00418F80:
	fn00418DF0(eax, fp + 0xFFFFFFE8)
	branch SLICE(edx, byte, 0) != 0x01 l00418FA4
l00418F9C:
l00418FA4:
	word32 ebp_36
	fn00418E0C(eax, fp + 0xFFFFFFE8, out ebp_36)
	return ebp_36
fn00418F80_exit:


word32 fn00418FB4(word32 eax, word32 ecx, word32 edx, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ecx edx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx edi esi esp
fn00418FB4_entry:
	byte dl = SLICE(edx, byte, 0)
l00418FB4:
	word32 esp_10 = fp - 12
	branch dl == 0x00 l00418FC3
l00418FBB:
	esp_10 = fp + 0xFFFFFFE4
	eax = fn00403990(eax, ecx, edx)
l00418FC3:
	word24 edx_24_8_53 = SLICE(fn004036F0(eax, ecx, 0x00000000, Mem12[esp_10 + -4:word32]), word24, 8)
	word32 esp_49 = esp_10 - 4
	Mem50[esp_49:word32] = eax + 0x00000038
	InitializeCriticalSection(Mem50[esp_49:LPCRITICAL_SECTION])
	word32 ecx_57
	word32 edx_58
	word32 eax_55 = fn0041850C(Mem50[0x004173B4:word32], ecx, SEQ(edx_24_8_53, 0x01), out ecx_57, out edx_58)
	Mem65[eax + 0x0000000C:word32] = eax_55
	Mem66[eax_55 + 0x0000000C:word32] = eax
	Mem67[eax_55 + 0x00000008:word32] = 0x00419504
	Mem69[eax_55 + 0x00000014:word32] = eax + 0x00000038
	word32 ecx_76
	word32 edx_77
	word32 eax_74 = fn00418A14(Mem69[0x00417530:word32], ecx_57, SEQ(SLICE(edx_58, word24, 8), 0x01), out ecx_76, out edx_77)
	Mem84[eax + 0x00000010:word32] = eax_74
	Mem85[eax_74 + 0x0000000C:word32] = eax
	Mem86[eax_74 + 0x00000008:word32] = 0x00419524
	Mem88[eax_74 + 0x00000014:word32] = eax + 0x00000038
	word32 eax_93 = fn00418CE0(Mem88[0x00417630:word32], ecx_76, SEQ(SLICE(edx_77, word24, 8), 0x01))
	Mem103[eax + 0x00000014:word32] = eax_93
	Mem104[eax_93 + 0x0000000C:word32] = eax
	Mem105[eax_93 + 0x00000008:word32] = 0x00419544
	Mem107[eax_93 + 0x00000014:word32] = eax + 0x00000038
	Mem108[eax + 0x00000020:word32] = 0x00CC0020
	Mem110[eax + 0x00000008:byte] = Mem108[0x00419074:byte]
	word32 ebx_115 = <invalid>
	word32 ebp_114
	word32 edi_119
	byte bl_172
	word32 edx_117
	word32 ecx_116 = fn00414564(Mem110[0x0042B8DC:word32], out edx_117, out bl_172, out ebp_114, out edi_119)
	branch SLICE(ebx_115, byte, 0) == 0x00 l0041906C
l0041905D:
	edx_117 = fn004039E8(edi_119)
	Mem132[fs:0x00000000:word32] = Mem110[esp_49:word32]
l0041906C:
	edxOut = edx_117
	ebpOut = ebp_114
	return ecx_116
fn00418FB4_exit:


word32 fn004190D4(word32 eax, word32 ecx, word32 edx, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn004190D4_entry:
l004190D4:
	word32 edx_15 = Mem9[eax:word32]
	word32 esp_16
	word32 ecx_65
	call Mem9[edx_15 + 0x00000010:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_57,edx:edx_15
		defs: ecx:ecx_65,esp:esp_16
	word32 ebp_73
	fn00419390(eax, ecx, Mem9[0x0041910C:byte], eax, out ebp_73)
	word32 ebp_35
	word32 ecx_37
	Mem44[esp_16 - 4:word32] = fn00418E98(Mem9[eax + 0x00000014:word32], out ecx_37, out ebp_35)
	Mem46[esp_16 - 8:word32] = edx
	Mem49[esp_16 - 12:word32] = Mem46[eax + 0x00000004:word32]
	FillRect(Mem49[esp_16 - 12:HDC], Mem49[esp_16 - 8:(ptr32 RECT)], Mem49[esp_16 - 4:HBRUSH])
	word32 edx_52 = Mem49[eax:word32]
	word32 ecx_57
	call Mem49[edx_52 + 0x0000000C:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_37,edx:edx_52
		defs: ecx:ecx_57
	ebpOut = ebp_35
	return ecx_65
fn004190D4_exit:


void fn00419110(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: esp
// Trashed: SZO eax ebx esp Top
// Preserved:
fn00419110_entry:
l00419110:
	EnterCriticalSection(0x0042B8B8)
	Mem12[eax + 0x00000050:word32] = Mem10[eax + 0x00000050:word32] + 0x00000001
	LeaveCriticalSection(0x0042B8B8)
	EnterCriticalSection(eax + 0x00000038)
	return
fn00419110_exit:


void fn00419138(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00419138_entry:
l00419138:
	word32 ebp_54
	fn00419390(eax, ecx, Mem12[0x00419160:byte], eax, out ebp_54)
	MoveToEx(Mem36[eax + 0x00000004:word32], edx, ecx, 0x00000000)
	return
fn00419138_exit:


word32 fn00419164(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx edi esi esp
fn00419164_entry:
l00419164:
	branch ecx == 0x00000000 l00419197
l00419171:
	word32 edx_23 = Mem12[eax:word32]
	word32 ecx_25
	call Mem12[edx_23 + 0x00000010:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx,edx:edx_23
		defs: ecx:ecx_25
	fn00419390(eax, ecx_25, Mem12[0x0041919C:byte], eax, out ebp)
	word32 ecx_47
	call Mem12[Mem12[ecx:word32] + 0x00000014:word32] (retsize: 4;)
		uses: eax:ecx,ecx:edx,edx:eax
		defs: ecx:ecx_47
	word32 edx_53 = Mem12[eax:word32]
	call Mem12[edx_53 + 0x0000000C:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_47,edx:edx_53
l00419197:
	return ebp
fn00419164_exit:


word32 fn004191FC(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: ebx
// Trashed: SZO eax ebx esp Top
// Preserved:
fn004191FC_entry:
l004191FC:
	LeaveCriticalSection(eax + 0x00000038)
	EnterCriticalSection(0x0042B8B8)
	Mem15[eax + 0x00000050:word32] = Mem13[eax + 0x00000050:word32] - 0x00000001
	LeaveCriticalSection(0x0042B8B8)
	return 0x0042B8B8
fn004191FC_exit:


word32 fn0041924C(word32 eax, word32 ecx, word32 edx, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebx esi esp
// Trashed: SCZO eax ebp ebx ecx edx esi esp Top
// Preserved:
fn0041924C_entry:
l0041924C:
	word32 ebp_42
	fn00419390(eax, ecx, Mem9[0x0041926C:byte], eax, out ebp_42)
	word32 eax_29 = Mem28[eax + 0x00000004:word32]
	GetCurrentPositionEx(eax_29, edx)
	esiOut = eax_29
	return edx
fn0041924C_exit:


void fn00419270(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ebp ebx ecx edx Top
// Preserved: edi esi esp
fn00419270_entry:
l00419270:
	fn00419138(eax, Mem16[edx + 0x00000004:word32], Mem9[edx:word32])
	return
fn00419270_exit:


word32 fn00419290(word32 eax, word32 ecx, word32 edx, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebp esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00419290_entry:
l00419290:
	word32 ebp_25
	fn00419390(eax, ecx, Mem12[0x004192B8:byte], eax, out ebp_25)
	word32 eax_38 = GetPixel(Mem34[eax + 0x00000004:word32], edx, ecx)
	ebpOut = ebp_25
	esiOut = edx
	return eax_38
fn00419290_exit:


word32 fn004192BC(word32 eax, word32 ecx, ptr32 & ecxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: eax ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esp
fn004192BC_entry:
l004192BC:
	word32 edx_10 = Mem6[eax:word32]
	word32 ecx_32
	call Mem6[edx_10 + 0x00000010:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_23,edx:edx_10
		defs: ecx:ecx_32
	word32 ebp_22
	word32 ecx_23 = fn00419390(eax, ecx, Mem6[0x004192D8:byte], eax, out ebp_22)
	word32 eax_28 = Mem6[eax + 0x00000004:word32]
	ecxOut = ecx_32
	ebpOut = ebp_22
	return eax_28
fn004192BC_exit:


void fn004192DC(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SCZO dl eax Top
// Preserved: ebx esi esp
fn004192DC_entry:
	word24 eax_24_8_17 = SLICE(eax, word24, 8)
l004192DC:
	word32 esi_12 = Mem9[eax + 0x00000004:word32]
	branch esi_12 == 0x00000000 l0041932F
l004192E7:
	branch Mem9[eax + 0x00000008:byte] == (SLICE(~SEQ(eax_24_8_17, Mem9[0x00419334:byte]), byte, 0) & Mem9[eax + 0x00000008:byte]) l0041932F
l004192F8:
	SelectObject(esi_12, Mem9[0x0042B890:word32])
	SelectObject(Mem33[eax + 0x00000004:word32], Mem29[0x0042B894:word32])
	Mem53[eax + 0x00000008:byte] = SLICE(~SEQ(SLICE(SelectObject(Mem40[eax + 0x00000004:word32], Mem36[0x0042B898:word32]), word24, 8), Mem43[0x00419334:byte]), byte, 0) & Mem43[eax + 0x00000008:byte]
l0041932F:
	return
fn004192DC_exit:


void fn0041933C(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn0041933C_entry:
l0041933C:
	word32 esi_12 = edx
	word32 ebx_14 = eax
	word32 eax_15 = Mem9[eax + 0x00000004:word32]
	branch edx == eax_15 l0041938B
l0041934C:
	branch eax_15 == 0x00000000 l00419376
l00419350:
	fn004192DC(eax)
	ebx_14 = fn0041924C(eax, ecx, fp + 0xFFFFFFF0, out esi_12)
	word32 esp_38 = <invalid>
	Mem45[ebx_14 + 0x00000018:word32] = Mem9[esp_38:word32]
	Mem47[ebx_14 + 0x0000001C:word32] = Mem45[esp_38 + 0x00000004:word32]
	Mem49[ebx_14 + 0x00000004:word32] = 0x00000000
	Mem51[ebx_14 + 0x00000008:byte] = Mem49[ebx_14 + 0x00000008:byte] & 0xFE
l00419376:
	branch esi_12 == 0x00000000 l0041938B
l0041937A:
	Mem61[ebx_14 + 0x00000008:byte] = Mem59[ebx_14 + 0x00000008:byte] | 0x01
	Mem64[ebx_14 + 0x00000004:word32] = esi_12
	fn00419270(ebx_14, ebx_14 + 0x00000018)
l0041938B:
	return
fn0041933C_exit:


word32 fn00419390(word32 eax, word32 ecx, byte dl, word32 ebx, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl:[0..7] eax:[0..31] ebx:[8..31] ecx:[0..31] fs:[0..15]
// LiveOut: ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn00419390_entry:
	word24 ebx_24_8_18 = SLICE(ebx, word24, 8)
l00419390:
	word32 esi_16 = eax
	byte bl_22 = SLICE(~SEQ(ebx_24_8_18, Mem14[eax + 0x00000008:byte]), byte, 0) & dl
	branch Mem14[0x00419400:byte] == bl_22 l004193FC
l004193A9:
	branch (bl_22 & 0x01) == 0x00 l004193D2
l004193AE:
	word32 edx_30 = Mem14[eax:word32]
	word32 esp_33
	word32 edx_35
	call Mem14[edx_30 + 0x00000014:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx,edx:edx_30
		defs: ecx:ecx_34,edx:edx_35,esp:esp_33
	word24 edx_24_8_44 = SLICE(edx_35, word24, 8)
	branch Mem14[eax + 0x00000004:word32] != 0x00000000 l004193D2
l004193BB:
	word32 ecx_48
	fn00403C5C(fn0040B0C4(Mem14[0x00413518:word32], Mem14[0x0042A754:word32], SEQ(edx_24_8_44, 0x01), out ecx_48, out ebp), ecx_48, Mem14[esp_33 + -4:word32], out ecx)
l004193D2:
	byte bl_101 = bl_22
	branch (bl_22 & 0x02) == 0x00 l004193DE
l004193D7:
	word32 ebx_74 = <invalid>
	byte bl_197
	ecx = fn0041942C(eax, out bl_197, out ebp, out esi_16)
	bl_101 = SLICE(ebx_74, byte, 0) (alias)
l004193DE:
	branch (bl_101 & 0x04) == 0x00 l004193EA
l004193E3:
	word32 ebx_93 = <invalid>
	byte bl_198
	ecx = fn00419458(esi_16, out bl_198, out ebp)
	bl_101 = SLICE(ebx_93, byte, 0) (alias)
l004193EA:
	branch (bl_101 & 0x08) == 0x00 l004193F6
l004193EF:
	word32 ebx_111 = <invalid>
	byte bl_199
	ecx = fn00419488(esi_16, out bl_199, out ebp)
	bl_101 = SLICE(ebx_111, byte, 0) (alias)
l004193F6:
	Mem129[esi_16 + 0x00000008:byte] = bl_101 | Mem14[esi_16 + 0x00000008:byte]
l004193FC:
	ebpOut = ebp
	return ecx
fn00419390_exit:


word32 fn0041942C(word32 eax, ptr32 & blOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ebp ebx ecx esi
// Trashed: SCZO eax ebp ebx ecx edx esi Top
// Preserved: esp
fn0041942C_entry:
l0041942C:
	word32 esp_16 = <invalid>
	word32 ebp_12
	word32 ebx_13
	word32 ecx_14
	word32 esi_18
	Mem24[esp_16 - 4:word32] = fn004186F4(Mem6[eax + 0x0000000C:word32], out ecx_14, out ebx_13, out ebp_12, out esi_18)
	Mem27[esp_16 - 8:word32] = Mem24[ebx_13 + 0x00000004:word32]
	SelectObject(Mem27[esp_16 - 8:HDC], Mem27[esp_16 - 4:HGDIOBJ])
	SetTextColor(Mem38[ebx_13 + 0x00000004:word32], fn004182D4(Mem27[Mem27[ebx_13 + 0x0000000C:word32] + 0x00000018:word32]))
	blOut = <invalid>
	ebpOut = ebp_12
	esiOut = esi_18
	return ecx_14
fn0041942C_exit:


word32 fn00419458(word32 eax, ptr32 & blOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ebp ebx ecx
// Trashed: SCZO eax ebp ebx ecx edx esp Top
// Preserved:
fn00419458_entry:
l00419458:
	word32 ebp_12
	word32 ecx_13
	SelectObject(Mem20[eax + 0x00000004:word32], fn00418BD0(Mem6[eax + 0x00000010:word32], out ecx_13, out ebp_12))
	SetROP2(Mem29[eax + 0x00000004:word32], (word32) Mem23[(word32) Mem23[Mem23[eax + 0x00000010:word32] + 0x00000018:byte] * 0x00000002 + 0x0042863C:word16])
	blOut = <invalid>
	ebpOut = ebp_12
	return ecx_13
fn00419458_exit:


word32 fn00419488(word32 eax, ptr32 & blOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ebp ebx ecx
// Trashed: SCZO eax ebp ebx ecx edx Top
// Preserved: esp
fn00419488_entry:
l00419488:
	word32 ecx_115
	word32 ebp_116
	UnrealizeObject(fn00418E98(Mem6[eax + 0x00000014:word32], out ecx_115, out ebp_116))
	word32 ebp_25
	word32 ecx_27
	SelectObject(Mem34[eax + 0x00000004:word32], fn00418E98(Mem21[eax + 0x00000014:word32], out ecx_27, out ebp_25))
	branch SLICE((uint32) (uint8) fn00418F78(Mem37[eax + 0x00000014:word32]), byte, 0) != 0x00 l004194DB
l004194DB:
	SetBkColor(Mem55[eax + 0x00000004:word32], ~fn004182D4(fn00418E5C(Mem37[eax + 0x00000014:word32])))
	SetBkMode(Mem61[eax + 0x00000004:word32], 0x00000001)
	blOut = <invalid>
	ebpOut = <invalid>
	return <invalid>
l004194B7:
	SetBkColor(Mem77[eax + 0x00000004:word32], fn004182D4(fn00418E5C(Mem37[eax + 0x00000014:word32])))
	SetBkMode(Mem83[eax + 0x00000004:word32], 0x00000002)
	blOut = <invalid>
	ebpOut = <invalid>
	return <invalid>
fn00419488_exit:


void fn00419564(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx_24_8:[0..23] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esp
fn00419564_entry:
l00419564:
	word32 ecx_16
	word32 ebp_36
	word32 ecx_37
	fn00403C5C(fn0040B0C4(Mem6[0x00417000:word32], eax, SEQ(edx_24_8, 0x01), out ecx_16, out ebp_36), ecx_16, dwLoc08, out ecx_37)
	return
fn00419564_exit:


word32 fn0041957C(word32 eax, word32 edx, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx_24_8:[0..23] fs:[0..15]
// LiveOut: ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esp
fn0041957C_entry:
l0041957C:
	word32 ebp_15
	word32 ecx_16
	word32 ecx_25
	fn00403C5C(fn0040B0C4(Mem6[0x00416FA4:word32], eax, SEQ(edx_24_8, 0x01), out ecx_16, out ebp_15), ecx_16, dwLoc08, out ecx_25)
	ebpOut = ebp_15
	return ecx_25
fn0041957C_exit:


void fn00419594(word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx_24_8:[0..23] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: esp
fn00419594_entry:
l00419594:
	word32 ebp_17
	fn0041957C(Mem0[0x0042A734:word32], edx_24_8, out ebp_17)
	return
fn00419594_exit:


word32 fn004195A0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edx esp Top
// Preserved:
fn004195A0_entry:
l004195A0:
	word32 v8_18 = Mem16[fs:0x00000000:word32]
	Mem21[fs:0x00000000:word32] = fp - 20
	word32 edx_27
	word32 ebp_28
	fn00406050(Mem21[0x0042A67C:word32], fp - 0x00000008, out edx_27, out ebp_28)
	word32 ecx_38
	word32 ecx_81
	fn00403C5C(fn0040B008(Mem21[0x004134BC:word32], Mem21[ebp_28 - 0x00000004:word32], SEQ(SLICE(edx_27, word24, 8), 0x01), out ecx_38), ecx_38, dwLoc18, out ecx_81)
	Mem63[fs:0x00000000:word32] = v8_18
	word32 edx_82
	fn00404240(ebp_28 - 0x00000004, out edx_82)
	return ebp_28
fn004195A0_exit:


word32 fn004195F4(ptr32 & ebxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: ebp ebx ecx
// Trashed: SCZO eax ebp ebx ecx edx Top
// Preserved: esp
fn004195F4_entry:
l004195F4:
	Mem23[fs:0x00000000:word32] = fp + 0xFFFFFEE8
	word32 eax_24 = GetLastError()
	word32 ebp_107 = fp - 4
	branch eax_24 == 0x00000000 l00419672
l0041961F:
	branch FormatMessageA(0x00001000, 0x00000000, eax_24, 0x00000400, fp - 0x00000104, 0x00000100, 0x00000000) == 0x00000000 l00419672
l00419672:
	ebp_107 = fn004195A0()
l00419643:
	word32 ecx_75
	word32 ecx_143
	fn00403C5C(fn0040B008(Mem43[0x004134BC:word32], 0x00000000, SEQ(SLICE(fn004044B0(fp - 0x00000108, 0x00000100, fp - 0x00000104), word24, 8), 0x01), out ecx_75), ecx_75, dwLoc013C, out ecx_143)
l00419677:
	Mem104[fs:0x00000000:word32] = dwLoc08
	word32 edx_144
	word32 ecx_111 = fn00404240(ebp_107 - 0x00000104, out edx_144)
	ebxOut = eax_24
	ebpOut = ebp_107
	return ecx_111
fn004195F4_exit:


word32 fn0041969C(word32 eax, ptr32 & ecxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: eax ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esp
fn0041969C_entry:
l0041969C:
	word32 ebx_15 = eax
	branch eax != 0x00000000 l004196A8
l004196A3:
	ecx = fn004195F4(out ebx_15, out ebp)
l004196A8:
	ecxOut = ecx
	ebpOut = ebp
	return ebx_15
fn0041969C_exit:


word32 fn004196CC(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004196CC_entry:
l004196CC:
	word32 eax_12 = SLICE(edx *s eax, word32, 0) + (ecx - 0x00000001) & ~(ecx - 0x00000001)
	branch eax_12 >= 0x00000000 l004196DC
l004196D9:
	eax_12 = eax_12 + 0x00000007
l004196DC:
	return eax_12 >> 0x00000003
fn004196CC_exit:


void fn00419A30(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx esp
fn00419A30_entry:
l00419A30:
	GetSystemInfo(fp - 0x00000030)
	word32 ecx_19 = edx - 0x00000001
	branch edx < 0x00000001 l00419A81
l00419A4E:
	branch wLoc10 == 0x0003 l00419A68
l00419A68:
l00419A69:
	word32 eax_32 = Mem31[eax + ecx_19 * 0x00000004:word32]
	Mem46[eax + ecx_19 * 0x00000004:word32] = SEQ(SEQ(0x0000, SLICE(eax_32, byte, 0), SLICE(eax_32, byte, 8)), SLICE(eax_32 >>u 0x00000010, byte, 0))
	ecx_19 = ecx_19 - 0x00000001
	branch ecx_19 >= 0x00000000 l00419A69
l00419A80:
l00419A58:
	Mem60[eax + ecx_19 * 0x00000004:word32] = __bswap(Mem55[eax + ecx_19 * 0x00000004:word32]) >>u 0x00000008
	ecx_19 = ecx_19 - 0x00000001
	branch ecx_19 >= 0x00000000 l00419A58
l00419A66:
l00419A81:
	return
fn00419A30_exit:


byte fn00419BA0(word32 eax, word32 dwArg00, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: eax ebp
// Trashed: SCZO eax ebp ebx ecx edx Top
// Preserved: esp
fn00419BA0_entry:
l00419BA0:
	branch Mem14[0x0042B884:word32] == 0x00000000 l00419C2D
l00419C2D:
	ebpOut = ebp
	return 0x00
l00419BB6:
	word32 eax_28 = GetDC(0x00000000)
	Mem39[fs:0x00000000:word32] = fp + 0xFFFFFFE0
	branch GetDeviceCaps(eax_28, 0x00000068) < 0x00000010 l00419C0D
l00419BDE:
	GetPaletteEntries(Mem54[0x0042B884:word32], 0x00000000, 0x00000008, eax + 0x00000004)
	GetPaletteEntries(Mem66[0x0042B884:word32], 0x00000008, 0x00000008, eax - 0x0000001C + (word32) Mem57[eax + 0x00000002:word16] * 0x00000004)
l00419C0D:
	Mem84[fs:0x00000000:word32] = dwArg00
	word32 eax_93 = ReleaseDC(0x00000000, eax_28)
	ebpOut = fp - 4
	return SLICE(eax_93, byte, 0)
fn00419BA0_exit:


word32 fn00419C38(word32 eax, word32 ecx, word32 edx, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebp
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: D ebx edi esi esp
fn00419C38_entry:
l00419C38:
	word32 esp_13 = fp + 0xFFFFFBF0
	word32 esi_105 = 0x00000000
	branch eax == 0x00000000 l00419C87
l00419C87:
	fn00402C1C(edx, ecx << 0x00000002, fp + 0xFFFFFBF4)
l00419C4F:
	word32 eax_39 = CreateCompatibleDC(0x00000000)
	word32 eax_45 = SelectObject(eax_39, eax)
	GetDIBColorTable(eax_39, 0x00000000, 0x00000100, fp + 0xFFFFFBE8)
	SelectObject(eax_39, eax_45)
	DeleteDC(eax_39)
	esp_13 = fp + 0xFFFFFBC8
l00419C9A:
	branch Mem68[esp_13 + 0x00000002:word16] == 0x0000 l00419CCD
l00419CA2:
	branch Mem68[esp_13 + 0x00000002:word16] != 0x0010 l00419CB5
l00419CAA:
	branch SLICE((uint32) (uint8) fn00419BA0(esp_13, Mem68[esp_13 + -4:word32], out ebp), byte, 0) != 0x00 l00419CC3
l00419CB5:
	fn00419A30(esp_13 + 0x00000004, (word32) Mem68[esp_13 + 0x00000002:word16])
l00419CC3:
	word32 esp_102 = esp_13 - 4
	Mem103[esp_102:word32] = esp_13
	esi_105 = CreatePalette(Mem103[esp_102:(ptr32 LOGPALETTE)])
l00419CCD:
	ebpOut = ebp
	return esi_105
fn00419C38_exit:


void fn00419CDC(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00419CDC_entry:
l00419CDC:
	branch eax == 0x00000000 l00419D25
l00419CEF:
	word32 dwLoc1C_83 = eax
	branch GetObjectA(eax, 0x00000004, fp - 16) == 0x00000000 l00419D25
l00419CFC:
	branch eax == 0x00000000 l00419D25
l00419D02:
	branch ecx + 0x00000001 >= eax l00419D0D
l00419D0A:
	dwLoc1C_83 = ecx + 0x00000001
l00419D0D:
	GetPaletteEntries(eax, 0x00000000, dwLoc1C_83, edx)
	fn00419A30(edx, eax)
l00419D25:
	return
fn00419CDC_exit:


word32 fn00419E78(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: edx
// Trashed: SCZO eax edx Top
// Preserved: ebx esi esp
fn00419E78_entry:
	byte dl = SLICE(edx, byte, 0)
l00419E78:
	word32 esp_14 = fp - 8
	branch dl == 0x00 l00419E86
l00419E7E:
	esp_14 = fp + 0xFFFFFFE8
	eax = fn00403990(eax, ecx, edx)
l00419E86:
	word32 edx_39 = fn004036F0(eax, ecx, 0x00000000, Mem9[esp_14 + -4:word32])
	branch dl == 0x00 l00419EA8
l00419E99:
	edx_39 = fn004039E8(eax)
	Mem52[fs:0x00000000:word32] = Mem9[esp_14:word32]
l00419EA8:
	return edx_39
fn00419E78_exit:


word32 fn0041A304(word32 eax, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ebp ebx edi edx
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn0041A304_entry:
l0041A304:
	word32 ebp_122 = fp - 4
	branch eax == 0x00000000 l0041A37B
l0041A37B:
	ebxOut = ebx
	ebpOut = ebp
	ediOut = edi
	return edx
l0041A313:
	word32 ebx_147
	word32 eax_30 = fn004145EC(Mem18[0x00428664:word32], out ebx_147)
	word32 esp_32 = <invalid>
	Mem36[esp_32 - 4:word32] = fp - 4
	Mem38[esp_32 - 8:word32] = 0x0041A374
	Mem42[esp_32 - 12:word32] = Mem38[fs:0x00000000:word32]
	Mem43[fs:0x00000000:word32] = esp_32 - 12
	word32 ebx_44 = Mem43[eax_30 + 0x00000008:word32]
	word32 ebx_125 = ebx_44 - 0x00000001
	branch ebx_44 < 0x00000001 l0041A35C
l0041A336:
	word32 ecx_55
	word32 eax_53 = fn00414348(eax_30, ebx_125, out ecx_55, out ebp_122, out edi)
	word32 edx_64 = Mem43[eax_53 + 0x00000058:word32]
	branch edx_64 == 0x00000000 l0041A356
l0041A346:
	branch Mem43[Mem43[edx_64 + 0x00000028:word32] + 0x00000008:word32] != Mem43[ebp_122 - 0x00000004:word32] l0041A356
l0041A351:
	ebx_125 = fn0041A3E8(eax_53, ecx_55, out ebp_122)
l0041A356:
	ebx_125 = ebx_125 - 0x00000001
	branch ebx_125 != 0xFFFFFFFF l0041A336
l0041A35C:
	word32 edx_94 = Mem43[esp_32 - 12:word32]
	Mem102[fs:0x00000000:word32] = edx_94
	Mem104[esp_32 - 4:word32] = 0x0041A37B
	fn00414650(Mem104[0x00428664:word32])
	ebxOut = ebx_125
	ebpOut = ebp_122
	ediOut = edi
	return edx_94
fn0041A304_exit:


word32 fn0041A380(word32 eax, word32 ecx, word32 edx, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebp ecx edx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx edi esi esp
fn0041A380_entry:
	byte dl = SLICE(edx, byte, 0)
l0041A380:
	word32 esp_10 = fp - 12
	branch dl == 0x00 l0041A38F
l0041A387:
	esp_10 = fp + 0xFFFFFFE4
	eax = fn00403990(eax, ecx, edx)
l0041A38F:
	word32 ebp_42
	word32 edx_44
	word32 ecx_43 = fn00418FB4(eax, ecx, 0x00000000, out edx_44, out ebp_42)
	Mem50[eax + 0x00000058:word32] = ecx
	branch dl == 0x00 l0041A3B6
l0041A3A7:
	edx_44 = fn004039E8(eax)
	Mem59[fs:0x00000000:word32] = Mem50[esp_10:word32]
l0041A3B6:
	ecxOut = ecx_43
	edxOut = edx_44
	ebpOut = ebp_42
	return eax
fn0041A380_exit:


word32 fn0041A3E8(word32 eax, word32 ecx, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: ebp ebx
// Trashed: SCZO eax ebp ebx ecx edx Top
// Preserved: esp
fn0041A3E8_entry:
l0041A3E8:
	branch Mem15[eax + 0x00000004:word32] == 0x00000000 l0041A483
l0041A483:
	ebpOut = ebp
	return ebx
l0041A3FD:
	fn00419110(eax)
	word32 esp_28 = <invalid>
	Mem34[esp_28 - 4:word32] = fp - 4
	Mem36[esp_28 - 8:word32] = 0x0041A47C
	Mem40[esp_28 - 12:word32] = Mem36[fs:0x00000000:word32]
	Mem41[fs:0x00000000:word32] = esp_28 - 12
	word32 esp_39 = esp_28 - 12
	word32 eax_43 = Mem41[eax + 0x0000005C:word32]
	branch eax_43 == 0x00000000 l0041A42A
l0041A41D:
	Mem48[esp_28 - 16:word32] = eax_43
	Mem52[esp_28 - 20:word32] = Mem48[eax + 0x00000004:word32]
	SelectObject(Mem52[esp_28 - 20:HDC], Mem52[esp_28 - 16:HGDIOBJ])
	esp_39 = esp_28 - 20
l0041A42A:
	word32 eax_57 = Mem55[eax + 0x00000060:word32]
	branch eax_57 == 0x00000000 l0041A443
l0041A434:
	word32 esp_62 = esp_39 - 4
	Mem63[esp_62:word32] = 0xFFFFFFFF
	Mem65[esp_62 - 4:word32] = eax_57
	Mem69[esp_62 - 8:word32] = Mem65[eax + 0x00000004:word32]
	SelectPalette(Mem69[esp_62 - 8:HDC], Mem69[esp_62 - 4:HPALETTE], Mem69[esp_62:BOOL])
	esp_39 = esp_62 - 8
l0041A443:
	word32 ebx_74 = Mem72[eax + 0x00000004:word32]
	fn0041933C(eax, ecx, 0x00000000)
	word32 esp_93 = esp_39 - 4
	Mem94[esp_93:word32] = ebx_74
	DeleteDC(Mem94[esp_93:HDC])
	word32 ebp_99 = fn00414600(Mem94[0x00428664:word32])
	Mem117[fs:0x00000000:word32] = Mem94[esp_93:word32]
	Mem119[esp_93 + 8:word32] = 0x0041A483
	word32 ebx_122 = fn004191FC(Mem119[ebp_99 - 0x00000004:word32])
	ebpOut = ebp_99
	return ebx_122
fn0041A3E8_exit:


void fn0041A574(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SZO Top
// Preserved: esp
fn0041A574_entry:
l0041A574:
	Mem7[eax + 0x00000004:word32] = Mem0[eax + 0x00000004:word32] + 0x00000001
	return
fn0041A574_exit:


void fn0041A578(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esp
fn0041A578_entry:
l0041A578:
	branch eax == 0x00000000 l0041A595
l0041A57F:
	Mem13[eax + 0x00000004:word32] = Mem6[eax + 0x00000004:word32] - 0x00000001
	branch Mem13[eax + 0x00000004:word32] != 0x00000000 l0041A595
l0041A588:
	word32 edx_17 = Mem13[eax:word32]
	word32 ecx_37
	call Mem13[edx_17:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_37,edx:edx_17
		defs: ecx:ecx_37
	word32 ecx_56
	fn00403720(eax, out ecx_56)
l0041A595:
	return
fn0041A578_exit:


void fn0041A6FC(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut:
// Trashed: SCZO dx Top
// Preserved: esp
fn0041A6FC_entry:
l0041A6FC:
	branch (Mem0[eax + 0x00000028:byte] & 0x03) == 0x00 l0041A744
l0041A702:
	branch Mem0[eax + 0x00000040:word32] != 0x00000000 l0041A744
l0041A708:
	word16 dx_11 = Mem0[eax + 0x00000026:word16]
	branch dx_11 != 0x0010 l0041A729
l0041A729:
	branch dx_11 != 0x0020 l0041A744
l0041A72F:
	Mem16[eax + 0x00000040:word32] = 0x00FF0000
	Mem17[eax + 0x00000044:word32] = 0x0000FF00
	Mem18[eax + 0x00000048:word32] = 0x000000FF
l0041A712:
	Mem19[eax + 0x00000040:word32] = 0x0000F800
	Mem20[eax + 0x00000044:word32] = 0x000007E0
	Mem21[eax + 0x00000048:word32] = 0x0000001F
l0041A744:
	return
fn0041A6FC_exit:


word32 fn0041A748(word32 eax, word32 dwArg08, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15] Stack +0008:[0..31]
// LiveOut: eax ebp ebx edi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved: D
fn0041A748_entry:
l0041A748:
	word32 ebp_360 = fp - 4
	word32 esp_15 = fp + 0xFFFFFF58
	branch Mem25[dwArg08 + 0x00000018:word32] == 0x00000000 l0041A785
l0041A76B:
	branch Mem25[dwArg08 + 0x0000001C:word32] == 0x00000000 l0041AD9D
l0041A778:
	branch Mem25[dwArg08 + 0x00000020:word32] == 0x00000000 l0041AD9D
l0041A785:
	branch Mem25[dwArg08 + 0x00000018:word32] != 0x00000000 l0041A7A8
l0041A78E:
	branch Mem25[dwArg08 + 0x00000004:word32] == 0x00000000 l0041AD9D
l0041A79B:
	branch Mem25[dwArg08 + 0x00000008:word32] == 0x00000000 l0041AD9D
l0041A7A8:
	word32 ebp_55
	word32 edi_59
	word32 ebx_1002
	word24 edx_24_8_81 = SLICE(fn0041A304(eax, out ebx_1002, out ebp_55, out edi_59), word24, 8)
	Mem65[ebp_55 - 0x00000070:word32] = 0x00000000
	branch Mem65[ebp_55 - 0x00000004:word32] == 0x00000000 l0041A7D7
l0041A7BB:
	esp_15 = fp + 0xFFFFFF4C
	branch GetObjectA(Mem74[ebp_55 - 0x00000004:word32], 0x00000054, ebp_55 - 0x00000088) >= 0x00000018 l0041A7D7
l0041A7D2:
	fn00419594(edx_24_8_81)
l0041A7D7:
	word32 esp_92 = esp_15 - 4
	Mem93[esp_92:word32] = 0x00000000
	word32 ebp_98
	word32 ecx_1100
	Mem105[ebp_98 - 0x00000018:word32] = fn0041969C(GetDC(Mem93[esp_92:HWND]), out ecx_1100, out ebp_98)
	Mem108[esp_92 - 4:word32] = Mem105[ebp_98 - 0x00000018:word32]
	word32 ebp_112
	word32 ecx_113
	Mem119[ebp_112 - 0x0000001C:word32] = fn0041969C(CreateCompatibleDC(Mem108[esp_92 - 4:HDC]), out ecx_113, out ebp_112)
	Mem122[esp_92 - 8:word32] = ebp_112
	Mem124[esp_92 - 12:word32] = 0x0041AD96
	Mem127[esp_92 - 16:word32] = Mem124[fs:0x00000000:word32]
	Mem128[fs:0x00000000:word32] = esp_92 - 16
	branch Mem128[Mem128[ebp_112 + 0x0000000C:word32] + 0x00000018:word32] >=u 0x00000028 l0041A86C
l0041A86C:
	Mem141[ebp_112 - 0x00000024:word32] = fn00402A28(0x0000042C, ecx_113)
	Mem144[esp_92 - 20:word32] = ebp_112
	Mem146[esp_92 - 24:word32] = 0x0041AAA0
	Mem149[esp_92 - 28:word32] = Mem146[fs:0x00000000:word32]
	Mem150[fs:0x00000000:word32] = esp_92 - 28
	Mem152[Mem150[ebp_112 + 0x0000000C:word32] + 0x00000018:word32] = 0x00000028
	Mem154[Mem152[ebp_112 + 0x0000000C:word32] + 0x00000024:word16] = 0x0001
	word32 esp_148 = esp_92 - 28
	branch Mem154[Mem154[ebp_112 + 0x0000000C:word32] + 0x00000026:word16] != 0x0000 l0041A8C7
l0041A8A4:
	Mem159[esp_92 - 32:word32] = 0x0000000C
	Mem162[esp_92 - 36:word32] = Mem159[ebp_112 - 0x00000018:word32]
	word32 eax_163 = GetDeviceCaps(Mem162[esp_92 - 36:HDC], Mem162[esp_92 - 32:int32])
	Mem166[esp_92 - 40:word32] = 0x0000000E
	Mem169[esp_92 - 44:word32] = Mem166[ebp_112 - 0x00000018:word32]
	word16 bx_173 = SLICE(eax_163, word16, 0) *s SLICE(GetDeviceCaps(Mem169[esp_92 - 44:HDC], Mem169[esp_92 - 40:int32]), word16, 0)
	Mem176[Mem169[ebp_112 + 0x0000000C:word32] + 0x00000026:word16] = bx_173
	esp_148 = esp_92 - 44
	ebx_1002 = SEQ(SLICE(eax_163, word16, 16), bx_173) (alias)
l0041A8C7:
	word32 esi_181 = Mem178[ebp_112 + 0x0000000C:word32] + 0x00000018
	word32 edi_182 = Mem178[ebp_112 - 0x00000024:word32]
	word32 ecx_183 = 0x0000000A
l0041A8D7:
	branch ecx_183 == 0x00000000 l0041A8D9
l0041A8D9:
	Mem190[Mem186[ebp_112 + 0x0000000C:word32] + 0x00000004:word32] = Mem186[Mem186[ebp_112 + 0x0000000C:word32] + 0x0000001C:word32]
	Mem194[Mem190[ebp_112 + 0x0000000C:word32] + 0x00000008:word32] = Mem190[Mem190[ebp_112 + 0x0000000C:word32] + 0x00000020:word32]
	branch Mem194[Mem194[ebp_112 + 0x0000000C:word32] + 0x00000026:word16] >u 0x0008 l0041A9C6
l0041A9C6:
	word16 ax_199 = Mem194[Mem194[ebp_112 + 0x0000000C:word32] + 0x00000026:word16]
	branch ax_199 == 0x0010 l0041A9DC
l0041A9D3:
	branch ax_199 != 0x0020 l0041AA03
l0041A9DC:
	branch (Mem194[Mem194[ebp_112 + 0x0000000C:word32] + 0x00000028:byte] & 0x03) == 0x00 l0041AA03
l0041A9E5:
	fn0041A6FC(Mem194[ebp_112 + 0x0000000C:word32])
	fn00402C1C(Mem194[ebp_112 + 0x0000000C:word32] + 0x00000040, 0x0000000C, Mem194[ebp_112 - 0x00000024:word32] + 0x00000028)
l0041A8FF:
	branch Mem194[Mem194[ebp_112 + 0x0000000C:word32] + 0x00000026:word16] != 0x0001 l0041A931
l0041A909:
	branch Mem194[ebp_112 - 0x00000004:word32] == 0x00000000 l0041A915
l0041A90F:
	branch Mem194[ebp_112 - 0x00000074:word32] != 0x00000000 l0041A931
l0041A931:
	branch Mem194[ebp_112 - 0x0000000C:word32] == 0x00000000 l0041A94F
l0041A94F:
	branch Mem194[ebp_112 - 0x00000004:word32] == 0x00000000 l0041AA03
l0041A959:
	word32 esp_282
	word32 esp_246 = esp_148 - 4
	Mem247[esp_246:word32] = Mem194[ebp_112 - 0x00000004:word32]
	Mem250[esp_246 - 4:word32] = Mem247[ebp_112 - 0x0000001C:word32]
	Mem252[ebp_112 - 0x00000014:word32] = SelectObject(Mem250[esp_246 - 4:HDC], Mem250[esp_246:HGDIOBJ])
	branch Mem252[ebp_112 - 0x00000070:word32] <=u 0x00000000 l0041A994
l0041A96F:
	branch Mem252[ebp_112 - 0x00000074:word32] == 0x00000000 l0041A994
l0041A994:
	Mem259[esp_246 - 8:word32] = 0x00000000
	Mem263[esp_246 - 12:word32] = Mem259[ebp_112 - 0x00000024:word32]
	Mem265[esp_246 - 16:word32] = 0x00000000
	int64 edx_eax_268 = (int64) Mem265[Mem265[ebp_112 + 0x0000000C:word32] + 0x00000020:word32]
	word32 edx_270 = SLICE(edx_eax_268, word32, 32)
	Mem275[esp_246 - 20:word32] = (SLICE(edx_eax_268, word32, 0) ^ edx_270) - edx_270
	Mem277[esp_246 - 24:word32] = 0x00000000
	Mem280[esp_246 - 28:word32] = Mem277[ebp_112 - 0x00000004:word32]
	Mem283[esp_246 - 32:word32] = Mem280[ebp_112 - 0x0000001C:word32]
	GetDIBits(Mem283[esp_246 - 32:HDC], Mem283[esp_246 - 28:HBITMAP], Mem283[esp_246 - 24:UINT], Mem283[esp_246 - 20:UINT], Mem283[esp_246 - 16:LPVOID], Mem283[esp_246 - 12:LPBITMAPINFO], Mem283[esp_246 - 8:UINT])
	esp_282 = esp_246 - 32
l0041A975:
	Mem289[esp_246 - 8:word32] = Mem252[ebp_112 - 0x00000024:word32] + 0x00000028
	Mem291[esp_246 - 12:word32] = 0x00000100
	Mem293[esp_246 - 16:word32] = 0x00000000
	Mem296[esp_246 - 20:word32] = Mem293[ebp_112 - 0x0000001C:word32]
	Mem299[Mem296[ebp_112 + 0x0000000C:word32] + 0x00000038:word32] = GetDIBColorTable(Mem296[esp_246 - 20:HDC], Mem296[esp_246 - 16:UINT], Mem296[esp_246 - 12:UINT], Mem296[esp_246 - 8:(ptr32 RGBQUAD)])
	esp_282 = esp_246 - 20
l0041A9B7:
	word32 esp_304 = esp_282 - 4
	Mem305[esp_304:word32] = Mem301[ebp_112 - 0x00000014:word32]
	Mem308[esp_304 - 4:word32] = Mem305[ebp_112 - 0x0000001C:word32]
	SelectObject(Mem308[esp_304 - 4:HDC], Mem308[esp_304:HGDIOBJ])
l0041A937:
	fn00419CDC(Mem194[ebp_112 - 0x0000000C:word32], 0x000000FF, Mem194[ebp_112 - 0x00000024:word32] + 0x00000028)
l0041A915:
	Mem325[Mem194[ebp_112 - 0x00000024:word32] + 0x00000028:word32] = 0x00000000
	Mem330[Mem325[ebp_112 - 0x00000024:word32] + 0x0000002C:word32] = 0x00FFFFFF
l0041AA03:
	word32 eax_347 = Mem346[ebp_112 - 0x00000018:word32]
	word32 ecx_1108
	Mem367[ebp_360 - 0x00000010:word32] = fn0041969C(CreateDIBSection(eax_347, Mem343[ebp_112 - 0x00000024:word32], 0x00000000, ebp_112 - 0x00000028, 0x00000000, 0x00000000), out ecx_1108, out ebp_360)
	branch Mem367[ebp_360 - 0x00000028:word32] != 0x00000000 l0041AA2D
l0041AA28:
	fn004195F4(out ebx_1002, out ebp_360)
l0041AA2D:
	branch Mem367[ebp_360 - 0x00000004:word32] == 0x00000000 l0041AA8A
l0041AA33:
	branch Mem367[Mem367[ebp_360 + 0x0000000C:word32] + 0x0000001C:word32] != Mem367[ebp_360 - 0x00000084:word32] l0041AA8A
l0041AA41:
	branch Mem367[Mem367[ebp_360 + 0x0000000C:word32] + 0x00000020:word32] != Mem367[ebp_360 - 0x00000080:word32] l0041AA8A
l0041AA4C:
	branch Mem367[Mem367[ebp_360 + 0x0000000C:word32] + 0x00000026:word16] <=u 0x0008 l0041AA8A
l0041AA8A:
	Mem409[fs:0x00000000:word32] = eax_347
	word32 ecx_1110
	word32 eax_414 = fn00402A58(Mem411[ebp_360 - 0x00000024:word32], 0x00000000, out ecx_1110)
	ebxOut = ebx_1002
	ebpOut = ebp_360
	ediOut = edi_182
	return eax_414
l0041AA56:
	int64 edx_eax_431 = (int64) Mem428[Mem428[ebp_360 + 0x0000000C:word32] + 0x00000020:word32]
	word32 edx_433 = SLICE(edx_eax_431, word32, 32)
	word32 eax_426 = Mem425[ebp_360 - 0x00000028:word32]
	word32 eax_435 = (SLICE(edx_eax_431, word32, 0) ^ edx_433) - edx_433
	word32 eax_441 = Mem440[ebp_360 - 0x00000004:word32]
	word32 eax_444 = Mem443[ebp_360 - 0x0000001C:word32]
	GetDIBits(eax_444, eax_441, 0x00000000, eax_435, eax_426, Mem422[ebp_360 - 0x00000024:word32], 0x00000000)
	fn00403D08(eax_444, eax_441)
	fn00403D08(eax_435, eax_426)
	esp_15 = fp - 0x0000000C
l0041AD9D:
	word32 eax_468 = Mem467[ebp_360 - 0x00000010:word32]
	word32 edi_470 = Mem467[esp_15:word32]
	word32 ebp_476 = Mem467[ebp_360:word32]
	ebxOut = Mem467[esp_15 + 8:word32]
	ebpOut = ebp_476
	ediOut = edi_470
	return eax_468
l0041A8D7_1:
	Mem481[edi_182:word32] = Mem186[esi_181:word32]
	esi_181 = esi_181 + 0x00000004
	edi_182 = edi_182 + 0x00000004
	ecx_183 = ecx_183 - 0x00000001
l0041A80E:
	word32 esp_500
	word32 ebp_505
	branch (Mem128[Mem128[ebp_112 + 0x0000000C:word32] + 0x00000010:word16] | Mem128[Mem128[ebp_112 + 0x0000000C:word32] + 0x00000012:word16]) != 0x0001 l0041A848
l0041A848:
	Mem494[esp_92 - 20:word32] = Mem128[Mem128[ebp_112 + 0x0000000C:word32] + 0x00000008:word32]
	Mem498[esp_92 - 24:word32] = Mem494[Mem494[ebp_112 + 0x0000000C:word32] + 0x00000004:word32]
	Mem501[esp_92 - 28:word32] = Mem498[ebp_112 - 0x00000018:word32]
	word32 ecx_1101
	Mem512[ebp_505 - 0x00000010:word32] = fn0041969C(CreateCompatibleBitmap(Mem501[esp_92 - 28:HDC], Mem501[esp_92 - 24:int32], Mem501[esp_92 - 20:int32]), out ecx_1101, out ebp_505)
	esp_500 = esp_92 - 28
l0041A822:
	Mem514[esp_92 - 20:word32] = 0x00000000
	Mem516[esp_92 - 24:word32] = 0x00000001
	Mem518[esp_92 - 28:word32] = 0x00000001
	Mem522[esp_92 - 32:word32] = Mem518[Mem518[ebp_112 + 0x0000000C:word32] + 0x00000008:word32]
	Mem526[esp_92 - 36:word32] = Mem522[Mem522[ebp_112 + 0x0000000C:word32] + 0x00000004:word32]
	word32 ecx_1102
	Mem537[ebp_505 - 0x00000010:word32] = fn0041969C(CreateBitmap(Mem526[esp_92 - 36:int32], Mem526[esp_92 - 32:int32], Mem526[esp_92 - 28:UINT], Mem526[esp_92 - 24:UINT], Mem526[esp_92 - 20:(ptr32 void)]), out ecx_1102, out ebp_505)
	esp_500 = esp_92 - 36
l0041AAA7:
	word32 ebp_544
	word32 ecx_1103
	fn0041969C(Mem539[ebp_505 - 0x00000010:word32], out ecx_1103, out ebp_544)
	word32 esp_553 = esp_500 - 4
	Mem554[esp_553:word32] = Mem539[ebp_544 - 0x00000010:word32]
	Mem557[esp_553 - 4:word32] = Mem554[ebp_544 - 0x0000001C:word32]
	word32 ecx_1104
	word32 ebp_561
	Mem568[ebp_561 - 0x00000014:word32] = fn0041969C(SelectObject(Mem557[esp_553 - 4:HDC], Mem557[esp_553:HGDIOBJ]), out ecx_1104, out ebp_561)
	Mem571[esp_553 - 8:word32] = ebp_561
	Mem573[esp_553 - 12:word32] = 0x0041AD47
	Mem576[esp_553 - 16:word32] = Mem573[fs:0x00000000:word32]
	Mem577[fs:0x00000000:word32] = esp_553 - 16
	Mem580[esp_553 - 20:word32] = ebp_561
	Mem582[esp_553 - 24:word32] = 0x0041AD36
	Mem585[esp_553 - 28:word32] = Mem582[fs:0x00000000:word32]
	Mem586[fs:0x00000000:word32] = esp_553 - 28
	Mem588[ebp_561 - 0x00000034:word32] = 0x00000000
	word32 esp_584 = esp_553 - 28
	word32 ebx_589 = 0x00000000
	branch Mem588[ebp_561 - 0x0000000C:word32] == 0x00000000 l0041AB08
l0041AAED:
	Mem593[esp_553 - 32:word32] = 0x00000000
	Mem596[esp_553 - 36:word32] = Mem593[ebp_561 - 0x0000000C:word32]
	Mem599[esp_553 - 40:word32] = Mem596[ebp_561 - 0x0000001C:word32]
	Mem601[ebp_561 - 0x00000034:word32] = SelectPalette(Mem599[esp_553 - 40:HDC], Mem599[esp_553 - 36:HPALETTE], Mem599[esp_553 - 32:BOOL])
	Mem604[esp_553 - 44:word32] = Mem601[ebp_561 - 0x0000001C:word32]
	RealizePalette(Mem604[esp_553 - 44:HDC])
	esp_584 = esp_553 - 44
l0041AB08:
	word32 esp_635
	word32 esp_608 = esp_584 - 4
	Mem610[esp_608:word32] = ebp_561
	Mem612[esp_608 - 4:word32] = 0x0041AD14
	Mem616[esp_608 - 8:word32] = Mem612[fs:0x00000000:word32]
	Mem617[fs:0x00000000:word32] = esp_608 - 8
	branch Mem617[ebp_561 + 0x00000008:word32] == 0x00000000 l0041ABD5
l0041ABD5:
	Mem621[esp_608 - 12:word32] = 0x00FF0062
	Mem625[esp_608 - 16:word32] = Mem621[Mem621[ebp_561 + 0x0000000C:word32] + 0x00000008:word32]
	Mem629[esp_608 - 20:word32] = Mem625[Mem625[ebp_561 + 0x0000000C:word32] + 0x00000004:word32]
	Mem631[esp_608 - 24:word32] = 0x00000000
	Mem633[esp_608 - 28:word32] = 0x00000000
	Mem636[esp_608 - 32:word32] = Mem633[ebp_561 - 0x0000001C:word32]
	PatBlt(Mem636[esp_608 - 32:HDC], Mem636[esp_608 - 28:int32], Mem636[esp_608 - 24:int32], Mem636[esp_608 - 20:int32], Mem636[esp_608 - 16:int32], Mem636[esp_608 - 12:DWORD])
	esp_635 = esp_608 - 32
l0041AB20:
	word32 ecx_1105
	Mem650[esp_608 - 12:word32] = fn00418E98(Mem617[Mem617[ebp_561 + 0x00000008:word32] + 0x00000014:word32], out ecx_1105, out ebp_561)
	Mem654[esp_608 - 16:word32] = Mem650[Mem650[ebp_561 + 0x0000000C:word32] + 0x00000008:word32]
	Mem657[esp_608 - 20:word32] = ebp_561 - 0x00000098
	fn00413CD0(0x00000000, Mem657[Mem657[ebp_561 + 0x0000000C:word32] + 0x00000004:word32], 0x00000000, Mem657[esp_608 - 20:word32], Mem657[esp_608 - 16:word32])
	Mem668[esp_608 - 0x00000010:word32] = ebp_561 - 0x00000098
	Mem671[esp_608 - 0x00000014:word32] = Mem668[ebp_561 - 0x0000001C:word32]
	FillRect(Mem671[esp_608 - 0x00000014:HDC], Mem671[esp_608 - 0x00000010:(ptr32 RECT)], Mem671[esp_608 - 0x0000000C:HBRUSH])
	word32 esp_677 = <invalid>
	Mem683[esp_677 - 4:word32] = fn004182D4(Mem671[Mem671[Mem671[ebp_561 + 0x00000008:word32] + 0x0000000C:word32] + 0x00000018:word32])
	Mem686[esp_677 - 8:word32] = Mem683[ebp_561 - 0x0000001C:word32]
	SetTextColor(Mem686[esp_677 - 8:HDC], Mem686[esp_677 - 4:COLORREF])
	word32 esp_692 = <invalid>
	Mem698[esp_692 - 4:word32] = fn004182D4(fn00418E5C(Mem686[Mem686[ebp_561 + 0x00000008:word32] + 0x00000014:word32]))
	Mem701[esp_692 - 8:word32] = Mem698[ebp_561 - 0x0000001C:word32]
	SetBkColor(Mem701[esp_692 - 8:HDC], Mem701[esp_692 - 4:COLORREF])
	esp_635 = esp_692 - 8
	branch Mem701[Mem701[ebp_561 + 0x0000000C:word32] + 0x00000026:word16] != 0x0001 l0041ABF5
l0041AB95:
	branch Mem701[Mem701[ebp_561 + 0x0000000C:word32] + 0x00000014:word32] == 0x00000000 l0041ABF5
l0041AB9E:
	Mem718[ebp_561 - 0x00000030:word32] = fn004182D4(Mem701[Mem701[Mem701[ebp_561 + 0x00000008:word32] + 0x0000000C:word32] + 0x00000018:word32])
	Mem728[ebp_561 - 0x0000002C:word32] = fn004182D4(fn00418E5C(Mem718[Mem718[ebp_561 + 0x00000008:word32] + 0x00000014:word32]))
	word32 esp_723 = <invalid>
	Mem731[esp_723 - 4:word32] = ebp_561 - 0x00000030
	Mem733[esp_723 - 8:word32] = 0x00000002
	Mem735[esp_723 - 12:word32] = 0x00000000
	Mem738[esp_723 - 16:word32] = Mem735[ebp_561 - 0x0000001C:word32]
	SetDIBColorTable(Mem738[esp_723 - 16:HDC], Mem738[esp_723 - 12:UINT], Mem738[esp_723 - 8:UINT], Mem738[esp_723 - 4:(ptr32 RGBQUAD)])
	esp_635 = esp_723 - 16
l0041ABF5:
	branch Mem741[ebp_561 - 0x00000004:word32] == 0x00000000 l0041ACF1
l0041ACF1:
	Mem753[fs:0x00000000:word32] = Mem741[esp_635:word32]
	word32 esp_747 = esp_635 + 4
	Mem755[esp_747 + 4:word32] = 0x0041AD1B
	word32 eax_744 = 0x00000000
	branch Mem755[ebp_561 - 0x0000000C:word32] == 0x00000000 l0041AD13
l0041AD04:
	Mem759[esp_747:word32] = 0xFFFFFFFF
	Mem762[esp_747 - 4:word32] = Mem759[ebp_561 - 0x00000034:word32]
	Mem765[esp_747 - 8:word32] = Mem762[ebp_561 - 0x0000001C:word32]
	eax_744 = SelectPalette(Mem765[esp_747 - 8:HDC], Mem765[esp_747 - 4:HPALETTE], Mem765[esp_747:BOOL])
l0041AD13:
	ebxOut = 0x00000000
	ebpOut = ebp_561
	ediOut = edi_59
	return eax_744
l0041ABFF:
	word32 esp_768 = esp_635 - 4
	Mem769[esp_768:word32] = Mem741[ebp_561 - 0x00000018:word32]
	word32 ebp_773
	word32 ecx_1106
	Mem780[ebp_773 - 0x00000020:word32] = fn0041969C(CreateCompatibleDC(Mem769[esp_768:HDC]), out ecx_1106, out ebp_773)
	Mem785[esp_768 - 4:word32] = ebp_773
	Mem787[esp_768 - 8:word32] = 0x0041ACEA
	Mem790[esp_768 - 12:word32] = Mem787[fs:0x00000000:word32]
	Mem791[fs:0x00000000:word32] = esp_768 - 12
	Mem794[esp_768 - 16:word32] = Mem791[ebp_773 - 0x00000004:word32]
	Mem797[esp_768 - 20:word32] = Mem794[ebp_773 - 0x00000020:word32]
	word32 esp_796 = esp_768 - 20
	word32 ebp_801
	word32 ecx_1107
	word32 eax_800 = fn0041969C(SelectObject(Mem797[esp_768 - 20:HDC], Mem797[esp_768 - 16:HGDIOBJ]), out ecx_1107, out ebp_801)
	branch Mem797[ebp_801 - 0x00000008:word32] == 0x00000000 l0041AC52
l0041AC38:
	Mem812[esp_768 - 24:word32] = 0x00000000
	Mem815[esp_768 - 28:word32] = Mem812[ebp_801 - 0x00000008:word32]
	Mem818[esp_768 - 32:word32] = Mem815[ebp_801 - 0x00000020:word32]
	ebx_589 = SelectPalette(Mem818[esp_768 - 32:HDC], Mem818[esp_768 - 28:HPALETTE], Mem818[esp_768 - 24:BOOL])
	Mem823[esp_768 - 36:word32] = Mem818[ebp_801 - 0x00000020:word32]
	RealizePalette(Mem823[esp_768 - 36:HDC])
	esp_796 = esp_768 - 36
l0041AC52:
	branch Mem826[ebp_801 + 0x00000008:word32] == 0x00000000 l0041AC8A
l0041AC58:
	word32 esp_833 = <invalid>
	Mem839[esp_833 - 4:word32] = fn004182D4(Mem826[Mem826[Mem826[ebp_801 + 0x00000008:word32] + 0x0000000C:word32] + 0x00000018:word32])
	Mem842[esp_833 - 8:word32] = Mem839[ebp_801 - 0x00000020:word32]
	SetTextColor(Mem842[esp_833 - 8:HDC], Mem842[esp_833 - 4:COLORREF])
	word32 esp_848 = <invalid>
	Mem854[esp_848 - 4:word32] = fn004182D4(fn00418E5C(Mem842[Mem842[ebp_801 + 0x00000008:word32] + 0x00000014:word32]))
	Mem857[esp_848 - 8:word32] = Mem854[ebp_801 - 0x00000020:word32]
	SetBkColor(Mem857[esp_848 - 8:HDC], Mem857[esp_848 - 4:COLORREF])
	esp_796 = esp_848 - 8
l0041AC8A:
	word32 esp_861 = esp_796 - 4
	Mem862[esp_861:word32] = 0x00CC0020
	Mem864[esp_861 - 4:word32] = 0x00000000
	Mem866[esp_861 - 8:word32] = 0x00000000
	Mem870[esp_861 - 12:word32] = Mem866[ebp_801 - 0x00000020:word32]
	Mem874[esp_861 - 16:word32] = Mem870[Mem870[ebp_801 + 0x0000000C:word32] + 0x00000008:word32]
	Mem878[esp_861 - 20:word32] = Mem874[Mem874[ebp_801 + 0x0000000C:word32] + 0x00000004:word32]
	Mem880[esp_861 - 24:word32] = 0x00000000
	Mem882[esp_861 - 28:word32] = 0x00000000
	Mem885[esp_861 - 32:word32] = Mem882[ebp_801 - 0x0000001C:word32]
	BitBlt(Mem885[esp_861 - 32:HDC], Mem885[esp_861 - 28:int32], Mem885[esp_861 - 24:int32], Mem885[esp_861 - 20:int32], Mem885[esp_861 - 16:int32], Mem885[esp_861 - 12:HDC], Mem885[esp_861 - 8:int32], Mem885[esp_861 - 4:int32], Mem885[esp_861:DWORD])
	word32 esp_884 = esp_861 - 32
	branch Mem885[ebp_801 - 0x00000008:word32] == 0x00000000 l0041ACC4
l0041ACB8:
	Mem890[esp_861 - 36:word32] = 0xFFFFFFFF
	Mem896[esp_861 - 40:word32] = ebx_589
	Mem899[esp_861 - 44:word32] = Mem896[ebp_801 - 0x00000020:word32]
	SelectPalette(Mem899[esp_861 - 44:HDC], Mem899[esp_861 - 40:HPALETTE], Mem899[esp_861 - 36:BOOL])
	esp_884 = esp_861 - 44
l0041ACC4:
	word32 esp_902 = esp_884 - 4
	Mem906[esp_902:word32] = eax_800
	Mem910[esp_902 - 4:word32] = Mem906[ebp_801 - 0x00000020:word32]
	word32 ebp_917
	word32 ecx_1109
	fn0041969C(SelectObject(Mem910[esp_902 - 4:HDC], Mem910[esp_902:HGDIOBJ]), out ecx_1109, out ebp_917)
	Mem933[fs:0x00000000:word32] = Mem910[esp_902 - 4:word32]
	Mem935[esp_902 + 4:word32] = 0x0041ACF1
	Mem938[esp_902:word32] = Mem935[ebp_917 - 0x00000020:word32]
	word32 eax_939 = DeleteDC(Mem938[esp_902:HDC])
	ebxOut = ebx_589
	ebpOut = ebp_917
	ediOut = edi_59
	return eax_939
fn0041A748_exit:


word32 fn0041ADAC(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: ebx esi esp
fn0041ADAC_entry:
l0041ADAC:
	word32 esi_13 = 0x00000000
	branch eax == 0x00000000 l0041AE02
l0041ADBC:
	branch GetObjectA(eax, 0x00000004, fp + 0xFFFFFBF0) == 0x00000000 l0041AE02
l0041ADCE:
	branch eax == 0x00000000 l0041AE02
l0041ADD4:
	GetPaletteEntries(eax, 0x00000000, eax, fp + 0xFFFFFBEC)
	esi_13 = CreatePalette(fp + 0xFFFFFBD8)
l0041AE02:
	return esi_13
fn0041ADAC_exit:


word32 fn0041B01C(word32 eax, word32 ecx, word32 edx, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax edx
// Trashed: SCZO eax edx Top
// Preserved: ebx ecx edi esi esp
fn0041B01C_entry:
	byte dl = SLICE(edx, byte, 0)
l0041B01C:
	word32 esp_10 = fp - 12
	branch dl == 0x00 l0041B02B
l0041B023:
	esp_10 = fp + 0xFFFFFFE4
	eax = fn00403990(eax, ecx, edx)
l0041B02B:
	word24 edx_24_8_50 = SLICE(fn00419E78(eax, ecx, 0x00000000), word24, 8)
	Mem47[eax + 0x00000034:word32] = 0x20000000
	word32 eax_49 = Mem47[0x004179C0:word32]
	word32 edx_111 = fn004036F0(eax_49, ecx, SEQ(edx_24_8_50, 0x01), Mem47[esp_10 + -4:word32])
	Mem60[eax + 0x00000028:word32] = eax_49
	fn0041A574(eax_49)
	word24 edx_24_8_70 = SLICE(edx_111, word24, 8)
	branch Mem60[0x004283D8:byte] == 0x00 l0041B069
l0041B060:
	call fn83FFFEF1 (retsize: 4;)
		uses: dl:0x01,eax:eax_32,ecx:Mem60[eax_32:word32],edx_24_8:edx_24_8_70
		defs: edx:edx_72,esp:esp_71
l0041B069:
	branch dl == 0x00 l0041B07E
l0041B06F:
	edx_111 = fn004039E8(eax)
	Mem90[fs:0x00000000:word32] = Mem60[esp_10:word32]
l0041B07E:
	edxOut = edx_111
	return eax
fn0041B01C_exit:


word32 fn0041B1B8(word32 eax, word32 ecx, word32 edx, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041B1B8_entry:
l0041B1B8:
	word32 esi_144 = dwArg04
	word32 edi_146 = fp - 0x00000060
	word32 ecx_150 = 0x00000015
l0041B1CD:
	branch ecx_150 == 0x00000000 l0041B1CF
l0041B1CF:
	word32 ebp_40 = fn0041B814(eax, ecx)
	Mem48[ebp_40 - 0x00000004:word32] = 0x00000000
	Mem50[ebp_40 - 0x00000008:word32] = 0x00000000
	Mem59[fs:0x00000000:word32] = fp + 0xFFFFFF88
	branch ecx != Mem59[0x0042B884:word32] l0041B202
l0041B202:
	Mem68[ebp_40 - 0x00000008:word32] = fn0041ADAC(ecx)
l0041B1FD:
	Mem69[ebp_40 - 0x00000008:word32] = ecx
l0041B20C:
	word32 ebp_86
	word32 ebx_87
	word32 edi_172
	Mem98[ebp_86 - 0x00000004:word32] = fn0041A748(edx, ebp_40 - 0x0000005C, out ebx_87, out ebp_86, out edi_172)
	word32 esp_93 = <invalid>
	Mem101[esp_93 - 4:word32] = ebp_86 - 0x0000005C
	word32 eax_102 = Mem101[ebx_87 + 0x00000028:word32]
	Mem107[esp_93 - 8:word32] = SEQ(SLICE(eax_102, word24, 8), Mem101[eax_102 + 0x00000070:byte])
	Mem109[esp_93 - 12:word32] = 0x00000000
	word32 ebp_114 = fn0041BA84(ebx_87, Mem109[ebp_86 - 0x00000008:word32], Mem109[ebp_86 - 0x00000004:word32], Mem109[esp_93 - 12:word32], Mem109[esp_93 - 8:byte], Mem109[esp_93 - 4:word32])
	word32 esp_120 = <invalid>
	Mem135[fs:0x00000000:word32] = Mem109[esp_120:word32]
l0041B26D:
	word32 edi_136 = Mem135[esp_120 + 12:word32]
	word32 esi_138 = Mem135[esp_120 + 16:word32]
	word32 ebx_140 = Mem135[esp_120 + 20:word32]
	ebpOut = Mem135[ebp_114:word32]
	esiOut = esi_138
	ediOut = edi_136
	return ebx_140
fn0041B1B8_exit:
l0041B1CD_1:
	Mem147[edi_146:word32] = Mem27[esi_144:word32]
	esi_144 = esi_144 + 0x00000004
	edi_146 = edi_146 + 0x00000004
	ecx_150 = ecx_150 - 0x00000001


word32 fn0041B278(word32 eax, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: edi edx
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esp
fn0041B278_entry:
l0041B278:
	word32 edi_16 = fn0041B4F8(eax)
	word32 eax_21 = Mem6[eax + 0x00000028:word32]
	Mem23[eax_21 + 0x00000050:word32] = 0x00000000
	Mem25[eax_21 + 0x00000054:word32] = 0x00000000
	word32 edx_30 = fn0040C940(eax_21 + 0x0000006C)
	ediOut = edi_16
	return edx_30
fn0041B278_exit:


word32 fn0041B4F8(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: edi
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esi esp
fn0041B4F8_entry:
l0041B4F8:
	word32 ebx_12 = Mem9[eax + 0x00000028:word32]
	branch Mem9[ebx_12 + 0x00000004:word32] <= 0x00000001 l0041B52C
l0041B52C:
	word32 eax_15 = Mem9[ebx_12 + 0x00000008:word32]
	branch eax_15 == 0x00000000 l0041B558
l0041B533:
	branch eax_15 == Mem9[ebx_12 + 0x00000014:word32] l0041B558
l0041B538:
	word32 esi_21 = Mem9[ebx_12 + 0x00000014:word32]
	branch esi_21 == 0x00000000 l0041B54E
l0041B53F:
	branch DeleteObject(esi_21) != 0x00000000 l0041B54E
l0041B549:
	word32 ebp_155
	fn004195F4(out ebx_12, out ebp_155)
l0041B54E:
	Mem44[ebx_12 + 0x00000014:word32] = 0x00000000
	Mem48[ebx_12 + 0x0000002C:word32] = 0x00000000
l0041B558:
	return edi
l0041B505:
	word32 eax_68
	word32 ebp_152
	word32 edx_151
	fn0041B824(eax, out edx_151, out ebp_152)
	branch Mem9[ebx_12 + 0x00000071:byte] == 0x00 l0041B516
l0041B516:
	eax_68 = Mem9[ebx_12 + 0x00000010:word32]
l0041B512:
	eax_68 = 0x00000000
l0041B519:
	word32 edi_87
	word32 ebp_153
	word32 esi_154
	fn0041B1B8(eax, eax_68, Mem76[ebx_12 + 0x00000008:word32], ebx_12 + 0x00000018, out ebp_153, out esi_154, out edi_87)
	return edi_87
fn0041B4F8_exit:


word32 fn0041B578(word32 eax, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: eax ebp ecx edx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn0041B578_entry:
l0041B578:
	branch Mem9[eax + 0x0000002C:word32] != 0x00000000 l0041B5B7
l0041B582:
	ecx = fn0041B824(eax, out edx, out ebp)
	word24 edx_24_8_30 = SLICE(edx, word24, 8)
	branch Mem9[eax + 0x0000002C:word32] != 0x00000000 l0041B5B7
l0041B58F:
	word32 eax_36 = fn0041A380(Mem9[0x0041A1BC:word32], eax, SEQ(edx_24_8_30, 0x01), out ecx, out edx, out ebp)
	Mem42[eax + 0x0000002C:word32] = eax_36
	Mem43[eax_36 + 0x0000002C:word32] = eax
	Mem46[eax_36 + 0x00000028:word32] = Mem43[Mem43[eax:word32] + 0x00000010:word32]
	Mem47[eax_36 + 0x00000034:word32] = eax
	Mem48[eax_36 + 0x00000030:word32] = 0x0041B278
l0041B5B7:
	word32 eax_51 = Mem50[eax + 0x0000002C:word32]
	ecxOut = ecx
	edxOut = edx
	ebpOut = ebp
	return eax_51
fn0041B578_exit:


byte fn0041B5E4(word32 eax, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax edx Top
// Preserved: esp
fn0041B5E4_entry:
l0041B5E4:
	word32 eax_23
	word32 eax_6 = Mem0[eax + 0x00000028:word32]
	word24 eax_24_8_33 = SLICE(eax_6, word24, 8)
	word24 eax_24_8_35 = SLICE(eax_6, word24, 8)
	word32 edx_7 = Mem0[eax_6 + 0x00000008:word32]
	branch edx_7 == 0x00000000 l0041B5F3
l0041B5EE:
	branch edx_7 != Mem0[eax_6 + 0x00000014:word32] l0041B60A
l0041B60A:
	eax_23 = SEQ(eax_24_8_35, 0x01) (alias)
l0041B5F3:
	branch Mem0[eax_6 + 0x00000014:word32] != 0x00000000 l0041B607
l0041B607:
	edxOut = <invalid>
	return 0x00
l0041B5F9:
	branch Mem0[eax_6 + 0x00000030:word32] != 0x00000000 l0041B603
l0041B603:
	eax_23 = 0x00000000
l0041B5FF:
	eax_23 = SEQ(eax_24_8_33, 0x01) (alias)
l0041B60C:
	edxOut = <invalid>
	return SLICE(eax_23, byte, 0)
fn0041B5E4_exit:


word32 fn0041B664(word32 eax, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31]
// LiveOut: eax ecx edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esi esp
fn0041B664_entry:
	word24 ebx_24_8_67 = SLICE(ebx, word24, 8)
l0041B664:
	word32 ebx_63 = SEQ(ebx_24_8_67, 0x08)
	word32 edx_105
	branch SLICE((uint32) (uint8) fn0041B5E4(eax, out edx_105), byte, 0) != 0x01 l0041B679
l0041B679:
	word32 eax_23 = Mem9[eax + 0x00000028:word32]
	edx_105 = eax_23 + 0x00000018
	ecx = (word32) Mem9[eax_23 + 0x0000003E:word16]
	branch ecx > 0x00000010 l0041B69C
l0041B69C:
	ecx = ecx - 0x00000018
	branch ecx == 0x00000018 l0041B6D4
l0041B6D4:
	ebx_63 = SEQ(ebx_24_8_67, 0x06) (alias)
l0041B6A1:
	ecx = ecx - 0x00000020
	branch ecx == 0x00000020 l0041B6D8
l0041B6D8:
	branch Mem9[eax_23 + 0x00000040:word32] != 0x00000000 l0041B6E0
l0041B6DE:
	ebx_63 = SEQ(ebx_24_8_67, 0x07) (alias)
l0041B6A6:
l0041B68B:
	branch ecx == 0x00000010 l0041B6B4
l0041B6B4:
	word32 eax_40 = Mem9[eax_23 + 0x00000040:word32]
	branch eax_40 <u 0x00000001 l0041B6C3
l0041B6C3:
	ebx_63 = SEQ(ebx_24_8_67, 0x04) (alias)
l0041B6BC:
	branch eax_40 == 0x00000003 l0041B6C7
l0041B6C7:
	branch Mem9[eax_23 + 0x0000005C:word32] != 0x000007E0 l0041B6E0
l0041B6D0:
	ebx_63 = SEQ(ebx_24_8_67, 0x05) (alias)
l0041B6C1:
l0041B68D:
	ecx = ecx - 0x00000001
	branch ecx == 0x00000001 l0041B6A8
l0041B6A8:
	ebx_63 = SEQ(ebx_24_8_67, 0x01) (alias)
l0041B690:
	ecx = ecx - 0x00000004
	branch ecx == 0x00000004 l0041B6AC
l0041B6AC:
	ebx_63 = SEQ(ebx_24_8_67, 0x02) (alias)
l0041B695:
	ecx = ecx - 0x00000008
	branch ecx == 0x00000008 l0041B6B0
l0041B6B0:
	ebx_63 = SEQ(ebx_24_8_67, 0x03) (alias)
l0041B69A:
l0041B675:
	ebx_63 = 0x00000000
l0041B6E0:
	ecxOut = ecx
	edxOut = edx_105
	return ebx_63
fn0041B664_exit:


void fn0041B6E8(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041B6E8_entry:
l0041B6E8:
	word32 edi_26
	word24 edx_24_8_45 = SLICE(fn0041B278(eax, out edi_26), word24, 8)
	word32 eax_33 = Mem15[eax + 0x00000028:word32]
	branch edi_26 < 0x00000000 l0041B70D
l0041B708:
	branch edi_26 < Mem15[eax_33 + 0x00000020:word32] l0041B717
l0041B70D:
	fn00419564(Mem15[0x0042A8DC:word32], edx_24_8_45)
l0041B717:
	word32 edi_64
	fn0041B7A0(eax, out edi_64)
	GdiFlush()
	branch Mem15[eax_33 + 0x00000038:word32] <= 0x00000000 l0041B72F
l0041B72A:
l0041B72F:
	fn004196CC(Mem15[eax_33 + 0x00000034:word32], 0x00000020, (word32) Mem15[eax_33 + 0x0000003E:word16])
	return
fn0041B6E8_exit:


word32 fn0041B7A0(word32 eax, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ebp edi
// Trashed: SCZO eax ebp ecx edi edx Top
// Preserved: ebx esi esp
fn0041B7A0_entry:
l0041B7A0:
	word32 esp_33 = fp - 8
	word32 ebx_11 = Mem9[eax + 0x00000028:word32]
	branch Mem9[ebx_11 + 0x00000008:word32] == 0x00000000 l0041B810
l0041B7AB:
	branch Mem9[ebx_11 + 0x00000014:word32] != 0x00000000 l0041B810
l0041B7B1:
	fn0041B924(eax)
	branch Mem9[ebx_11 + 0x00000030:word32] != 0x00000000 l0041B7F8
l0041B7BC:
	GetObjectA(Mem31[ebx_11 + 0x00000008:word32], 0x00000054, ebx_11 + 0x00000018)
	Mem39[ebx_11 + 0x00000030:word32] = 0x00000028
	Mem41[ebx_11 + 0x00000034:word32] = Mem39[ebx_11 + 0x0000001C:word32]
	Mem43[ebx_11 + 0x00000038:word32] = Mem41[ebx_11 + 0x00000020:word32]
	Mem44[ebx_11 + 0x0000003C:word16] = 0x0001
	Mem48[ebx_11 + 0x0000003E:word16] = Mem44[ebx_11 + 0x00000028:word16] *s Mem44[ebx_11 + 0x0000002A:word16]
	esp_33 = fp - 20
l0041B7F8:
	word32 esp_52 = esp_33 - 4
	Mem53[esp_52:word32] = ebx_11 + 0x00000018
	Mem55[esp_52 - 4:word32] = 0x00000000
	word32 ebx_63
	Mem74[ebx_63 + 0x00000014:word32] = fn0041A748(Mem55[ebx_11 + 0x00000008:word32], Mem55[esp_52:word32], out ebx_63, out ebp, out edi)
l0041B810:
	ediOut = edi
	return ebp
fn0041B7A0_exit:


word32 fn0041B814(word32 eax, word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edx Top
// Preserved: esp
fn0041B814_entry:
l0041B814:
	word32 edx_6 = Mem0[eax + 0x0000002C:word32]
	branch edx_6 == 0x00000000 l0041B822
l0041B81B:
	fn0041A3E8(edx_6, ecx, out ebp)
l0041B822:
	return ebp
fn0041B814_exit:


word32 fn0041B824(word32 eax, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut: ebp ecx edx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: esp
fn0041B824_entry:
l0041B824:
	word32 eax_12 = Mem10[eax + 0x00000028:word32]
	branch Mem10[eax_12 + 0x00000008:word32] != 0x00000000 l0041B8AE
l0041B839:
	branch Mem10[eax_12 + 0x00000014:word32] != 0x00000000 l0041B8AE
l0041B83F:
	branch Mem10[eax_12 + 0x0000006C:word32] == 0x00000000 l0041B8AE
l0041B8AE:
	word32 eax_22 = Mem10[eax + 0x00000028:word32]
	branch Mem10[eax_22 + 0x00000008:word32] != 0x00000000 l0041B8C0
l0041B8BA:
	edx = Mem10[eax_22 + 0x00000014:word32]
	Mem26[eax_22 + 0x00000008:word32] = edx
l0041B8C0:
	edxOut = edx
	ebpOut = ebp
	return ecx
l0041B845:
	fn00415C9C(Mem35[eax_12 + 0x0000006C:word32], 0x00000000, 0x00000000)
	word32 edx_47 = Mem35[eax + 0x00000010:word32]
	word32 edx_49 = Mem48[eax + 0x00000014:word32]
	word32 v11_57 = Mem55[fs:0x00000000:word32]
	Mem60[fs:0x00000000:word32] = fp + 0xFFFFFFE0
	Mem65[eax + 0x00000010:word32] = 0x00000000
	Mem66[eax + 0x00000014:word32] = 0x00000000
	word32 ecx_71 = Mem66[eax:word32]
	call Mem66[ecx_71 + 0x00000054:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_71,edx:Mem66[Mem66[eax + 0x00000028:word32] + 0x0000006C:word32],Stack +0004:v11_57,Stack +0008:0x0041B8A7,Stack +000C:fp - 4,Stack +0010:edx_47,Stack +0014:edx_49
	Mem87[fs:0x00000000:word32] = eax
	Mem92[eax + 0x00000010:word32] = edx_47
	Mem94[eax + 0x00000014:word32] = edx_49
	edxOut = edx_49
	ebpOut = fp - 4
	return dwArg00
fn0041B824_exit:


void fn0041B924(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041B924_entry:
l0041B924:
	word32 edi_132 = eax
	word32 ebp_18 = Mem15[eax + 0x00000028:word32]
	branch Mem15[eax + 0x00000030:byte] != 0x00 l0041B9D7
l0041B937:
	branch Mem15[ebp_18 + 0x00000010:word32] != 0x00000000 l0041B9D7
l0041B941:
	branch Mem15[ebp_18 + 0x00000014:word32] == 0x00000000 l0041B9D7
l0041B94B:
	word32 eax_25 = Mem15[ebp_18 + 0x00000014:word32]
	branch eax_25 != Mem15[ebp_18 + 0x00000008:word32] l0041B958
l0041B953:
	word32 ebx_209
	fn0041A304(eax_25, out ebx_209, out ebp_18, out edi_132)
l0041B958:
	word32 ebp_56
	word32 eax_53 = fn00419C38(Mem15[ebp_18 + 0x00000014:word32], 0x00000001 << Mem15[ebp_18 + 0x0000003E:byte], 0x00000000, out ebp_56)
	Mem62[ebp_56 + 0x00000010:word32] = eax_53
	branch eax_53 != 0x00000000 l0041B9D7
l0041B978:
	byte bl_100
	word32 esp_112 = fp - 20
	word32 ebp_72
	word32 ecx_210
	word32 eax_71 = fn0041969C(GetDC(0x00000000), out ecx_210, out ebp_72)
	branch Mem68[ebp_72 + 0x00000071:byte] != 0x00 l0041B9B3
l0041B98C:
	esp_112 = fp - 36
	branch GetDeviceCaps(eax_71, 0x0000000C) *s GetDeviceCaps(eax_71, 0x0000000E) < SLICE((word32) Mem91[ebp_72 + 0x00000028:word16] *s (word32) Mem91[ebp_72 + 0x0000002A:word16], word32, 0) l0041B9B3
l0041B9B3:
	bl_100 = 0x01
l0041B9AF:
	bl_100 = 0x00 (alias)
l0041B9B5:
	Mem108[ebp_72 + 0x00000071:byte] = bl_100
	branch bl_100 == 0x00 l0041B9C5
l0041B9BC:
	esp_112 = esp_112 - 4
	Mem117[esp_112:word32] = eax_71
	Mem119[ebp_72 + 0x00000010:word32] = CreateHalftonePalette(Mem117[esp_112:HDC])
l0041B9C5:
	word32 esp_121 = esp_112 - 4
	Mem123[esp_121:word32] = eax_71
	Mem125[esp_121 - 4:word32] = 0x00000000
	ReleaseDC(Mem125[esp_121 - 4:HWND], Mem125[esp_121:HDC])
	branch Mem125[ebp_72 + 0x00000010:word32] != 0x00000000 l0041B9D7
l0041B9D3:
	Mem134[edi_132 + 0x00000030:byte] = 0x01
l0041B9D7:
	return
fn0041B924_exit:


word32 fn0041BA84(word32 eax, word32 ecx, word32 edx, word32 dwArg04, byte bArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..7] Stack +000C:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041BA84_entry:
	word24 edx_24_8_27 = SLICE(edx, word24, 8)
l0041BA84:
	word32 eax_26 = Mem24[0x004179C0:word32]
	fn004036F0(eax_26, ecx, SEQ(edx_24_8_27, 0x01), dwLoc1C)
	Mem47[fs:0x00000000:word32] = fp + 0xFFFFFFDC
	Mem49[eax_26 + 0x00000008:word32] = edx
	Mem51[eax_26 + 0x00000010:word32] = ecx
	word32 esi_140 = dwArg0C
	word32 edi_142 = eax_26 + 0x00000018
	word32 ecx_146 = 0x00000015
l0041BACD:
	branch ecx_146 == 0x00000000 l0041BACF
l0041BACF:
	Mem62[eax_26 + 0x00000070:byte] = bArg08
	branch Mem62[eax_26 + 0x0000002C:word32] == 0x00000000 l0041BAED
l0041BAE1:
	Mem69[eax_26 + 0x00000014:word32] = Mem62[eax_26 + 0x00000008:word32]
l0041BAED:
	Mem86[eax_26 + 0x0000006C:word32] = fn004038DC(dwArg04, Mem71[0x00413C30:word32], dwLoc28)
	Mem96[fs:0x00000000:word32] = 0x0041BB0B
l0041BB22:
	EnterCriticalSection(0x0042B8A0)
	word32 v18_106 = Mem105[fs:0x00000000:word32]
	Mem109[fs:0x00000000:word32] = fp + 0xFFFFFFDC
	fn0041A578(Mem109[eax + 0x00000028:word32])
	Mem122[eax + 0x00000028:word32] = eax_26
	fn0041A574(eax_26)
	Mem135[fs:0x00000000:word32] = v18_106
	LeaveCriticalSection(0x0042B8A0)
	return fp - 4
fn0041BA84_exit:
l0041BACD_1:
	Mem143[edi_142:word32] = Mem59[esi_140:word32]
	esi_140 = esi_140 + 0x00000004
	edi_142 = edi_142 + 0x00000004
	ecx_146 = ecx_146 - 0x00000001


word32 fn0041C3E4(word32 eax, byte dl, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..7] fs:[0..15]
// LiveOut: ebp ebx ecx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041C3E4_entry:
l0041C3E4:
	word32 ebp_128 = fp - 4
	word32 esp_143 = fp + 0xFFFFFF90
	byte bl_232 = SLICE(edx, byte, 0)
	word24 edx_24_8_43 = SLICE(edx_26, word24, 8)
	word32 edx_26
	word32 ecx_25
	branch SLICE(edx, byte, 0) == SLICE(fn0041B664(eax, out ecx_25, out edx_26), byte, 0) l0041C543
l0041C402:
	byte al_36 = SLICE(edx, byte, 0)
	branch al_36 <u 0x01 l0041C40E
l0041C40E:
	word32 ecx_42 = Mem22[eax:word32]
	call Mem22[ecx_42 + 0x0000006C:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_42,edx:SEQ(edx_24_8_43, 0x01),Stack +0017:dwLoc5D,Stack +001B:dwLoc59
		defs: ecx:ecx_48,esp:esp_45
l0041C408:
	branch al_36 == 0x08 l0041C41D
l0041C41D:
	ecx_25 = fn0041957C(Mem22[0x0042A724:word32], edx_24_8_43, out ebp_128)
l0041C543:
	word32 esp_68 = esp_143 + 4
	word32 edi_67 = Mem22[esp_143:word32]
	word32 esi_69 = Mem22[esp_68:word32]
	word32 ebp_74 = Mem22[ebp_128:word32]
	ebxOut = Mem22[esp_68 + 4:word32]
	ebpOut = ebp_74
	esiOut = esi_69
	ediOut = edi_67
	return ecx_25
l0041C40C:
l0041C42C:
	fn00403020(fp - 0x00000061, 0x00000000, 0x00000054)
	word32 esi_177 = Mem22[eax + 0x00000028:word32] + 0x00000018
	word32 edi_179 = fp - 0x00000061
	word32 ecx_231 = 0x00000006
l0041C44C:
	branch ecx_231 == 0x00000000 l0041C44E
l0041C44E:
	branch bl_232 == 0x02 l0041C495
l0041C495:
l0041C48A:
	branch bl_232 == 0x03 l0041C49F
l0041C49F:
	word32 ecx_310
	word32 eax_127 = fn0041969C(GetDC(0x00000000), out ecx_310, out ebp_128)
	Mem139[ebp_128 - 0x00000008:word32] = CreateHalftonePalette(eax_127)
	Mem140[ebp_128 - 0x00000009:byte] = 0x01
	ReleaseDC(0x00000000, eax_127)
	esp_143 = fp + 0xFFFFFF80
l0041C48E:
	branch bl_232 == 0x05 l0041C4C4
l0041C4C4:
l0041C493:
l0041C4E0:
	word32 esp_157 = esp_143 - 4
	Mem159[esp_157:word32] = ebp_128
	Mem161[esp_157 - 4:word32] = 0x0041C531
	Mem165[esp_157 - 8:word32] = Mem161[fs:0x00000000:word32]
	Mem166[fs:0x00000000:word32] = esp_157 - 8
	Mem169[esp_157 - 12:word32] = ebp_128 - 0x0000005D
	word32 eax_170 = Mem169[ebp_128 - 0x00000004:word32]
	word32 edx_171 = Mem169[eax_170:word32]
	word32 esp_182
	word32 eax_184
	call Mem169[edx_171 + 0x00000064:word32] (retsize: 4;)
		uses: eax:eax_170,edx:edx_171,Stack +FFFFFFA7:dwLoc5D,Stack +FFFFFFAB:dwLoc59
		defs: eax:eax_184,esp:esp_182
	word32 ebp_192
	word32 edi_195
	word32 esi_197
	word32 ebx_193 = fn0041B1B8(Mem169[ebp_128 - 0x00000004:word32], Mem169[ebp_128 - 0x00000008:word32], eax_184, Mem169[esp_182:word32], out ebp_192, out esi_197, out edi_195)
	Mem209[Mem169[ebp_192 - 0x00000004:word32] + 0x00000022:byte] = Mem169[ebp_192 - 0x00000008:word32] != 0x00000000
	word32 esp_198 = <invalid>
	word32 ecx_215 = Mem209[esp_198 + 0x0000000C:word32]
	Mem217[fs:0x00000000:word32] = Mem209[esp_198 + 0x00000004:word32]
	Mem219[esp_198 + 0x0000000C:word32] = 0x0041C538
	branch Mem219[ebp_192 - 0x00000009:byte] == 0x00 l0041C530
l0041C527:
	Mem224[esp_198 + 0x00000008:word32] = Mem219[ebp_192 - 0x00000008:word32]
	DeleteObject(Mem224[esp_198 + 0x00000008:HGDIOBJ])
l0041C530:
	ebxOut = ebx_193
	ebpOut = ebp_192
	esiOut = esi_197
	ediOut = edi_195
	return ecx_215
fn0041C3E4_exit:
l0041C44C_1:
	Mem228[edi_179:word32] = Mem226[esi_177:word32]
	esi_177 = esi_177 + 0x00000004
	edi_179 = edi_179 + 0x00000004
	ecx_231 = ecx_231 - 0x00000001


void fn0041CE08(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx_24_8:[0..23] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041CE08_entry:
l0041CE08:
	word32 ebx_27
	word32 edi_32
	word32 ebp_222
	word32 esi_223
	fn0041C3E4(eax, SEQ(edx_24_8, 0x06), out ebx_27, out ebp_222, out esi_223, out edi_32)
	word32 edx_40 = Mem15[ebx_27:word32]
	word32 eax_42
	word32 esp_41
	call Mem15[edx_40 + 0x00000020:word32] (retsize: 4;)
		uses: eax:ebx_27,edx:edx_40
		defs: eax:eax_42,esp:esp_41
	branch eax_42 < 0x00000001 l0041CEB5
l0041CE2E:
	Mem52[esp_41 + 0x0000000C:word32] = eax_42
l0041CE35:
	fn0041B6E8(ebx_27)
	Mem69[esp_41:word32] = ebx_27
	fn0041B6E8(ebx_27)
	Mem80[edi_32:word32] = ebx_27
	word32 edx_82 = Mem80[ebx_27:word32]
	word32 eax_85
	call Mem80[edx_82 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:ebx_27,edx:edx_82
		defs: eax:eax_85
	Mem93[edi_32:word32] = Mem80[edi_32:word32] + ((eax_85 - 0x00000001) + (eax_85 - 0x00000001) * 0x00000002)
	word32 edx_96 = Mem93[ebx_27:word32]
	word32 eax_98
	call Mem93[edx_96 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:ebx_27,edx:edx_96
		defs: eax:eax_98,esp:esp_97
	word32 eax_104 = eax_98 - 0x00000001 >> 0x00000001
	branch eax_104 >= 0x00000000 l0041CE68
l0041CE65:
	eax_104 = (eax_98 - 0x00000001 >> 0x00000001) + (eax_104 <u 0x00000000)
l0041CE68:
	branch eax_104 < 0x00000000 l0041CEAE
l0041CE6C:
	word32 eax_114 = eax_104 + 0x00000001
l0041CE6D:
	word32 edx_118 = Mem117[esp_41:word32]
	Mem120[esp_41 + 0x00000008:word16] = Mem117[edx_118:word16]
	Mem122[esp_41 + 0x0000000A:byte] = Mem120[edx_118 + 0x00000002:byte]
	word32 ecx_125 = Mem122[edi_32:word32]
	word32 edx_123 = Mem122[esp_41:word32]
	Mem128[edx_123:word16] = Mem122[ecx_125:word16]
	Mem130[edx_123 + 0x00000002:byte] = Mem128[ecx_125 + 0x00000002:byte]
	word32 edx_131 = Mem130[edi_32:word32]
	Mem133[edx_131:word16] = Mem130[esp_41 + 0x00000008:word16]
	Mem135[edx_131 + 0x00000002:byte] = Mem133[esp_41 + 0x0000000A:byte]
	Mem137[esp_41:word32] = Mem135[esp_41:word32] + 0x00000003
	Mem139[edi_32:word32] = Mem137[edi_32:word32] - 0x00000003
	eax_114 = eax_114 - 0x00000001
	branch eax_114 != 0x00000000 l0041CE6D
l0041CEAE:
	word32 v23_153 = Mem151[esp_41 + 0x0000000C:word32] - 0x00000001
	Mem154[esp_41 + 0x0000000C:word32] = v23_153
	branch v23_153 != 0x00000000 l0041CE35
l0041CEB5:
	return
fn0041CE08_exit:


void fn0041CEC0(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx_24_8:[0..23] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0041CEC0_entry:
l0041CEC0:
	word32 ebx_27
	word32 edi_32
	word32 ebp_209
	word32 esi_210
	fn0041C3E4(eax, SEQ(edx_24_8, 0x06), out ebx_27, out ebp_209, out esi_210, out edi_32)
	word32 edx_40 = Mem15[ebx_27:word32]
	word32 esp_41
	word32 eax_42
	call Mem15[edx_40 + 0x00000020:word32] (retsize: 4;)
		uses: eax:ebx_27,edx:edx_40
		defs: eax:eax_42,esp:esp_41
	word32 eax_48 = eax_42 - 0x00000001 >> 0x00000001
	branch eax_48 >= 0x00000000 l0041CEE3
l0041CEE0:
	eax_48 = eax_48 + (eax_48 <u 0x00000000)
l0041CEE3:
	branch eax_48 < 0x00000000 l0041CF45
l0041CEE7:
	Mem60[esp_41 + 0x00000008:word32] = eax_48 + 0x00000001
l0041CEEE:
	fn0041B6E8(ebx_27)
	Mem77[edi_32:word32] = ebx_27
	word32 edx_79 = Mem77[ebx_27:word32]
	word32 esp_82
	call Mem77[edx_79 + 0x00000020:word32] (retsize: 4;)
		uses: eax:ebx_27,edx:edx_79
		defs: esp:esp_82
	fn0041B6E8(ebx_27)
	Mem100[esp_82 + 0x00000004:word32] = ebx_27
	word32 edx_102 = Mem100[ebx_27:word32]
	word32 esp_103
	word32 eax_104
	call Mem100[edx_102 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:ebx_27,edx:edx_102
		defs: eax:eax_104,esp:esp_103
	branch eax_104 * 0x00000003 < 0x00000001 l0041CF3E
l0041CF1F:
	word32 eax_114 = eax_104 * 0x00000003
l0041CF20:
	byte dl_119 = Mem117[Mem117[edi_32:word32]:byte]
	Mem124[Mem117[edi_32:word32]:byte] = Mem117[Mem117[esp_103 + 0x00000004:word32]:byte]
	Mem126[Mem124[esp_103 + 0x00000004:word32]:byte] = dl_119
	Mem128[edi_32:word32] = Mem126[edi_32:word32] + 0x00000001
	Mem130[esp_103 + 0x00000004:word32] = Mem128[esp_103 + 0x00000004:word32] + 0x00000001
	eax_114 = eax_114 - 0x00000001
	branch eax_114 != 0x00000000 l0041CF20
l0041CF3E:
	word32 v20_140 = Mem139[esp_103 + 0x00000008:word32] - 0x00000001
	Mem141[esp_103 + 0x00000008:word32] = v20_140
	branch v20_140 != 0x00000000 l0041CEEE
l0041CF45:
	return
fn0041CEC0_exit:


word32 fn0041CF50(word32 eax, word32 ecx, word32 edx, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx edi esi esp
fn0041CF50_entry:
l0041CF50:
	word32 ecx_30
	word32 ecx_38
	word32 edx_135
	word32 ebp_136
	word32 ebp_137
	word32 eax_36 = fn004192BC(fn0041B578(eax, out ecx_30, out edx_135, out ebp_136), ecx_30, out ecx_38, out ebp_137)
	word32 edx_48 = Mem46[eax:word32]
	word32 esp_49
	word32 ecx_50
	word32 eax_52
	call Mem46[edx_48 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_38,edx:edx_48,Stack +0004:eax_36
		defs: eax:eax_52,ecx:ecx_50,esp:esp_49
	Mem56[esp_49 - 4:word32] = eax_52
	word32 edx_58 = Mem56[eax:word32]
	word32 esp_59
	word32 eax_62
	call Mem56[edx_58 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_50,edx:edx_58
		defs: eax:eax_62,esp:esp_59
	Mem69[esp_59 - 4:word32] = eax_62 - edx - ecx
	Mem71[esp_59 - 8:word32] = 0x00000000
	Mem73[esp_59 - 12:word32] = 0x00000000
	word32 ecx_78
	word32 ebp_85
	word32 ecx_86
	word32 edx_138
	word32 ebp_139
	Mem94[esp_59 - 16:word32] = fn004192BC(fn0041B578(eax, out ecx_78, out edx_138, out ebp_139), ecx_78, out ecx_86, out ebp_85)
	BitBlt(Mem94[esp_59 - 16:HDC], Mem94[esp_59 - 12:int32], Mem94[esp_59 - 8:int32], Mem94[esp_59 - 4:int32], Mem94[esp_59:int32], Mem94[esp_59 + 4:HDC], Mem94[esp_59 + 8:int32], Mem94[esp_59 + 12:int32], Mem94[esp_59 + 16:DWORD])
	word32 edx_97 = Mem94[eax:word32]
	word32 eax_101
	call Mem94[edx_97 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_86,edx:edx_97
		defs: eax:eax_101
	word32 ecx_109 = Mem94[eax:word32]
	word32 ecx_111
	call Mem94[ecx_109 + 0x00000040:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_109,edx:eax_101 - edx - ecx
		defs: ecx:ecx_111
	ebpOut = ebp_85
	return ecx_111
fn0041CF50_exit:


word32 fn0041CFB0(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx edi esi esp
fn0041CFB0_entry:
l0041CFB0:
	word32 ecx_30
	word32 ecx_38
	word32 edx_134
	word32 ebp_135
	word32 ebp_136
	word32 eax_36 = fn004192BC(fn0041B578(eax, out ecx_30, out edx_134, out ebp_135), ecx_30, out ecx_38, out ebp_136)
	word32 edx_48 = Mem46[eax:word32]
	word32 esp_49
	word32 ecx_50
	word32 eax_52
	call Mem46[edx_48 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_38,edx:edx_48,Stack +0004:eax_36
		defs: eax:eax_52,ecx:ecx_50,esp:esp_49
	Mem59[esp_49 - 4:word32] = eax_52 - edx - ecx
	word32 edx_61 = Mem59[eax:word32]
	word32 esp_62
	word32 eax_65
	call Mem59[edx_61 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_50,edx:edx_61
		defs: eax:eax_65,esp:esp_62
	Mem69[esp_62 - 4:word32] = eax_65
	Mem71[esp_62 - 8:word32] = 0x00000000
	Mem73[esp_62 - 12:word32] = 0x00000000
	word32 ecx_78
	word32 ebp_85
	word32 ecx_86
	word32 edx_137
	word32 ebp_138
	Mem94[esp_62 - 16:word32] = fn004192BC(fn0041B578(eax, out ecx_78, out edx_137, out ebp_138), ecx_78, out ecx_86, out ebp_85)
	BitBlt(Mem94[esp_62 - 16:HDC], Mem94[esp_62 - 12:int32], Mem94[esp_62 - 8:int32], Mem94[esp_62 - 4:int32], Mem94[esp_62:int32], Mem94[esp_62 + 4:HDC], Mem94[esp_62 + 8:int32], Mem94[esp_62 + 12:int32], Mem94[esp_62 + 16:DWORD])
	word32 edx_97 = Mem94[eax:word32]
	word32 eax_101
	call Mem94[edx_97 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_86,edx:edx_97
		defs: eax:eax_101
	word32 ecx_109 = Mem94[eax:word32]
	call Mem94[ecx_109 + 0x00000034:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_109,edx:eax_101 - edx - ecx
	return ebp_85
fn0041CFB0_exit:


word32 fn0041D010(word32 eax, word32 edx, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn0041D010_entry:
l0041D010:
	word32 ecx_25
	word32 edx_125
	word32 ebp_126
	word32 ecx_127
	word32 ebp_128
	word32 eax_31 = fn004192BC(fn0041B578(eax, out ecx_25, out edx_125, out ebp_126), ecx_25, out ecx_127, out ebp_128)
	word32 edx_43 = Mem41[eax:word32]
	word32 esp_44
	word32 eax_46
	call Mem41[edx_43 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_43,Stack +0004:eax_31
		defs: eax:eax_46,esp:esp_44
	Mem51[esp_44 - 4:word32] = eax_46
	word32 edx_53 = Mem51[eax:word32]
	word32 esp_54
	word32 eax_56
	call Mem51[edx_53 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_53
		defs: eax:eax_56,esp:esp_54
	Mem63[esp_54 - 4:word32] = eax_56 - edx
	Mem65[esp_54 - 8:word32] = 0x00000000
	Mem67[esp_54 - 12:word32] = 0x00000000
	word32 ecx_72
	word32 ebp_79
	word32 edx_129
	word32 ebp_130
	word32 ecx_131
	Mem88[esp_54 - 16:word32] = fn004192BC(fn0041B578(eax, out ecx_72, out edx_129, out ebp_130), ecx_72, out ecx_131, out ebp_79)
	BitBlt(Mem88[esp_54 - 16:HDC], Mem88[esp_54 - 12:int32], Mem88[esp_54 - 8:int32], Mem88[esp_54 - 4:int32], Mem88[esp_54:int32], Mem88[esp_54 + 4:HDC], Mem88[esp_54 + 8:int32], Mem88[esp_54 + 12:int32], Mem88[esp_54 + 16:DWORD])
	word32 edx_91 = Mem88[eax:word32]
	word32 eax_94
	call Mem88[edx_91 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_91
		defs: eax:eax_94
	word32 ecx_102 = Mem88[eax:word32]
	word32 ecx_106
	call Mem88[ecx_102 + 0x00000040:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_102,edx:eax_94 - edx
		defs: ecx:ecx_106
	ebpOut = ebp_79
	return ecx_106
fn0041D010_exit:


word32 fn0041D068(word32 eax, word32 edx, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ecx
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn0041D068_entry:
l0041D068:
	word32 ecx_25
	word32 edx_125
	word32 ebp_126
	word32 ecx_127
	word32 ebp_128
	word32 eax_31 = fn004192BC(fn0041B578(eax, out ecx_25, out edx_125, out ebp_126), ecx_25, out ecx_127, out ebp_128)
	word32 edx_43 = Mem41[eax:word32]
	word32 esp_44
	word32 eax_46
	call Mem41[edx_43 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_43,Stack +0004:eax_31
		defs: eax:eax_46,esp:esp_44
	Mem51[esp_44 - 4:word32] = eax_46
	word32 edx_53 = Mem51[eax:word32]
	word32 esp_54
	word32 eax_56
	call Mem51[edx_53 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_53
		defs: eax:eax_56,esp:esp_54
	Mem63[esp_54 - 4:word32] = eax_56 - edx
	Mem65[esp_54 - 8:word32] = 0x00000000
	Mem67[esp_54 - 12:word32] = 0x00000000
	word32 ecx_72
	word32 ebp_79
	word32 edx_129
	word32 ebp_130
	word32 ecx_131
	Mem88[esp_54 - 16:word32] = fn004192BC(fn0041B578(eax, out ecx_72, out edx_129, out ebp_130), ecx_72, out ecx_131, out ebp_79)
	BitBlt(Mem88[esp_54 - 16:HDC], Mem88[esp_54 - 12:int32], Mem88[esp_54 - 8:int32], Mem88[esp_54 - 4:int32], Mem88[esp_54:int32], Mem88[esp_54 + 4:HDC], Mem88[esp_54 + 8:int32], Mem88[esp_54 + 12:int32], Mem88[esp_54 + 16:DWORD])
	word32 edx_91 = Mem88[eax:word32]
	word32 eax_94
	call Mem88[edx_91 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_91
		defs: eax:eax_94
	word32 ecx_102 = Mem88[eax:word32]
	word32 ecx_106
	call Mem88[ecx_102 + 0x00000040:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_102,edx:eax_94 - edx
		defs: ecx:ecx_106
	ebpOut = ebp_79
	return ecx_106
fn0041D068_exit:


word32 fn0041D0C4(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn0041D0C4_entry:
l0041D0C4:
	word32 ecx_25
	word32 edx_124
	word32 ebp_125
	word32 ecx_126
	word32 ebp_127
	word32 eax_31 = fn004192BC(fn0041B578(eax, out ecx_25, out edx_124, out ebp_125), ecx_25, out ecx_126, out ebp_127)
	word32 edx_43 = Mem41[eax:word32]
	word32 esp_44
	word32 eax_46
	call Mem41[edx_43 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_43,Stack +0004:eax_31
		defs: eax:eax_46,esp:esp_44
	Mem53[esp_44 - 4:word32] = eax_46 - edx
	word32 edx_55 = Mem53[eax:word32]
	word32 esp_56
	word32 eax_58
	call Mem53[edx_55 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_55
		defs: eax:eax_58,esp:esp_56
	Mem63[esp_56 - 4:word32] = eax_58
	Mem65[esp_56 - 8:word32] = 0x00000000
	Mem67[esp_56 - 12:word32] = 0x00000000
	word32 ecx_72
	word32 ebp_79
	word32 edx_128
	word32 ebp_129
	word32 ecx_130
	Mem88[esp_56 - 16:word32] = fn004192BC(fn0041B578(eax, out ecx_72, out edx_128, out ebp_129), ecx_72, out ecx_130, out ebp_79)
	BitBlt(Mem88[esp_56 - 16:HDC], Mem88[esp_56 - 12:int32], Mem88[esp_56 - 8:int32], Mem88[esp_56 - 4:int32], Mem88[esp_56:int32], Mem88[esp_56 + 4:HDC], Mem88[esp_56 + 8:int32], Mem88[esp_56 + 12:int32], Mem88[esp_56 + 16:DWORD])
	word32 edx_91 = Mem88[eax:word32]
	word32 eax_94
	call Mem88[edx_91 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_91
		defs: eax:eax_94
	word32 ecx_102 = Mem88[eax:word32]
	call Mem88[ecx_102 + 0x00000034:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_102,edx:eax_94 - edx
	return ebp_79
fn0041D0C4_exit:


word32 fn0041D11C(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edx Top
// Preserved: ebx esi esp
fn0041D11C_entry:
l0041D11C:
	word32 ecx_25
	word32 edx_124
	word32 ebp_125
	word32 ecx_126
	word32 ebp_127
	word32 eax_31 = fn004192BC(fn0041B578(eax, out ecx_25, out edx_124, out ebp_125), ecx_25, out ecx_126, out ebp_127)
	word32 edx_43 = Mem41[eax:word32]
	word32 esp_44
	word32 eax_46
	call Mem41[edx_43 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_43,Stack +0004:eax_31
		defs: eax:eax_46,esp:esp_44
	Mem53[esp_44 - 4:word32] = eax_46 - edx
	word32 edx_55 = Mem53[eax:word32]
	word32 esp_56
	word32 eax_58
	call Mem53[edx_55 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_55
		defs: eax:eax_58,esp:esp_56
	Mem63[esp_56 - 4:word32] = eax_58
	Mem65[esp_56 - 8:word32] = 0x00000000
	Mem67[esp_56 - 12:word32] = 0x00000000
	word32 ecx_72
	word32 ebp_79
	word32 edx_128
	word32 ebp_129
	word32 ecx_130
	Mem88[esp_56 - 16:word32] = fn004192BC(fn0041B578(eax, out ecx_72, out edx_128, out ebp_129), ecx_72, out ecx_130, out ebp_79)
	BitBlt(Mem88[esp_56 - 16:HDC], Mem88[esp_56 - 12:int32], Mem88[esp_56 - 8:int32], Mem88[esp_56 - 4:int32], Mem88[esp_56:int32], Mem88[esp_56 + 4:HDC], Mem88[esp_56 + 8:int32], Mem88[esp_56 + 12:int32], Mem88[esp_56 + 16:DWORD])
	word32 edx_91 = Mem88[eax:word32]
	word32 eax_94
	call Mem88[edx_91 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_91
		defs: eax:eax_94
	word32 ecx_102 = Mem88[eax:word32]
	call Mem88[ecx_102 + 0x00000034:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_102,edx:eax_94 - edx
	return ebp_79
fn0041D11C_exit:


word32 fn0041D178(word32 eax, word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: ebp ecx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041D178_entry:
l0041D178:
	word32 ecx_36
	word32 ebp_43
	word32 edx_120
	word32 ebp_121
	word32 ecx_122
	word32 eax_42 = fn004192BC(fn0041B578(dwArg0C, out ecx_36, out edx_120, out ebp_121), ecx_36, out ecx_122, out ebp_43)
	word32 eax_56 = Mem55[ebp_43 + 0x00000018:word32]
	word32 ecx_67
	word32 ecx_75
	word32 edx_123
	word32 ebp_124
	word32 ebp_125
	BitBlt(fn004192BC(fn0041B578(eax, out ecx_67, out edx_123, out ebp_124), ecx_67, out ecx_75, out ebp_125), edx, ecx, eax_56, Mem52[ebp_43 + 0x00000014:word32], eax_42, dwArg08, dwArg04, 0x00CC0020)
	ebpOut = eax_56
	return ecx_75
fn0041D178_exit:


word32 fn0041D1C8(word32 eax, word32 ecx, word32 edx, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ebx ecx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0041D1C8_entry:
l0041D1C8:
	word32 ecx_34
	word32 ebp_41
	word32 ecx_42
	word32 edx_127
	word32 ebp_128
	word32 eax_40 = fn004192BC(fn0041B578(eax, out ecx_34, out edx_127, out ebp_128), ecx_34, out ecx_42, out ebp_41)
	word32 edx_52 = Mem50[eax:word32]
	word32 esp_53
	word32 ecx_54
	word32 eax_56
	call Mem50[edx_52 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_42,edx:edx_52,Stack +0004:eax_40
		defs: eax:eax_56,ecx:ecx_54,esp:esp_53
	Mem60[esp_53 - 4:word32] = eax_56
	word32 edx_62 = Mem60[eax:word32]
	word32 esp_63
	word32 eax_66
	call Mem60[edx_62 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,ecx:ecx_54,edx:edx_62
		defs: eax:eax_66,esp:esp_63
	Mem70[esp_63 - 4:word32] = eax_66
	Mem72[esp_63 - 8:word32] = ecx
	Mem74[esp_63 - 12:word32] = edx
	word32 ecx_79
	word32 ecx_87
	word32 edx_129
	word32 ebp_130
	word32 ebp_131
	Mem95[esp_63 - 16:word32] = fn004192BC(fn0041B578(Mem74[ebp_41 + 0x00000008:word32], out ecx_79, out edx_129, out ebp_130), ecx_79, out ecx_87, out ebp_131)
	BitBlt(Mem95[esp_63 - 16:HDC], Mem95[esp_63 - 12:int32], Mem95[esp_63 - 8:int32], Mem95[esp_63 - 4:int32], Mem95[esp_63:int32], Mem95[esp_63 + 4:HDC], Mem95[esp_63 + 8:int32], Mem95[esp_63 + 12:int32], Mem95[esp_63 + 16:DWORD])
	word32 edi_103 = Mem95[esp_63 - 16:word32]
	word32 esi_105 = Mem95[esp_63 - 12:word32]
	word32 ebp_109 = Mem95[esp_63 - 4:word32]
	ebxOut = Mem95[esp_63 - 8:word32]
	ebpOut = ebp_109
	esiOut = esi_105
	ediOut = edi_103
	return ecx_87
fn0041D1C8_exit:


void fn00424694(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn00424694_entry:
l00424694:
	word32 eax_21 = fn00404500(Mem15[eax:word32])
	branch eax_21 <= 0x00000000 l004246D9
l004246A9:
	fn00404750(eax)
	word32 dwLoc10_79 = fn00404700(Mem15[eax:word32])
	word32 eax_46 = eax_21
	branch eax_21 <= 0x00000000 l004246D9
l004246C0:
	Mem58[dwLoc10_79:byte] = Mem50[(word32) Mem50[dwLoc10_79:byte] + edx + 0x0042CEA8:byte]
	dwLoc10_79 = dwLoc10_79 + 0x00000001
	eax_46 = eax_46 - 0x00000001
	branch eax_46 != 0x00000000 l004246C0
l004246D9:
	return
fn00424694_exit:


void fn004246E0(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esi esp
fn004246E0_entry:
l004246E0:
	fn00404294(edx, eax)
	fn004246FC(edx)
	return
fn004246E0_exit:


void fn004246FC(word32 eax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004246FC_entry:
l004246FC:
	fn00424694(eax, 0x00000100)
	return
fn004246FC_exit:


word32 fn00424708(word32 eax, word32 ecx, word32 edx, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebp edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00424708_entry:
l00424708:
	Mem34[fs:0x00000000:word32] = fp - 32
	word32 ebp_110 = fp - 4
	word32 esi_132 = eax
	branch eax == 0x00000000 l0042475D
l00424728:
	branch edx == 0x00000000 l0042475D
l0042475D:
l0042472C:
	fn00404760(edx, fn00404500(edx) - ecx + 0x00000001, ecx, fp - 0x00000008)
	branch fn00424784(eax, 0x00000000, out ebp_110, out esi_132) != 0x00000000 l00424757
l00424757:
l00424753:
l0042475F:
	Mem107[fs:0x00000000:word32] = 0x00000000
	word32 eax_112 = ebp_110 - 0x00000004
	word32 edx_145
	fn00404240(eax_112, out edx_145)
	ebpOut = ebp_110
	esiOut = esi_132
	ediOut = ecx
	return eax_112
fn00424708_exit:


word32 fn00424784(word32 eax, word32 edx, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebp esi
// Trashed: SCZO eax ebp ebx ecx edx esi esp Top
// Preserved:
fn00424784_entry:
l00424784:
	word32 v11_30 = Mem28[fs:0x00000000:word32]
	Mem33[fs:0x00000000:word32] = fp - 32
	fn004246E0(edx, fp - 0x00000008)
	fn004246E0(eax, fp - 0x0000000C)
	fn004047E8(0x00000000, 0x00000000)
	Mem76[fs:0x00000000:word32] = v11_30
	fn00404264(fp - 0x0000000C, 0x00000002)
	ebpOut = fp - 4
	esiOut = edx
	return fp - 0x0000000C
fn00424784_exit:


word32 fn004247EC(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004247EC_entry:
	word24 ebx_24_8_237 = SLICE(ebx, word24, 8)
	word24 edx_24_8_31 = SLICE(edx, word24, 8)
l004247EC:
	word32 ebp_115 = eax
	branch eax != 0x00000000 l0042481F
l00424808:
	word32 ecx_35
	word32 ecx_393
	fn00403C5C(fn0040B0C4(Mem20[0x004244B0:word32], Mem20[0x0042A9D4:word32], SEQ(edx_24_8_31, 0x01), out ecx_35, out ebp_115), ecx_35, dwLoc2C, out ecx_393)
l0042481F:
	word32 edx_55
	word32 ecx_56
	bool Z_59 = fn0040464C(ebp_115, 0x00424984, out ecx_56, out edx_55)
	word24 edx_24_8_84 = SLICE(edx_55, word24, 8)
	word32 ebx_235 = SEQ(ebx_24_8_237, Z_59)
	branch Z_59 != 0x00 l00424970
l00424836:
	branch edx == 0x00000000 l00424970
l00424840:
	branch ecx <= 0x00000000 l00424855
l00424847:
	branch fn00404500(edx) >= ecx l0042486C
l00424855:
	word32 ecx_89
	word32 ecx_99
	fn00403C5C(fn0040B0C4(Mem20[0x004244B0:word32], Mem20[0x0042A8EC:word32], SEQ(edx_24_8_84, 0x01), out ecx_89, out ebp_115), ecx_89, dwLoc2C, out ecx_99)
l0042486C:
	word32 dwLoc20_305 = edx - 0x00000001 + ecx
	word32 dwLoc1C_306 = fn00404700(ebp_115)
	word32 dwLoc18_307 = 0x00000000
	word32 dwLoc14_308 = 0x00000000
	ebx_235 = SEQ(ebx_24_8_237, Z_59) (alias)
l0042488E:
	word32 dwLoc1C_314
	word24 ebx_24_8_239 = SLICE(ebx_235, word24, 8)
	byte dl_135 = Mem133[dwLoc1C_306:byte]
	branch dl_135 <u 0x01 l004248A2
l004248A2:
	byte bl_147 = Mem133[dwLoc20_305:byte] == 0x00
	ebx_235 = SEQ(ebx_24_8_239, bl_147) (alias)
	branch bl_147 != 0x00 l00424970
l004248B2:
	branch dwLoc18_307 == 0x00000000 l00424970
l004248BD:
	branch dwLoc14_308 == 0x00000000 l00424970
l004248C8:
	dwLoc20_305 = dwLoc18_307
	dwLoc1C_314 = dwLoc14_308
l00424898:
	branch dl_135 == 0x2A l004248D6
l004248D6:
	word32 v28_163 = dwLoc1C_306 + 0x00000001
	dwLoc1C_314 = v28_163
	dwLoc14_308 = v28_163
l0042489C:
	branch dl_135 == 0x3F l004248E0
l004248E0:
	branch Mem133[dwLoc20_305:byte] == 0x00 l00424970
l004248EB:
	dwLoc20_305 = dwLoc20_305 + 0x00000001
	dwLoc1C_306 = dwLoc1C_306 + 0x00000001
l004248A0:
l004248F1:
	byte al_180 = Mem133[dwLoc20_305:byte]
	branch al_180 == 0x00 l00424970
l004248F9:
	branch dl_135 == al_180 l00424919
l00424919:
	dwLoc20_305 = dwLoc20_305 + 0x00000001
	dwLoc1C_306 = dwLoc1C_306 + 0x00000001
l004248FD:
	branch dwLoc18_307 == 0x00000000 l00424970
l00424904:
	branch dwLoc14_308 == 0x00000000 l00424970
l0042490B:
	dwLoc20_305 = dwLoc18_307
	dwLoc1C_314 = dwLoc14_308
l00424922:
	word24 ebx_24_8_245 = SLICE(ebx_235, word24, 8)
	byte al_202 = Mem200[dwLoc1C_314:byte]
	branch al_202 <u 0x01 l00424934
l00424934:
	ebx_235 = SEQ(ebx_24_8_245, 0x01) (alias)
l0042492A:
	branch al_202 == 0x2A l00424938
l00424938:
	word32 v20_210 = dwLoc1C_314 + 0x00000001
	dwLoc1C_314 = v20_210
	dwLoc14_308 = v20_210
l0042492E:
	branch al_202 == 0x3F l00424942
l00424942:
	branch Mem200[dwLoc20_305:byte] == 0x00 l00424970
l00424949:
	dwLoc20_305 = dwLoc20_305 + 0x00000001
	dwLoc1C_314 = dwLoc1C_314 + 0x00000001
l00424932:
l0042494F:
	byte al_231 = Mem229[dwLoc20_305:byte]
	branch al_231 == 0x00 l00424970
l00424970:
	return ebx_235
fn004247EC_exit:
l00424957:
	branch al_231 == Mem229[dwLoc1C_314:byte] l00424961
l00424961:
	word32 v24_265 = dwLoc20_305 + 0x00000001
	dwLoc20_305 = v24_265
	dwLoc18_307 = v24_265
	dwLoc1C_306 = dwLoc1C_314 + 0x00000001
l0042495D:
	dwLoc20_305 = dwLoc20_305 + 0x00000001


void fn00424988(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00424988_entry:
l00424988:
	word32 ebp_27
	word32 edi_30
	word32 esi_32
	word32 eax_26 = fn00424708(eax, 0x00000001, edx, out ebp_27, out esi_32, out edi_30)
	branch eax_26 > 0x00000000 l004249AF
l004249AF:
	fn004249C8(edi_30, ebp_27, fn00404500(esi_32) + eax_26)
l004249A6:
	word32 edx_61
	fn00404240(ebp_27, out edx_61)
l004249C3:
	return
fn00424988_exit:


void fn004249C8(word32 eax, word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn004249C8_entry:
l004249C8:
	fn00404760(eax, fn00404500(eax) - edx + 0x00000001, edx, ecx)
	return
fn004249C8_exit:


word32 fn00424A14(word32 eax, word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00424A14_entry:
l00424A14:
	word32 v14_34 = Mem32[fs:0x00000000:word32]
	Mem37[fs:0x00000000:word32] = fp + 0xFFFFFFDC
	fn00404428(fp - 0x0000000C)
	word32 eax_48 = fn004047E8(0x00000000, Mem37[eax:word32])
	branch eax_48 == 0x00000000 l00424A72
l00424A72:
	fn00404294(ecx, Mem37[eax:word32])
	word32 edx_144
	fn00404240(eax, out edx_144)
l00424A52:
	fn00404760(Mem77[eax:word32], eax_48 - 0x00000001, 0x00000001, ecx)
	fn004047A0(eax, eax_48, 0x00000001)
l00424A82:
	Mem115[fs:0x00000000:word32] = v14_34
	word32 edx_145
	fn00404240(fp - 0x0000000C, out edx_145)
	return fp - 4
fn00424A14_exit:


word32 fn00424AA8(word32 eax, word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00424AA8_entry:
l00424AA8:
	fn004046F0(eax)
	word32 v12_34 = Mem32[fs:0x00000000:word32]
	Mem37[fs:0x00000000:word32] = fp + 0xFFFFFFE0
	word32 ebp_106 = fp - 4
	branch ecx == 0x00000000 l00424B33
l00424B33:
	Mem49[fs:0x00000000:word32] = v12_34
	word32 edx_183
	fn00404240(fp - 0x00000010, out edx_183)
	word32 edx_184
	fn00404240(fp - 0x00000008, out edx_184)
	return fp - 4
l00424AD8:
	word32 ecx_72 = fn00414AAC(ecx)
	word32 v14_84 = Mem83[fs:0x00000000:word32]
	Mem87[fs:0x00000000:word32] = fp + 0xFFFFFFD4
	word32 edx_89 = Mem87[ecx:word32]
	call Mem87[edx_89 + 0x00000044:word32] (retsize: 4;)
		uses: eax:ecx,ecx:ecx_72,edx:edx_89,Stack +0004:v14_84,Stack +0008:0x00424B2C,Stack +000C:fp - 4
l00424B10:
	branch Mem87[ebp_106 - 0x00000004:word32] != 0x00000000 l00424AF8
l00424AF8:
	ebp_106 = fn00424A14(ebp_106 - 0x00000004, ebp_106 - 0x0000000C)
	word32 eax_119 = Mem87[ebp_106 - 0x00000008:word32]
	word32 ecx_120 = Mem87[eax_119:word32]
	call Mem87[ecx_120 + 0x00000038:word32] (retsize: 4;)
		uses: eax:eax_119,ecx:ecx_120,edx:Mem87[ebp_106 - 0x0000000C:word32]
l00424B16:
	Mem137[fs:0x00000000:word32] = eax
	fn00414B68(Mem139[ebp_106 - 0x00000008:word32])
	return ebp_106
fn00424AA8_exit:


void fn00426460(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx esi esp
fn00426460_entry:
l00426460:
	fn00404294(edx, eax)
	branch eax == 0x00000000 l00426481
l00426473:
	branch Mem9[eax - 0x00000001 + fn00404500(eax):byte] == 0x5C l0042648F
l00426481:
	fn0040454C(edx, 0x0042649C, eax)
l0042648F:
	return
fn00426460_exit:


word32 fn004264A0(word32 eax, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn004264A0_entry:
l004264A0:
	word32 edx_37
	word32 ecx_36 = fn00404B90(fp - 0x00000174, Mem30[0x00406B54:word32], out edx_37)
	Mem54[fs:0x00000000:word32] = fp + 0xFFFFFE64
	word32 eax_56 = Mem54[0x00413940:word32]
	fn004036F0(eax_56, ecx_36, SEQ(SLICE(edx_37, word24, 8), 0x01), dwLoc01A0)
	Mem76[fs:0x00000000:word32] = fp + 0xFFFFFE58
	fn00407FE8(eax, fp - 0x0000001C)
	branch 0x00000000 == 0x00000000 l0042654B
l0042654B:
	fn004042D8(fp - 0x00000018, eax)
l00426520:
	fn00426460(0x00000000, fp - 0x00000178)
	fn004042D8(fp - 0x0000001C, 0x00000000)
	fn00424988(0x00000000, eax)
l00426555:
	word32 ebp_137 = fn00424AA8(0x00000000, eax_56)
	fn0040454C(ebp_137 - 0x00000178, 0x00426728, Mem76[ebp_137 - 0x00000018:word32])
	Mem178[ebp_137 - 0x00000009:byte] = fn00407ED0(Mem76[ebp_137 - 0x00000178:word32], ebp_137 - 0x00000170, 0x0000003F) == 0x00000000
	word32 esp_167 = <invalid>
	word32 ecx_183 = fn00414AAC(Mem178[ebp_137 - 0x00000008:word32])
	Mem192[esp_167 - 4:word32] = ebp_137
	Mem194[esp_167 - 8:word32] = 0x004266AD
	Mem197[esp_167 - 12:word32] = Mem194[fs:0x00000000:word32]
	Mem198[fs:0x00000000:word32] = esp_167 - 12
l00426682:
	branch Mem200[ebp_137 - 0x00000009:byte] != 0x00 l004265AC
l004265AC:
	word32 eax_203 = Mem200[ebp_137 - 0x00000010:word32]
	word32 edx_204 = Mem200[eax_203:word32]
	word32 eax_215
	call Mem200[edx_204 + 0x00000014:word32] (retsize: 4;)
		uses: eax:eax_203,ecx:ecx_208,edx:edx_204,Stack +FFFFFE64:fp - 4
		defs: eax:eax_215
	branch eax_215 < 0x00000001 l00426669
l004265BF:
	word32 ebx_223 = eax_215
	word32 esi_224 = 0x00000000
l004265C2:
	word32 ecx_439
	word32 edx_440
	branch fn0040464C(Mem200[ebp_137 - 0x00000164:word32], 0x00426734, out ecx_439, out edx_440) l00426661
l004265D8:
	word32 ecx_437
	word32 edx_438
	branch fn0040464C(Mem200[ebp_137 - 0x00000164:word32], 0x00426740, out ecx_437, out edx_438) l00426661
l004265EA:
	branch (Mem200[ebp_137 - 0x00000168:word32] & Mem200[ebp_137 - 0x00000004:word32]) != (Mem200[ebp_137 - 0x00000168:word32] & 0x0000003F) l00426661
l00426600:
	word32 eax_256 = Mem200[ebp_137 - 0x00000010:word32]
	call Mem200[Mem200[eax_256:word32] + 0x0000000C:word32] (retsize: 4;)
		uses: eax:eax_256,ecx:ebp_227 - 0x0000017C,edx:esi_254,Stack +FFFFFE64:fp - 4
	branch SLICE((uint32) (uint8) fn00426954(Mem200[ebp_137 - 0x00000164:word32], 0x00, Mem200[ebp_137 - 0x0000017C:word32], out ebx_223, out ebp_137, out esi_224), byte, 0) == 0x00 l00426661
l00426661:
	esi_224 = esi_224 + 0x00000001
	ebx_223 = ebx_223 - 0x00000001
	branch ebx_223 != 0x00000000 l004265C2
l00426627:
	branch Mem200[ebp_137 + 0x00000008:byte] == 0x00 l00426651
l00426651:
	word32 eax_298 = Mem200[ebp_137 - 0x00000008:word32]
	word32 ecx_299 = Mem200[eax_298:word32]
	call Mem200[ecx_299 + 0x00000038:word32] (retsize: 4;)
		uses: eax:eax_298,ecx:ecx_299,edx:Mem200[ebp_275 - 0x00000164:word32],Stack +FFFFFE64:fp - 4
l0042662D:
	fn0040454C(ebp_137 - 0x00000180, Mem200[ebp_137 - 0x00000164:word32], Mem200[ebp_137 - 0x00000018:word32])
	word32 eax_318 = Mem200[ebp_137 - 0x00000008:word32]
	word32 ecx_319 = Mem200[eax_318:word32]
	call Mem200[ecx_319 + 0x00000038:word32] (retsize: 4;)
		uses: eax:eax_318,ecx:ecx_319,edx:Mem200[ebp_275 - 0x00000180:word32],Stack +FFFFFE64:fp - 4
l00426669:
	word32 eax_331 = fn00407F20(ebp_137 - 0x00000170, out ecx_183)
	branch eax_331 <u 0x00000001 l00426682
l00426679:
	branch eax_331 == 0x00000012 l0042668C
l0042667E:
	Mem347[ebp_137 - 0x00000009:byte] = 0x00
l0042668C:
	Mem362[fs:0x00000000:word32] = edx
	fn00407F44(ebp_137 - 0x00000170)
	fn00414B68(Mem364[ebp_137 - 0x00000008:word32])
	return ebp_137
fn004264A0_exit:


byte fn00426954(word32 eax, byte cl, word32 edx, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cl:[0..7] eax:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebp ebx esi
// Trashed: SCZO eax ebp ebx ecx edx esi Top
// Preserved: esp
fn00426954_entry:
l00426954:
	fn004046F0(eax)
	Mem41[fs:0x00000000:word32] = fp + 0xFFFFFFD8
	word32 esp_102 = fp + 0xFFFFFFD8
	word32 ebx_128 = 0x00000001
	branch edx == 0x00000000 l00426A04
l00426988:
	word32 ecx_201
	word32 edx_202
	branch fn0040464C(edx, 0x00426A40, out ecx_201, out edx_202) l00426A04
l00426996:
	word32 ecx_203
	word32 edx_204
	branch fn0040464C(edx, 0x00426A4C, out ecx_203, out edx_204) l00426A04
l004269A4:
	branch fn004047E8(0x00426A58, eax) != 0x00000000 l004269C2
l004269B5:
	fn00404508(fp - 0x00000008, 0x00426A58)
	esp_102 = fp + 0xFFFFFFDC
l004269C2:
	branch cl == 0x00 l004269DB
l004269DB:
	fn004078A8(eax, fp - 0x00000010)
	word32 esp_103 = esp_102 - 4
	Mem104[esp_103:word32] = 0x00000000
	fn004078A8(edx, fp - 0x00000014)
	ebx_128 = fn004247EC(0x00000000, 0x00000001, Mem104[esp_103:word32])
l004269C8:
	ebx_128 = fn004247EC(edx, 0x00000001, eax)
l00426A04:
	Mem153[fs:0x00000000:word32] = eax
	fn00404264(fp - 0x00000014, 0x00000002)
	word32 edx_200
	fn00404240(fp - 0x00000008, out edx_200)
	ebxOut = ebx_128
	ebpOut = fp - 4
	esiOut = edx
	return SLICE(fp - 0x00000008, byte, 0)
fn00426954_exit:


word32 fn00426AC8(word32 ecx, word32 edx, ptr32 & edxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] edx:[8..31] fs:[0..15]
// LiveOut: ebp ecx edx
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00426AC8_entry:
	word24 edx_24_8_25 = SLICE(edx, word24, 8)
l00426AC8:
	word32 edx_303
	word32 eax_31 = fn0041B01C(Mem18[0x00417A20:word32], ecx, SEQ(edx_24_8_25, 0x01), out edx_303)
	word32 ebp_40
	word32 edx_42
	word32 ecx_304
	Mem47[ebp_40 - 0x00000004:word32] = fn0041B578(eax_31, out ecx_304, out edx_42, out ebp_40)
	Mem58[fs:0x00000000:word32] = fp + 0xFFFFFFD0
	word32 ebx_64
	word32 esi_67
	word32 edi_69
	word32 ebp_70
	fn0041C3E4(eax_31, SEQ(SLICE(edx_42, word24, 8), 0x03), out ebx_64, out ebp_70, out esi_67, out edi_69)
	word32 ecx_78 = Mem58[ebx_64:word32]
	call Mem58[ecx_78 + 0x00000040:word32] (retsize: 4;)
		uses: eax:ebx_64,ecx:ecx_78,edx:esi_67
	word32 ecx_87 = Mem58[ebx_64:word32]
	call Mem58[ecx_87 + 0x00000034:word32] (retsize: 4;)
		uses: eax:ebx_64,ecx:ecx_87,edx:edi_69
	word32 ebp_115
	word32 ecx_116 = fn00418E64(Mem58[Mem58[fn00418F80(Mem58[Mem58[ebp_70 - 0x00000004:word32] + 0x00000014:word32], 0x00000000) - 0x00000004:word32] + 0x00000014:word32], out ebp_115)
	word32 edx_125 = Mem58[ebx_64:word32]
	word32 esp_126
	word32 eax_128
	word32 ecx_129
	call Mem58[edx_125 + 0x00000020:word32] (retsize: 4;)
		uses: eax:ebx_64,ecx:ecx_116,edx:edx_125
		defs: eax:eax_128,ecx:ecx_129,esp:esp_126
	Mem133[esp_126 - 4:word32] = eax_128
	Mem136[esp_126 - 8:word32] = ebp_115 - 0x00000014
	word32 edx_138 = Mem136[ebx_64:word32]
	word32 esp_139
	word32 eax_141
	call Mem136[edx_138 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:ebx_64,ecx:ecx_129,edx:edx_138
		defs: eax:eax_141,esp:esp_139
	fn00413CD0(0x00000000, eax_141, 0x00000000, Mem136[esp_139:word32], Mem136[esp_139 + 4:word32])
	word32 ebp_155
	fn004190D4(Mem136[ebp_115 - 0x00000004:word32], eax_141, ebp_115 - 0x00000014, out ebp_155)
	word32 ebp_167
	word32 ecx_168 = fn00418E64(Mem136[Mem136[ebp_155 - 0x00000004:word32] + 0x00000014:word32], out ebp_167)
	Mem177[esp_139 + 0x00000004:word32] = 0x00000019
	Mem180[esp_139:word32] = ebp_167 - 0x00000014
	word32 edx_182 = Mem180[ebx_64:word32]
	word32 esp_183
	word32 eax_185
	call Mem180[edx_182 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:ebx_64,ecx:ecx_168,edx:edx_182
		defs: eax:eax_185,esp:esp_183
	fn00413CD0(0x00000000, eax_185, 0x00000000, Mem180[esp_183:word32], Mem180[esp_183 + 4:word32])
	word32 ebp_199
	word32 ecx_200 = fn004190D4(Mem180[ebp_167 - 0x00000004:word32], eax_185, ebp_167 - 0x00000014, out ebp_199)
	word32 edx_208 = Mem180[ebx_64:word32]
	word32 esp_209
	word32 eax_211
	word32 ecx_212
	call Mem180[edx_208 + 0x00000020:word32] (retsize: 4;)
		uses: eax:ebx_64,ecx:ecx_200,edx:edx_208
		defs: eax:eax_211,ecx:ecx_212,esp:esp_209
	Mem216[esp_209 - 4:word32] = eax_211
	Mem219[esp_209 - 8:word32] = ebp_199 - 0x00000014
	word32 edx_221 = Mem219[ebx_64:word32]
	word32 esp_222
	word32 eax_224
	word32 ecx_225
	call Mem219[edx_221 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:ebx_64,ecx:ecx_212,edx:edx_221
		defs: eax:eax_224,ecx:ecx_225,esp:esp_222
	Mem229[esp_222 - 4:word32] = eax_224
	word32 edx_231 = Mem229[ebx_64:word32]
	word32 esp_232
	word32 eax_234
	call Mem229[edx_231 + 0x00000020:word32] (retsize: 4;)
		uses: eax:ebx_64,ecx:ecx_225,edx:edx_231
		defs: eax:eax_234,esp:esp_232
	word32 ecx_243 = Mem229[esp_232:word32]
	fn00413CD0(0x00000000, ecx_243, eax_234 - 0x000000AF, Mem229[esp_232 + 4:word32], Mem229[esp_232 + 8:word32])
	word32 ebp_250
	fn004190D4(Mem229[ebp_199 - 0x00000004:word32], ecx_243, ebp_199 - 0x00000014, out ebp_250)
	word32 ecx_260 = Mem229[ebx_64:word32]
	call Mem229[ecx_260 + 0x00000050:word32] (retsize: 4;)
		uses: eax:ebx_64,ecx:ecx_260,edx:0x00426BFC
	Mem276[fs:0x00000000:word32] = dwLoc08
	word32 ecx_283
	fn00403720(Mem278[ebp_250 - 0x00000004:word32], out ecx_283)
	edxOut = SEQ(SLICE(dwLoc08, word24, 8), dl_281)
	ebpOut = ebp_250
	return ecx_283
fn00426AC8_exit:


word32 fn00426C30(word32 eax, word32 ecx, word32 edx, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ebx esi
// Trashed: SCZDO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00426C30_entry:
	word24 edx_24_8_40 = SLICE(edx, word24, 8)
l00426C30:
	Mem37[fs:0x00000000:word32] = fp + 0xFFFFFFA8
	word32 edx_42
	word32 eax_44 = fn0041B01C(Mem37[0x0041CD1C:word32], ecx, SEQ(edx_24_8_40, 0x01), out edx_42)
	word32 edx_54
	word32 eax_56 = fn0041B01C(Mem49[0x0041CD1C:word32], ecx, SEQ(SLICE(edx_42, word24, 8), 0x01), out edx_54)
	word32 edx_1222
	word32 eax_68 = fn0041B01C(Mem61[0x0041CD1C:word32], ecx, SEQ(SLICE(edx_54, word24, 8), 0x01), out edx_1222)
	word32 v16_81 = Mem80[fs:0x00000000:word32]
	Mem84[fs:0x00000000:word32] = fp + 0xFFFFFF9C
	word32 ecx_87 = Mem84[eax_56:word32]
	call Mem84[ecx_87 + 0x00000040:word32] (retsize: 4;)
		uses: eax:eax_56,ecx:ecx_87,edx:edx,Stack +0004:v16_81,Stack +0008:0x0042711A,Stack +000C:fp - 4,Stack +0048:eax_68
	word32 ecx_96 = Mem84[eax_56:word32]
	call Mem84[ecx_96 + 0x00000034:word32] (retsize: 4;)
		uses: eax:eax_56,ecx:ecx_96,edx:ecx
	word32 ecx_105 = Mem84[eax_44:word32]
	word32 ecx_107
	call Mem84[ecx_105 + 0x0000004C:word32] (retsize: 4;)
		uses: eax:eax_44,ecx:ecx_105,edx:eax
		defs: ecx:ecx_107
	word32 edx_113 = Mem84[eax_44:word32]
	word32 ecx_115
	word32 eax_117
	call Mem84[edx_113 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax_44,ecx:ecx_107,edx:edx_113
		defs: eax:eax_117,ecx:ecx_115
	branch eax_117 < edx l00426CD2
l00426CBC:
	word32 edx_123 = Mem84[eax_44:word32]
	word32 eax_127
	call Mem84[edx_123 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_44,ecx:ecx_115,edx:edx_123
		defs: eax:eax_127
	branch ecx > eax_127 l00426CD2
l00426CD2:
	word32 ebp_152
	word32 ecx_1223
	word32 ebx_1225
	word32 edi_1227
	word32 esi_1226
	word32 edx_1224
	word32 ecx_147 = fn0041C3E4(eax_56, fn0041B664(eax_44, out ecx_1223, out edx_1224), out ebx_1225, out ebp_152, out esi_1226, out edi_1227)
	word32 eax_158 = Mem84[ebp_152 - 0x0000000C:word32]
	word32 edx_159 = Mem84[eax_158:word32]
	word32 eax_163
	call Mem84[edx_159 + 0x00000024:word32] (retsize: 4;)
		uses: eax:eax_158,ecx:ecx_147,edx:edx_159
		defs: eax:eax_163
	word32 eax_167 = Mem84[ebp_152 - 0x00000010:word32]
	word32 ecx_168 = Mem84[eax_167:word32]
	call Mem84[ecx_168 + 0x00000038:word32] (retsize: 4;)
		uses: eax:eax_167,ecx:ecx_168,edx:eax_163
	word32 eax_176 = Mem84[ebp_152 - 0x0000001C:word32]
	word32 ecx_177 = Mem84[eax_176:word32]
	call Mem84[ecx_177 + 0x00000040:word32] (retsize: 4;)
		uses: eax:eax_176,ecx:ecx_177,edx:Mem84[0x0042A5C8:word32]
	word32 eax_185 = Mem84[ebp_152 - 0x0000001C:word32]
	word32 ecx_186 = Mem84[eax_185:word32]
	word32 ecx_188
	call Mem84[ecx_186 + 0x00000034:word32] (retsize: 4;)
		uses: eax:eax_185,ecx:ecx_186,edx:Mem84[0x0042A5CC:word32]
		defs: ecx:ecx_188
	word32 eax_193 = Mem84[ebp_152 - 0x0000001C:word32]
	word32 edx_194 = Mem84[eax_193:word32]
	word32 esp_195
	word32 ecx_196
	word32 eax_198
	call Mem84[edx_194 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax_193,ecx:ecx_188,edx:edx_194
		defs: eax:eax_198,ecx:ecx_196,esp:esp_195
	Mem202[esp_195 - 4:word32] = eax_198
	word32 eax_203 = Mem202[ebp_152 - 0x0000001C:word32]
	word32 edx_204 = Mem202[eax_203:word32]
	word32 esp_205
	word32 eax_208
	call Mem202[edx_204 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_203,ecx:ecx_196,edx:edx_204
		defs: eax:eax_208,esp:esp_205
	Mem212[esp_205 - 4:word32] = eax_208
	Mem215[esp_205 - 8:word32] = Mem212[ebp_152 - 0x0000000C:word32]
	Mem218[esp_205 - 12:word32] = Mem215[0x0042A5D0:word32]
	Mem221[esp_205 - 16:word32] = Mem218[0x0042A5D4:word32]
	word32 ebp_228
	word32 ecx_230 = fn0041D178(Mem221[ebp_152 - 0x0000001C:word32], 0x00000000, 0x00000000, Mem221[esp_205 - 16:word32], Mem221[esp_205 - 12:word32], Mem221[esp_205 - 8:word32], out ebp_228)
	word32 eax_241 = Mem221[ebp_228 - 0x00000010:word32]
	word32 edx_242 = Mem221[eax_241:word32]
	word32 esp_243
	word32 eax_246
	call Mem221[edx_242 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax_241,ecx:ecx_230,edx:edx_242
		defs: eax:eax_246,esp:esp_243
	word32 ecx_251 = eax_246 - Mem221[0x0042A598:word32] - Mem221[0x0042A5B0:word32]
	word32 ebx_253 = Mem221[0x0042A5C8:word32]
	Mem259[ebp_228 - 0x00000014:word32] = (int32) ((int64) ecx_251 / ebx_253)
	branch (int32) ((int64) ecx_251 % ebx_253) <= 0x00000000 l00426D70
l00426D6D:
	Mem270[ebp_228 - 0x00000014:word32] = Mem259[ebp_228 - 0x00000014:word32] + 0x00000001
l00426D70:
	Mem275[ebp_228 - 0x00000014:word32] = Mem273[ebp_228 - 0x00000014:word32] - 0x00000001
l00426D73:
	Mem280[ebp_228 - 0x00000014:word32] = Mem278[ebp_228 - 0x00000014:word32] + 0x00000001
	word32 edi_283 = Mem280[ebp_228 - 0x00000014:word32] * 0x00000002 - 0x00000002
	branch (int32) ((int64) (Mem280[ebp_228 - 0x00000014:word32] *s Mem280[0x0042A5C8:word32] - ecx_251) / edi_283) <= 0x00000014 l00426D73
l00426D96:
	Mem301[esp_243 - 4:word32] = edi_283
	word32 ebp_308
	word32 ebx_309
	word32 edi_311
	word32 esi_313
	word32 ecx_310 = fn00405470(ebp_228 - 0x00000020, 0x00000001, Mem301[0x00426C08:word32], out ebx_309, out ebp_308, out esi_313, out edi_311)
	word32 eax_323 = fn0040529C(Mem301[ebp_308 - 0x00000020:word32])
	branch eax_323 < 0x00000000 l00426DD5
l00426DB9:
	Mem333[ebp_308 - 0x0000002C:word32] = eax_323 + 0x00000001
	Mem334[ebp_308 - 0x00000018:word32] = 0x00000000
l00426DC4:
	Mem340[Mem336[ebp_308 - 0x00000020:word32] + Mem336[ebp_308 - 0x00000018:word32] * 0x00000004:word32] = esi_313
	Mem342[ebp_308 - 0x00000018:word32] = Mem340[ebp_308 - 0x00000018:word32] + 0x00000001
	word32 v26_343 = Mem342[ebp_308 - 0x0000002C:word32] - 0x00000001
	Mem344[ebp_308 - 0x0000002C:word32] = v26_343
	branch v26_343 != 0x00000000 l00426DC4
l00426DD5:
	word32 edx_356 = (int32) ((int64) ebx_309 % edi_311)
	word24 edx_24_8_891 = SLICE(edx_356 - 0x00000001, word24, 8)
	branch edx_356 < 0x00000001 l00426DFB
l00426DDF:
	Mem365[ebp_308 - 0x0000002C:word32] = edx_356
	Mem366[ebp_308 - 0x00000018:word32] = 0x00000000
l00426DEA:
	word32 edx_370 = Mem368[ebp_308 - 0x00000018:word32]
	word32 eax_369 = Mem368[ebp_308 - 0x00000020:word32]
	Mem372[eax_369 + edx_370 * 0x00000004:word32] = Mem368[eax_369 + edx_370 * 0x00000004:word32] + 0x00000001
	Mem374[ebp_308 - 0x00000018:word32] = Mem372[ebp_308 - 0x00000018:word32] + 0x00000001
	word32 v31_375 = Mem374[ebp_308 - 0x0000002C:word32] - 0x00000001
	Mem376[ebp_308 - 0x0000002C:word32] = v31_375
	edx_24_8_891 = SLICE(edx_370, word24, 8) (alias)
	branch v31_375 != 0x00000000 l00426DEA
l00426DFB:
	Mem383[ebp_308 - 0x00000024:word32] = Mem379[0x0042A598:word32]
	word32 eax_384 = Mem383[ebp_308 - 0x00000014:word32]
	branch eax_384 < 0x00000001 l00426EFF
l00426EFF:
	Mem394[esp_243 - 4:word32] = 0x00000000
	word32 ebp_403
	word32 edi_1230
	word32 ebx_1228
	word32 esi_1229
	fn00405470(ebp_308 - 0x00000020, 0x00000001, Mem394[0x00426C08:word32], out ebx_1228, out ebp_403, out esi_1229, out edi_1230)
	Mem417[esp_243 - 4:word32] = 0x00000400
	Mem419[esp_243 - 8:word32] = 0x00000019
	Mem422[esp_243 - 12:word32] = Mem419[ebp_403 - 0x0000000C:word32]
	Mem424[esp_243 - 16:word32] = 0x00000000
	Mem426[esp_243 - 20:word32] = 0x00000000
	word32 ebp_433
	fn0041D178(Mem426[ebp_403 - 0x00000010:word32], 0x00000000, 0x00000000, Mem426[esp_243 - 20:word32], Mem426[esp_243 - 16:word32], Mem426[esp_243 - 12:word32], out ebp_433)
	word32 esp_439 = <invalid>
	Mem448[esp_439 + 0x00000010:word32] = Mem426[ebp_433 - 0x00000008:word32]
	Mem450[esp_439 + 0x0000000C:word32] = 0x00000019
	Mem453[esp_439 + 0x00000008:word32] = Mem450[ebp_433 - 0x0000000C:word32]
	Mem459[esp_439 + 0x00000004:word32] = 0x00000400 - (Mem453[ebp_433 - 0x00000008:word32] - 0x00000400)
	Mem461[esp_439:word32] = 0x00000000
	word32 ebp_468
	word32 ecx_470 = fn0041D178(Mem461[ebp_433 - 0x00000010:word32], 0x00000000, 0x00000400, Mem461[esp_439:word32], Mem461[esp_439 + 4:word32], Mem461[esp_439 + 8:word32], out ebp_468)
	word32 esp_474 = <invalid>
	Mem483[esp_474 + 0x00000010:word32] = Mem461[0x0042A598:word32]
	word32 eax_484 = Mem483[ebp_468 - 0x00000010:word32]
	word32 edx_485 = Mem483[eax_484:word32]
	word32 esp_486
	word32 ecx_487
	word32 eax_489
	call Mem483[edx_485 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_484,ecx:ecx_470,edx:edx_485
		defs: eax:eax_489,ecx:ecx_487,esp:esp_486
	Mem493[esp_486 - 4:word32] = eax_489
	Mem496[esp_486 - 8:word32] = Mem493[ebp_468 - 0x0000000C:word32]
	Mem498[esp_486 - 12:word32] = 0x00000000
	word32 eax_499 = Mem498[ebp_468 - 0x0000000C:word32]
	word32 edx_500 = Mem498[eax_499:word32]
	word32 esp_501
	word32 ecx_502
	word32 eax_504
	call Mem498[edx_500 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_499,ecx:ecx_487,edx:edx_500
		defs: eax:eax_504,ecx:ecx_502,esp:esp_501
	Mem510[esp_501 - 4:word32] = eax_504 - Mem498[0x0042A59C:word32]
	word32 eax_511 = Mem510[ebp_468 - 0x00000010:word32]
	word32 edx_512 = Mem510[eax_511:word32]
	word32 esp_513
	word32 eax_516
	call Mem510[edx_512 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_511,ecx:ecx_502,edx:edx_512
		defs: eax:eax_516,esp:esp_513
	word32 ebp_526
	word32 ecx_528 = fn0041D178(Mem510[ebp_468 - 0x00000010:word32], eax_516 - Mem510[0x0042A59C:word32], 0x00000000, Mem510[esp_513:word32], Mem510[esp_513 + 4:word32], Mem510[esp_513 + 8:word32], out ebp_526)
	word32 eax_539 = Mem510[ebp_526 - 0x00000010:word32]
	word32 edx_540 = Mem510[eax_539:word32]
	word32 esp_541
	word32 ecx_542
	word32 eax_544
	call Mem510[edx_540 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax_539,ecx:ecx_528,edx:edx_540
		defs: eax:eax_544,ecx:ecx_542,esp:esp_541
	Mem548[esp_541 - 4:word32] = eax_544
	word32 eax_549 = Mem548[ebp_526 - 0x00000010:word32]
	word32 edx_550 = Mem548[eax_549:word32]
	word32 esp_551
	word32 ecx_552
	word32 eax_554
	call Mem548[edx_550 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_549,ecx:ecx_542,edx:edx_550
		defs: eax:eax_554,ecx:ecx_552,esp:esp_551
	Mem558[esp_551 - 4:word32] = eax_554
	Mem561[esp_551 - 8:word32] = Mem558[ebp_526 - 0x0000000C:word32]
	word32 eax_562 = Mem561[ebp_526 - 0x0000000C:word32]
	word32 edx_563 = Mem561[eax_562:word32]
	word32 esp_564
	word32 ecx_565
	word32 eax_567
	call Mem561[edx_563 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax_562,ecx:ecx_552,edx:edx_563
		defs: eax:eax_567,ecx:ecx_565,esp:esp_564
	Mem573[esp_564 - 4:word32] = eax_567 - Mem561[0x0042A5B0:word32]
	word32 eax_574 = Mem573[ebp_526 - 0x0000000C:word32]
	word32 edx_575 = Mem573[eax_574:word32]
	word32 esp_576
	word32 ecx_577
	word32 eax_579
	call Mem573[edx_575 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_574,ecx:ecx_565,edx:edx_575
		defs: eax:eax_579,ecx:ecx_577,esp:esp_576
	Mem585[esp_576 - 4:word32] = eax_579 - Mem573[0x0042A5B4:word32]
	word32 eax_586 = Mem585[ebp_526 - 0x00000010:word32]
	word32 edx_587 = Mem585[eax_586:word32]
	word32 esp_588
	word32 ecx_589
	word32 eax_591
	call Mem585[edx_587 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_586,ecx:ecx_577,edx:edx_587
		defs: eax:eax_591,ecx:ecx_589,esp:esp_588
	Mem597[esp_588 - 4:word32] = eax_591 - Mem585[0x0042A5B4:word32]
	word32 eax_598 = Mem597[ebp_526 - 0x00000010:word32]
	word32 edx_599 = Mem597[eax_598:word32]
	word32 esp_600
	word32 eax_603
	call Mem597[edx_599 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax_598,ecx:ecx_589,edx:edx_599
		defs: eax:eax_603,esp:esp_600
	word32 ebp_613
	fn0041D178(Mem597[ebp_526 - 0x00000010:word32], Mem597[esp_600:word32], eax_603 - Mem597[0x0042A5B0:word32], Mem597[esp_600 + 4:word32], Mem597[esp_600 + 8:word32], Mem597[esp_600 + 12:word32], out ebp_613)
	word32 esp_619 = <invalid>
	word32 ecx_630
	word32 edx_1231
	branch fn0040464C(Mem597[ebp_613 - 0x00000004:word32], 0x00427154, out ecx_630, out edx_1231) l00427058
l00427006:
	Mem636[esp_619 + 0x00000010:word32] = 0x00000005
	Mem638[esp_619 + 0x0000000C:word32] = 0x00000005
	Mem641[esp_619 + 0x00000008:word32] = Mem638[ebp_613 - 0x0000000C:word32]
	Mem646[esp_619 + 0x00000004:word32] = 0x00000400 - Mem641[0x0042A5B0:word32] - 0x00000003
	word32 ebx_648 = Mem646[0x0042A5CC:word32]
	Mem653[esp_619:word32] = 0x00000300 - ebx_648 + 0x0000000C
	word32 eax_654 = Mem653[ebp_613 - 0x00000010:word32]
	word32 edx_655 = Mem653[eax_654:word32]
	word32 esp_656
	word32 ecx_657
	word32 eax_659
	call Mem653[edx_655 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_654,ecx:ecx_630,edx:edx_655
		defs: eax:eax_659,ecx:ecx_657,esp:esp_656
	Mem666[esp_656 - 4:word32] = eax_659 - ebx_648 + 0x0000000C
	word32 eax_667 = Mem666[ebp_613 - 0x00000010:word32]
	word32 edx_668 = Mem666[eax_667:word32]
	word32 esp_669
	word32 eax_672
	call Mem666[edx_668 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax_667,ecx:ecx_657,edx:edx_668
		defs: eax:eax_672,esp:esp_669
	fn0041D178(Mem666[ebp_613 - 0x00000010:word32], Mem666[esp_669:word32], eax_672 - Mem666[0x0042A5B0:word32] - 0x00000003, Mem666[esp_669 + 4:word32], Mem666[esp_669 + 8:word32], Mem666[esp_669 + 12:word32], out ebp_613)
l00427058:
	word32 ebp_712
	word32 ecx_1233
	word32 ebp_1235
	word32 edx_1234
	word32 esi_1178
	word32 ebx_1166 = fn00419290(fn0041B578(Mem697[ebp_613 - 0x0000000C:word32], out ecx_1233, out edx_1234, out ebp_1235), 0x00000180, 0x00000200, out ebp_712, out esi_1178)
	word32 ebp_1241
	word32 edx_1240
	word32 ebp_762
	word32 edx_1237
	word32 ebp_1238
	word32 ecx_1239
	word32 ecx_1236
	fn00418E64(Mem697[fn0041B578(Mem697[fn00418F80(Mem697[fn0041B578(Mem697[ebp_712 - 0x00000010:word32], out ecx_1236, out edx_1237, out ebp_1238) + 0x00000014:word32], 0x00000000) - 0x00000010:word32], out ecx_1239, out edx_1240, out ebp_1241) + 0x00000014:word32], out ebp_762)
	word32 esp_718 = <invalid>
	Mem772[esp_718 - 4:word32] = 0x00000251
	Mem775[esp_718 - 8:word32] = ebp_762 - 0x0000003C
	fn00413CD0(0x00000000, Mem775[ebp_762 - 0x00000008:word32], 0x00000019, Mem775[esp_718 - 8:word32], Mem775[esp_718 - 4:word32])
	Mem785[esp_718 - 4:word32] = ebp_762 - 0x0000003C
	word32 edx_1242
	word32 ecx_790
	word32 ebp_1243
	word32 ebp_799
	fn004190D4(fn0041B578(Mem785[ebp_762 - 0x00000010:word32], out ecx_790, out edx_1242, out ebp_1243), ecx_790, Mem785[esp_718 - 4:word32], out ebp_799)
	word32 eax_808 = Mem785[ebp_799 - 0x00000010:word32]
	word32 ecx_809 = Mem785[eax_808:word32]
	word32 esp_810
	call Mem785[ecx_809 + 0x00000050:word32] (retsize: 4;)
		uses: eax:eax_808,ecx:ecx_809,edx:Mem785[ebp_799 - 0x00000004:word32]
		defs: esp:esp_810
	Mem823[fs:0x00000000:word32] = Mem785[esp_810:word32]
	Mem825[esp_810 + 8:word32] = 0x00427121
	branch Mem825[ebp_799 - 0x00000020:word32] == 0x00000000 l00427101
l004270DD:
	branch fn00405294(Mem825[ebp_799 - 0x00000020:word32]) <= 0x00000000 l00427101
l004270E9:
	Mem837[esp_810 + 4:word32] = 0x00000000
	word32 edi_1249
	fn00405470(ebp_799 - 0x00000020, 0x00000001, Mem837[0x00426C08:word32], out ebx_1166, out ebp_799, out esi_1178, out edi_1249)
l00427101:
	word32 ecx_1246
	fn00403720(Mem857[ebp_799 - 0x0000000C:word32], out ecx_1246)
	word32 ecx_1247
	fn00403720(Mem857[ebp_799 - 0x00000010:word32], out ecx_1247)
	word32 ecx_1248
	fn00403720(Mem857[ebp_799 - 0x0000001C:word32], out ecx_1248)
	ebpOut = ebp_799
	esiOut = esi_1178
	return ebx_1166
l00426E0F:
	Mem887[ebp_308 - 0x0000002C:word32] = eax_384
	Mem888[ebp_308 - 0x00000018:word32] = 0x00000000
	word32 edx_1232
	Mem906[ebp_308 - 0x00000028:word32] = fn0041B01C(Mem888[0x0041CD1C:word32], ecx_310, SEQ(edx_24_8_891, 0x01), out edx_1232)
	Mem911[esp_243 - 4:word32] = ebp_308
	Mem913[esp_243 - 8:word32] = 0x00426EEC
	Mem916[esp_243 - 12:word32] = Mem913[fs:0x00000000:word32]
	Mem917[fs:0x00000000:word32] = esp_243 - 12
	word32 eax_919 = Mem917[ebp_308 - 0x00000028:word32]
	word32 ecx_920 = Mem917[eax_919:word32]
	word32 esp_928
	word32 edx_930
	call Mem917[ecx_920 + 0x00000008:word32] (retsize: 4;)
		uses: eax:eax_919,ecx:ecx_920,edx:Mem917[ebp_308 - 0x0000001C:word32]
		defs: edx:edx_930,esp:esp_928
	word32 eax_934 = Mem917[ebp_308 - 0x00000018:word32]
	word24 edx_24_8_952 = SLICE(edx_930, word24, 8)
	word32 eax_935 = eax_934 & 0x80000001
	branch (eax_934 & 0x80000001) >= 0x00000000 l00426E51
l00426E4C:
	eax_935 = ((eax_934 & 0x80000001) - 0x00000001 | 0xFFFFFFFE) + 0x00000001
l00426E51:
	branch eax_935 != 0x00000001 l00426E5C
l00426E54:
	fn0041CE08(Mem917[ebp_308 - 0x00000028:word32], edx_24_8_952)
l00426E5C:
	word32 ecx_1011
	word32 ebp_1010
	branch Mem917[ebp_308 - 0x00000018:word32] != 0x00000000 l00426E71
l00426E71:
	branch Mem917[ebp_308 - 0x00000014:word32] - 0x00000001 != Mem917[ebp_308 - 0x00000018:word32] l00426E92
l00426E92:
	word32 eax_970 = Mem917[ebp_308 - 0x00000018:word32]
	ecx_1011 = fn0041CF50(Mem917[ebp_308 - 0x00000028:word32], Mem917[Mem917[ebp_308 - 0x00000020:word32] + eax_970 * 0x00000008:word32], Mem917[Mem917[ebp_308 - 0x00000020:word32] - 0x00000004 + eax_970 * 0x00000008:word32], out ebp_1010)
l00426E7A:
	ecx_1011 = fn0041D010(Mem917[ebp_308 - 0x00000028:word32], Mem917[Mem917[ebp_308 - 0x00000020:word32] + fn0040529C(Mem917[ebp_308 - 0x00000020:word32]) * 0x00000004:word32], out ebp_1010)
l00426E62:
	ecx_1011 = fn0041D068(Mem917[ebp_308 - 0x00000028:word32], Mem917[Mem917[ebp_308 - 0x00000020:word32]:word32], out ebp_1010)
l00426EAC:
	Mem1025[esp_928 - 4:word32] = Mem917[ebp_1010 - 0x00000010:word32]
	word32 eax_1026 = Mem1025[ebp_1010 - 0x00000010:word32]
	word32 edx_1027 = Mem1025[eax_1026:word32]
	word32 eax_1043
	call Mem1025[edx_1027 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_1026,ecx:ecx_1037,edx:edx_1027
		defs: eax:eax_1043
	word32 ebp_1052
	word32 ebx_1053
	word32 esi_1057
	word32 edi_1244
	word32 ecx_1054 = fn0041D1C8(Mem1025[ebp_1010 - 0x00000028:word32], eax_1043 - Mem1025[0x0042A5CC:word32], Mem1025[ebp_1010 - 0x00000024:word32], out ebx_1053, out ebp_1052, out esi_1057, out edi_1244)
	word32 eax_1065 = Mem1025[ebp_1052 - 0x00000028:word32]
	word32 edx_1066 = Mem1025[eax_1065:word32]
	word32 eax_1070
	call Mem1025[edx_1066 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax_1065,ecx:ecx_1054,edx:edx_1066
		defs: eax:eax_1070
	Mem1074[ebp_1052 - 0x00000024:word32] = Mem1025[ebp_1052 - 0x00000024:word32] + eax_1070
	Mem1084[fs:0x00000000:word32] = eax
	word32 ecx_1245
	fn00403720(Mem1086[ebp_1052 - 0x00000028:word32], out ecx_1245)
	ebpOut = ebp_1052
	esiOut = esi_1057
	return ebx_1053
l00426CC8:
	fn00403D08(eax_56, eax_44)
l00427121:
	Mem1114[fs:0x00000000:word32] = eax
	fn0040547C(fp - 0x00000024, Mem1116[0x00426C08:word32])
	ebpOut = fp - 4
	esiOut = esi
	return ecx
fn00426C30_exit:


word32 fn0042718C(word32 eax, word32 edx, word32 dwArg00, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: ebp edi
// Trashed: SCZDO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn0042718C_entry:
l0042718C:
	Mem33[fs:0x00000000:word32] = fp + 0xFFFFFFC0
	branch eax == 0x00000000 l00427436
l004271B8:
	word32 edx_37 = Mem33[eax:word32]
	word32 esp_38
	word32 ecx_39
	word32 edx_40
	word32 eax_41
	call Mem33[edx_37 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_37
		defs: eax:eax_41,ecx:ecx_39,edx:edx_40,esp:esp_38
	word24 edx_24_8_73 = SLICE(edx_40, word24, 8)
	branch eax_41 >= edx l00427436
l00427436:
	Mem58[fs:0x00000000:word32] = eax
	fn0040547C(fp - 0x0000001C, Mem60[0x00427164:word32])
	ediOut = edi
	return fp - 4
l004271C9:
	word32 edx_677
	word32 eax_77 = fn0041B01C(Mem33[0x0041CD1C:word32], ecx_39, SEQ(edx_24_8_73, 0x01), out edx_677)
	Mem87[esp_38 - 4:word32] = fp - 4
	Mem89[esp_38 - 8:word32] = 0x0042742F
	Mem92[esp_38 - 12:word32] = Mem89[fs:0x00000000:word32]
	Mem93[fs:0x00000000:word32] = esp_38 - 12
	word32 ecx_96 = Mem93[eax_77:word32]
	call Mem93[ecx_96 + 0x00000040:word32] (retsize: 4;)
		uses: eax:eax_77,ecx:ecx_96,edx:edx,Stack +0004:dwArg00,Stack +FFFFFFF4:eax_77
	word32 edx_104 = Mem93[eax:word32]
	word32 eax_108
	call Mem93[edx_104 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_104,Stack +0004:dwArg00
		defs: eax:eax_108
	word32 ecx_113 = Mem93[eax_77:word32]
	call Mem93[ecx_113 + 0x00000034:word32] (retsize: 4;)
		uses: eax:eax_77,ecx:ecx_113,edx:eax_108,Stack +0004:dwArg00
	word32 ebp_137
	word32 ecx_678
	word32 edx_679
	word32 esi_681
	word32 edi_682
	word32 ebx_680
	fn0041C3E4(eax_77, fn0041B664(eax, out ecx_678, out edx_679), out ebx_680, out ebp_137, out esi_681, out edi_682)
	word32 eax_143 = Mem93[ebp_137 - 0x00000004:word32]
	word32 edx_144 = Mem93[eax_143:word32]
	word32 eax_148
	call Mem93[edx_144 + 0x00000024:word32] (retsize: 4;)
		uses: eax:eax_143,edx:edx_144,Stack +0004:dwArg00
		defs: eax:eax_148
	word32 eax_152 = Mem93[ebp_137 - 0x0000000C:word32]
	word32 ecx_153 = Mem93[eax_152:word32]
	word32 esp_154
	call Mem93[ecx_153 + 0x00000038:word32] (retsize: 4;)
		uses: eax:eax_152,ecx:ecx_153,edx:eax_148,Stack +0004:dwArg00
		defs: esp:esp_154
	word32 eax_160 = Mem93[ebp_137 - 0x00000008:word32]
	branch eax_160 >= 0x00000000 l00427233
l0042722E:
	eax_160 = eax_160 + 0x000003FF
l00427233:
	Mem169[ebp_137 - 0x00000010:word32] = eax_160 >> 0x0000000A
	word32 eax_170 = Mem169[ebp_137 - 0x00000008:word32]
	word32 eax_171 = eax_170 & 0x800003FF
	branch (eax_170 & 0x800003FF) >= 0x00000000 l0042724A
l00427243:
	eax_171 = ((eax_170 & 0x800003FF) - 0x00000001 | 0xFFFFFC00) + 0x00000001
l0042724A:
	branch eax_171 <= 0x00000000 l00427251
l0042724E:
	Mem186[ebp_137 - 0x00000010:word32] = Mem169[ebp_137 - 0x00000010:word32] + 0x00000001
l00427251:
	Mem191[ebp_137 - 0x00000010:word32] = Mem189[ebp_137 - 0x00000010:word32] - 0x00000001
l00427254:
	Mem196[ebp_137 - 0x00000010:word32] = Mem194[ebp_137 - 0x00000010:word32] + 0x00000001
	word32 ebx_199 = Mem196[ebp_137 - 0x00000010:word32] * 0x00000002 - 0x00000002
	branch (int32) ((int64) ((Mem196[ebp_137 - 0x00000010:word32] << 0x0000000A) - Mem196[ebp_137 - 0x00000008:word32]) / ebx_199) <= 0x00000064 l00427254
l00427274:
	Mem218[esp_154 - 4:word32] = ebx_199
	word32 ebp_227
	word32 ebx_228
	word32 edi_230
	word32 esi_232
	word32 ecx_229 = fn00405470(ebp_137 - 0x00000018, 0x00000001, Mem218[0x00427164:word32], out ebx_228, out ebp_227, out esi_232, out edi_230)
	word32 eax_242 = fn0040529C(Mem218[ebp_227 - 0x00000018:word32])
	branch eax_242 < 0x00000000 l004272B3
l00427297:
	Mem252[ebp_227 - 0x00000024:word32] = eax_242 + 0x00000001
	Mem253[ebp_227 - 0x00000014:word32] = 0x00000000
l004272A2:
	Mem259[Mem255[ebp_227 - 0x00000018:word32] + Mem255[ebp_227 - 0x00000014:word32] * 0x00000004:word32] = edi_230
	Mem261[ebp_227 - 0x00000014:word32] = Mem259[ebp_227 - 0x00000014:word32] + 0x00000001
	word32 v26_262 = Mem261[ebp_227 - 0x00000024:word32] - 0x00000001
	Mem263[ebp_227 - 0x00000024:word32] = v26_262
	branch v26_262 != 0x00000000 l004272A2
l004272B3:
	word32 edx_275 = (int32) ((int64) esi_232 % ebx_228)
	word24 edx_24_8_400 = SLICE(edx_275 - 0x00000001, word24, 8)
	branch edx_275 < 0x00000001 l004272D9
l004272BD:
	Mem284[ebp_227 - 0x00000024:word32] = edx_275
	Mem285[ebp_227 - 0x00000014:word32] = 0x00000000
l004272C8:
	word32 edx_289 = Mem287[ebp_227 - 0x00000014:word32]
	word32 eax_288 = Mem287[ebp_227 - 0x00000018:word32]
	Mem291[eax_288 + edx_289 * 0x00000004:word32] = Mem287[eax_288 + edx_289 * 0x00000004:word32] + 0x00000001
	Mem293[ebp_227 - 0x00000014:word32] = Mem291[ebp_227 - 0x00000014:word32] + 0x00000001
	word32 v30_294 = Mem293[ebp_227 - 0x00000024:word32] - 0x00000001
	Mem295[ebp_227 - 0x00000024:word32] = v30_294
	edx_24_8_400 = SLICE(edx_289, word24, 8) (alias)
	branch v30_294 != 0x00000000 l004272C8
l004272D9:
	Mem300[ebp_227 - 0x0000001C:word32] = 0x00000000
	word32 eax_301 = Mem300[ebp_227 - 0x00000010:word32]
	branch eax_301 < 0x00000001 l004273CC
l004273CC:
	Mem311[esp_154 - 4:word32] = 0x00000000
	word32 ebx_321
	word32 esi_325
	word32 edi_323
	word32 ebp_320
	fn00405470(ebp_227 - 0x00000018, 0x00000001, Mem311[0x00427164:word32], out ebx_321, out ebp_320, out esi_325, out edi_323)
	word32 eax_335 = Mem311[ebp_320 - 0x00000004:word32]
	word32 ecx_336 = Mem311[eax_335:word32]
	word32 esp_337
	call Mem311[ecx_336 + 0x00000008:word32] (retsize: 4;)
		uses: eax:eax_335,ecx:ecx_336,edx:Mem311[ebp_320 - 0x0000000C:word32],Stack +0004:dwArg00
		defs: esp:esp_337
	Mem350[fs:0x00000000:word32] = Mem311[esp_337:word32]
	Mem352[esp_337 + 8:word32] = 0x00427436
	branch Mem352[ebp_320 - 0x00000018:word32] == 0x00000000 l00427426
l00427402:
	branch fn00405294(Mem352[ebp_320 - 0x00000018:word32]) <= 0x00000000 l00427426
l0042740E:
	Mem364[esp_337 + 4:word32] = 0x00000000
	word32 ebx_685
	word32 esi_686
	fn00405470(ebp_320 - 0x00000018, 0x00000001, Mem364[0x00427164:word32], out ebx_685, out ebp_320, out esi_686, out edi_323)
l00427426:
	word32 ecx_684
	fn00403720(Mem384[ebp_320 - 0x0000000C:word32], out ecx_684)
	ediOut = edi_323
	return ebp_320
l004272EA:
	Mem396[ebp_227 - 0x00000024:word32] = eax_301
	Mem397[ebp_227 - 0x00000014:word32] = 0x00000000
	word32 edx_683
	Mem415[ebp_227 - 0x00000020:word32] = fn0041B01C(Mem397[0x0041CD1C:word32], ecx_229, SEQ(edx_24_8_400, 0x01), out edx_683)
	Mem420[esp_154 - 4:word32] = ebp_227
	Mem422[esp_154 - 8:word32] = 0x004273B9
	Mem425[esp_154 - 12:word32] = Mem422[fs:0x00000000:word32]
	Mem426[fs:0x00000000:word32] = esp_154 - 12
	word32 eax_428 = Mem426[ebp_227 - 0x00000020:word32]
	word32 ecx_429 = Mem426[eax_428:word32]
	word32 esp_437
	word32 edx_439
	call Mem426[ecx_429 + 0x00000008:word32] (retsize: 4;)
		uses: eax:eax_428,ecx:ecx_429,edx:Mem426[ebp_227 - 0x00000004:word32],Stack +0004:dwArg00
		defs: edx:edx_439,esp:esp_437
	word32 eax_443 = Mem426[ebp_227 - 0x00000014:word32]
	word24 edx_24_8_461 = SLICE(edx_439, word24, 8)
	word32 eax_444 = eax_443 & 0x80000001
	branch (eax_443 & 0x80000001) >= 0x00000000 l0042732C
l00427327:
	eax_444 = ((eax_443 & 0x80000001) - 0x00000001 | 0xFFFFFFFE) + 0x00000001
l0042732C:
	branch eax_444 != 0x00000001 l00427337
l0042732F:
	fn0041CE08(Mem426[ebp_227 - 0x00000020:word32], edx_24_8_461)
l00427337:
	word32 ebp_489
	branch Mem426[ebp_227 - 0x00000014:word32] != 0x00000000 l0042734C
l0042734C:
	branch Mem426[ebp_227 - 0x00000010:word32] - 0x00000001 != Mem426[ebp_227 - 0x00000014:word32] l0042736D
l0042736D:
	word32 eax_479 = Mem426[ebp_227 - 0x00000014:word32]
	fn0041CF50(Mem426[ebp_227 - 0x00000020:word32], Mem426[Mem426[ebp_227 - 0x00000018:word32] + eax_479 * 0x00000008:word32], Mem426[Mem426[ebp_227 - 0x00000018:word32] - 0x00000004 + eax_479 * 0x00000008:word32], out ebp_489)
l00427355:
	fn0041D010(Mem426[ebp_227 - 0x00000020:word32], Mem426[Mem426[ebp_227 - 0x00000018:word32] + fn0040529C(Mem426[ebp_227 - 0x00000018:word32]) * 0x00000004:word32], out ebp_489)
l0042733D:
	fn0041D068(Mem426[ebp_227 - 0x00000020:word32], Mem426[Mem426[ebp_227 - 0x00000018:word32]:word32], out ebp_489)
l00427387:
	Mem534[esp_437 - 4:word32] = Mem426[ebp_489 - 0x0000000C:word32]
	word32 ebp_542
	word32 edi_545
	word32 ebx_687
	word32 esi_688
	fn0041D1C8(Mem534[ebp_489 - 0x00000020:word32], 0x00000000, Mem534[ebp_489 - 0x0000001C:word32], out ebx_687, out ebp_542, out esi_688, out edi_545)
	word32 eax_555 = Mem534[ebp_542 - 0x00000020:word32]
	word32 edx_556 = Mem534[eax_555:word32]
	word32 eax_560
	call Mem534[edx_556 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax_555,edx:edx_556,Stack +0004:dwArg00
		defs: eax:eax_560
	Mem564[ebp_542 - 0x0000001C:word32] = Mem534[ebp_542 - 0x0000001C:word32] + eax_560
	Mem574[fs:0x00000000:word32] = eax
	word32 ecx_689
	fn00403720(Mem576[ebp_542 - 0x00000020:word32], out ecx_689)
	ediOut = edi_545
	return ebp_542
fn0042718C_exit:


word32 fn00427488(word32 eax, word32 edx, word32 dwArg00, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] edx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: ebp ebx esi
// Trashed: SCZDO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00427488_entry:
l00427488:
	Mem33[fs:0x00000000:word32] = fp + 0xFFFFFFB0
	word32 ebp_603 = fp - 4
	branch eax == 0x00000000 l00427778
l004274B3:
	word32 edx_37 = Mem33[eax:word32]
	word32 eax_41
	call Mem33[edx_37 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_37
		defs: eax:eax_41
	branch edx == eax_41 l00427778
l004274C3:
	word32 edx_47 = Mem33[eax:word32]
	word32 esp_48
	word32 ecx_49
	word32 edx_50
	word32 eax_51
	call Mem33[edx_47 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_47
		defs: eax:eax_51,ecx:ecx_49,edx:edx_50,esp:esp_48
	word24 edx_24_8_58 = SLICE(edx_50, word24, 8)
	branch edx >= eax_51 l0042750B
l0042750B:
	word32 edx_732
	word32 eax_62 = fn0041B01C(Mem33[0x0041CD1C:word32], ecx_49, SEQ(edx_24_8_58, 0x01), out edx_732)
	Mem72[esp_48 - 4:word32] = fp - 4
	Mem74[esp_48 - 8:word32] = 0x00427771
	Mem77[esp_48 - 12:word32] = Mem74[fs:0x00000000:word32]
	Mem78[fs:0x00000000:word32] = esp_48 - 12
	word32 edx_80 = Mem78[eax:word32]
	word32 eax_84
	call Mem78[edx_80 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_80,Stack +FFFFFFF8:eax_62
		defs: eax:eax_84
	word32 ecx_89 = Mem78[eax_62:word32]
	call Mem78[ecx_89 + 0x00000040:word32] (retsize: 4;)
		uses: eax:eax_62,ecx:ecx_89,edx:eax_84
	word32 ecx_98 = Mem78[eax_62:word32]
	call Mem78[ecx_98 + 0x00000034:word32] (retsize: 4;)
		uses: eax:eax_62,ecx:ecx_98,edx:edx
	word32 ebx_116
	word32 ebp_122
	word32 ecx_733
	word32 edx_734
	word32 esi_735
	word32 edi_736
	fn0041C3E4(eax_62, fn0041B664(eax, out ecx_733, out edx_734), out ebx_116, out ebp_122, out esi_735, out edi_736)
	word32 eax_128 = Mem78[ebp_122 - 0x00000004:word32]
	word32 edx_129 = Mem78[eax_128:word32]
	word32 eax_133
	call Mem78[edx_129 + 0x00000024:word32] (retsize: 4;)
		uses: eax:eax_128,edx:edx_129
		defs: eax:eax_133
	word32 eax_137 = Mem78[ebp_122 - 0x00000008:word32]
	word32 ecx_138 = Mem78[eax_137:word32]
	word32 esp_139
	call Mem78[ecx_138 + 0x00000038:word32] (retsize: 4;)
		uses: eax:eax_137,ecx:ecx_138,edx:eax_133
		defs: esp:esp_139
	Mem152[ebp_122 - 0x0000000C:word32] = (int32) ((int64) ebx_116 / 0x00000300)
	branch (int32) ((int64) ebx_116 % 0x00000300) <= 0x00000000 l00427586
l00427583:
	Mem164[ebp_122 - 0x0000000C:word32] = Mem152[ebp_122 - 0x0000000C:word32] + 0x00000001
l00427586:
	Mem169[ebp_122 - 0x0000000C:word32] = Mem167[ebp_122 - 0x0000000C:word32] - 0x00000001
l00427589:
	Mem174[ebp_122 - 0x0000000C:word32] = Mem172[ebp_122 - 0x0000000C:word32] + 0x00000001
	Mem178[ebp_122 - 0x00000010:word32] = Mem174[ebp_122 - 0x0000000C:word32] * 0x00000002 - 0x00000002
	word32 esi_179 = Mem178[ebp_122 - 0x0000000C:word32]
	branch (int32) ((int64) ((esi_179 << 0x00000008) + (esi_179 << 0x00000008) * 0x00000002 - ebx_116) / Mem178[ebp_122 - 0x00000010:word32]) <= 0x00000096 l00427589
l004275B2:
	Mem198[esp_139 - 4:word32] = Mem178[ebp_122 - 0x00000010:word32]
	word32 ebp_205
	word32 edi_208
	word32 esi_210
	word32 ebx_739
	word32 ecx_207 = fn00405470(ebp_122 - 0x00000018, 0x00000001, Mem198[0x00427460:word32], out ebx_739, out ebp_205, out esi_210, out edi_208)
	word32 eax_220 = fn0040529C(Mem198[ebp_205 - 0x00000018:word32])
	branch eax_220 < 0x00000000 l004275F4
l004275D8:
	Mem230[ebp_205 - 0x00000024:word32] = eax_220 + 0x00000001
	Mem231[ebp_205 - 0x00000014:word32] = 0x00000000
l004275E3:
	Mem237[Mem233[ebp_205 - 0x00000018:word32] + Mem233[ebp_205 - 0x00000014:word32] * 0x00000004:word32] = edi_208
	Mem239[ebp_205 - 0x00000014:word32] = Mem237[ebp_205 - 0x00000014:word32] + 0x00000001
	word32 v27_240 = Mem239[ebp_205 - 0x00000024:word32] - 0x00000001
	Mem241[ebp_205 - 0x00000024:word32] = v27_240
	branch v27_240 != 0x00000000 l004275E3
l004275F4:
	word32 edx_253 = (int32) ((int64) esi_210 % Mem252[ebp_205 - 0x00000010:word32])
	word24 edx_24_8_377 = SLICE(edx_253 - 0x00000001, word24, 8)
	branch edx_253 < 0x00000001 l0042761B
l004275FF:
	Mem261[ebp_205 - 0x00000024:word32] = edx_253
	Mem262[ebp_205 - 0x00000014:word32] = 0x00000000
l0042760A:
	word32 edx_266 = Mem264[ebp_205 - 0x00000014:word32]
	word32 eax_265 = Mem264[ebp_205 - 0x00000018:word32]
	Mem268[eax_265 + edx_266 * 0x00000004:word32] = Mem264[eax_265 + edx_266 * 0x00000004:word32] + 0x00000001
	Mem270[ebp_205 - 0x00000014:word32] = Mem268[ebp_205 - 0x00000014:word32] + 0x00000001
	word32 v31_271 = Mem270[ebp_205 - 0x00000024:word32] - 0x00000001
	Mem272[ebp_205 - 0x00000024:word32] = v31_271
	edx_24_8_377 = SLICE(edx_266, word24, 8) (alias)
	branch v31_271 != 0x00000000 l0042760A
l0042761B:
	Mem277[ebp_205 - 0x0000001C:word32] = 0x00000000
	word32 eax_278 = Mem277[ebp_205 - 0x0000000C:word32]
	branch eax_278 < 0x00000001 l0042770E
l0042770E:
	Mem288[esp_139 - 4:word32] = 0x00000000
	word32 edi_300
	word32 esi_302
	word32 ebp_297
	word32 ebx_298
	fn00405470(ebp_205 - 0x00000018, 0x00000001, Mem288[0x00427460:word32], out ebx_298, out ebp_297, out esi_302, out edi_300)
	word32 eax_312 = Mem288[ebp_297 - 0x00000004:word32]
	word32 ecx_313 = Mem288[eax_312:word32]
	word32 esp_314
	call Mem288[ecx_313 + 0x00000008:word32] (retsize: 4;)
		uses: eax:eax_312,ecx:ecx_313,edx:Mem288[ebp_297 - 0x00000008:word32]
		defs: esp:esp_314
	Mem327[fs:0x00000000:word32] = Mem288[esp_314:word32]
	Mem329[esp_314 + 8:word32] = 0x00427778
	branch Mem329[ebp_297 - 0x00000018:word32] == 0x00000000 l00427768
l00427744:
	branch fn00405294(Mem329[ebp_297 - 0x00000018:word32]) <= 0x00000000 l00427768
l00427750:
	Mem341[esp_314 + 4:word32] = 0x00000000
	word32 edi_742
	fn00405470(ebp_297 - 0x00000018, 0x00000001, Mem341[0x00427460:word32], out ebx_298, out ebp_297, out esi_302, out edi_742)
l00427768:
	word32 ecx_741
	fn00403720(Mem361[ebp_297 - 0x00000008:word32], out ecx_741)
	ebpOut = ebp_297
	esiOut = esi_302
	return ebx_298
l0042762C:
	Mem373[ebp_205 - 0x00000024:word32] = eax_278
	Mem374[ebp_205 - 0x00000014:word32] = 0x00000000
	word32 edx_740
	Mem392[ebp_205 - 0x00000020:word32] = fn0041B01C(Mem374[0x0041CD1C:word32], ecx_207, SEQ(edx_24_8_377, 0x01), out edx_740)
	Mem397[esp_139 - 4:word32] = ebp_205
	Mem399[esp_139 - 8:word32] = 0x004276FB
	Mem402[esp_139 - 12:word32] = Mem399[fs:0x00000000:word32]
	Mem403[fs:0x00000000:word32] = esp_139 - 12
	word32 eax_405 = Mem403[ebp_205 - 0x00000020:word32]
	word32 ecx_406 = Mem403[eax_405:word32]
	word32 esp_416
	word32 edx_418
	call Mem403[ecx_406 + 0x00000008:word32] (retsize: 4;)
		uses: eax:eax_405,ecx:ecx_406,edx:Mem403[ebp_205 - 0x00000004:word32]
		defs: edx:edx_418,esp:esp_416
	word32 eax_422 = Mem403[ebp_205 - 0x00000014:word32]
	word24 edx_24_8_440 = SLICE(edx_418, word24, 8)
	word32 eax_423 = eax_422 & 0x80000001
	branch (eax_422 & 0x80000001) >= 0x00000000 l0042766E
l00427669:
	eax_423 = ((eax_422 & 0x80000001) - 0x00000001 | 0xFFFFFFFE) + 0x00000001
l0042766E:
	branch eax_423 != 0x00000001 l00427679
l00427671:
	fn0041CEC0(Mem403[ebp_205 - 0x00000020:word32], edx_24_8_440)
l00427679:
	word32 ebp_468
	branch Mem403[ebp_205 - 0x00000014:word32] != 0x00000000 l0042768E
l0042768E:
	branch Mem403[ebp_205 - 0x0000000C:word32] - 0x00000001 != Mem403[ebp_205 - 0x00000014:word32] l004276AF
l004276AF:
	word32 eax_458 = Mem403[ebp_205 - 0x00000014:word32]
	ebp_468 = fn0041CFB0(Mem403[ebp_205 - 0x00000020:word32], Mem403[Mem403[ebp_205 - 0x00000018:word32] + eax_458 * 0x00000008:word32], Mem403[Mem403[ebp_205 - 0x00000018:word32] - 0x00000004 + eax_458 * 0x00000008:word32])
l00427697:
	ebp_468 = fn0041D0C4(Mem403[ebp_205 - 0x00000020:word32], Mem403[Mem403[ebp_205 - 0x00000018:word32] + fn0040529C(Mem403[ebp_205 - 0x00000018:word32]) * 0x00000004:word32])
l0042767F:
	ebp_468 = fn0041D11C(Mem403[ebp_205 - 0x00000020:word32], Mem403[Mem403[ebp_205 - 0x00000018:word32]:word32])
l004276C9:
	Mem513[esp_416 - 4:word32] = Mem403[ebp_468 - 0x00000008:word32]
	word32 ebp_521
	word32 ebx_522
	word32 esi_526
	word32 edi_743
	fn0041D1C8(Mem513[ebp_468 - 0x00000020:word32], Mem513[ebp_468 - 0x0000001C:word32], 0x00000000, out ebx_522, out ebp_521, out esi_526, out edi_743)
	word32 eax_534 = Mem513[ebp_521 - 0x00000020:word32]
	word32 edx_535 = Mem513[eax_534:word32]
	word32 eax_539
	call Mem513[edx_535 + 0x00000020:word32] (retsize: 4;)
		uses: eax:eax_534,edx:edx_535
		defs: eax:eax_539
	Mem543[ebp_521 - 0x0000001C:word32] = Mem513[ebp_521 - 0x0000001C:word32] + eax_539
	Mem553[fs:0x00000000:word32] = eax
	word32 ecx_744
	fn00403720(Mem555[ebp_521 - 0x00000020:word32], out ecx_744)
	ebpOut = ebp_521
	esiOut = esi_526
	return ebx_522
l004274CF:
	Mem566[esp_48 - 4:word32] = edx
	Mem569[esp_48 - 8:word32] = fp - 0x00000038
	word32 edx_571 = Mem569[eax:word32]
	word32 esp_572
	word32 eax_575
	call Mem569[edx_571 + 0x0000002C:word32] (retsize: 4;)
		uses: eax:eax,edx:edx_571,Stack +0004:dwArg00
		defs: eax:eax_575,esp:esp_572
	fn00413CD0(0x00000000, eax_575, 0x00000000, Mem569[esp_572:word32], Mem569[esp_572 + 4:word32])
	Mem587[esp_572 + 0x00000004:word32] = fp - 0x00000038
	word32 ebp_591
	word32 edx_738
	word32 ecx_737
	ebp_603 = fn00419164(fn0041B578(eax, out ecx_737, out edx_738, out ebp_591), Mem587[ebp_591 - 0x00000004:word32], Mem587[esp_572 + 0x00000004:word32])
	word32 eax_611 = Mem587[ebp_603 - 0x00000004:word32]
	word32 ecx_612 = Mem587[eax_611:word32]
	call Mem587[ecx_612 + 0x00000034:word32] (retsize: 4;)
		uses: eax:eax_611,ecx:ecx_612,edx:edx,Stack +0004:dwArg00
l00427778:
	Mem631[fs:0x00000000:word32] = eax
	fn0040547C(ebp_603 - 0x00000018, Mem633[0x00427460:word32])
	ebpOut = ebp_603
	esiOut = esi
	return edx
fn00427488_exit:


word32 fn004277A4(word32 eax, word32 ecx, word32 edx, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  eax:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: ebp ebx esi
// Trashed: SCZDO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn004277A4_entry:
	word24 edx_24_8_27 = SLICE(edx, word24, 8)
l004277A4:
	word32 edx_140
	word32 eax_32 = fn0041B01C(Mem19[0x0041CD1C:word32], ecx, SEQ(edx_24_8_27, 0x01), out edx_140)
	word32 v14_45 = Mem44[fs:0x00000000:word32]
	Mem48[fs:0x00000000:word32] = fp - 32
	word32 ecx_51 = Mem48[eax_32:word32]
	word32 esp_52
	call Mem48[ecx_51 + 0x0000004C:word32] (retsize: 4;)
		uses: eax:eax_32,ecx:ecx_51,edx:eax,Stack +0004:v14_45,Stack +0008:0x0042780C,Stack +000C:fp - 4,Stack +001C:eax_32
		defs: esp:esp_52
	word32 edi_66
	word32 ebp_76
	word32 esi_82
	word32 ebx_77 = fn00427488(Mem48[fn0042718C(eax_32, edx, Mem48[esp_52 + -4:word32], out edi_66) - 0x00000004:word32], edi_66, Mem48[esp_52 + -4:word32], out ebp_76, out esi_82)
	word32 eax_89 = Mem48[ebp_76 - 0x00000004:word32]
	word32 ecx_90 = Mem48[eax_89:word32]
	call Mem48[ecx_90 + 0x00000050:word32] (retsize: 4;)
		uses: eax:eax_89,ecx:ecx_90,edx:ebx_77
	Mem106[fs:0x00000000:word32] = eax_32
	word32 ecx_141
	fn00403720(Mem108[ebp_76 - 0x00000004:word32], out ecx_141)
	ebpOut = ebp_76
	esiOut = esi_82
	return ebx_77
fn004277A4_exit:


DWORD Win32CrtStartup()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: eax
// Preserved:
Win32CrtStartup_entry:
l00427A1C:
	Mem31[Mem29[0x0042A8C0:word32]:byte] = 0x01
	fn00406308(0x00427844, fp - 4)
	word32 esp_38 = <invalid>
	Mem48[esp_38 - 4:word32] = fp - 4
	Mem50[esp_38 - 8:word32] = 0x00427C52
	Mem53[esp_38 - 12:word32] = Mem50[fs:0x00000000:word32]
	Mem54[fs:0x00000000:word32] = esp_38 - 12
	Mem56[esp_38 - 16:word32] = 0x00000000
	Mem58[0x0042D3C8:word32] = GetSystemMetrics(Mem56[esp_38 - 16:int32])
	Mem60[esp_38 - 20:word32] = 0x00000001
	Mem62[0x0042D3CC:word32] = GetSystemMetrics(Mem60[esp_38 - 20:int32])
	Mem65[esp_38 - 24:word32] = fp - 0x00000018
	fn00408704()
	word32 eax_81 = Mem71[0x0042A710:word32]
	fn00404894(eax_81, 0x00000000)
	word32 esp_86 = <invalid>
	fn00402B88(fn00403228(eax_81), Mem71[esp_86 + -4:word32])
	word32 eax_103 = Mem71[0x0042A710:word32]
	fn00404894(eax_103, 0x00427C90)
	word32 esp_109 = <invalid>
	word32 ecx_115 = fn00403228(eax_103)
	fn00402B88(ecx_115, Mem71[esp_109 + -4:word32])
	word32 ebp_129
	word32 edx_133
	word32 ecx_131 = fn00426AC8(ecx_115, Mem71[0x0042D3CC:word32], out edx_133, out ebp_129)
	word32 eax_141 = Mem71[0x00413940:word32]
	fn004036F0(eax_141, ecx_131, SEQ(SLICE(edx_133, word24, 8), 0x01), Mem71[esp_109 + -4:word32])
	Mem150[0x0042D3D0:word32] = eax_141
	Mem155[esp_109 - 4:word32] = ebp_129
	Mem157[esp_109 - 8:word32] = 0x00427C20
	Mem160[esp_109 - 12:word32] = Mem157[fs:0x00000000:word32]
	Mem161[fs:0x00000000:word32] = esp_109 - 12
	Mem163[esp_109 - 16:word32] = 0x00000000
	word32 ebp_168 = fn004264A0(0x00427CAC, 0x0000003F)
	word32 eax_179 = Mem163[0x0042D3D0:word32]
	word32 edx_180 = Mem163[eax_179:word32]
	word32 eax_182
	word32 esp_181
	call Mem163[edx_180 + 0x00000014:word32] (retsize: 4;)
		uses: eax:eax_179,edx:edx_180
		defs: eax:eax_182,esp:esp_181
	branch eax_182 < 0x00000001 l00427C08
l00427B33:
	word32 ebx_193 = 0x00000000
l00427B36:
	word32 esi_319
	word32 ebx_315
	Mem200[esp_181 - 4:word32] = ebp_168 - 0x00000028
	word32 eax_204 = Mem200[0x0042D3D0:word32]
	call Mem200[Mem200[eax_204:word32] + 0x0000000C:word32] (retsize: 4;)
		uses: eax:eax_204,ecx:ebp_196 - 0x00000038,edx:ebx_202
	fn0040803C(Mem200[ebp_168 - 0x00000038:word32], ebp_168 - 0x00000034)
	Mem226[ebp_168 - 0x00000030:word32] = Mem200[ebp_168 - 0x00000034:word32]
	Mem227[ebp_168 - 0x0000002C:byte] = 0x0B
	fn00408704()
	word32 eax_239 = Mem227[0x0042A710:word32]
	word32 ebx_240 = fn00404894(eax_239, Mem227[ebp_168 - 0x00000028:word32])
	word32 esp_244 = <invalid>
	fn00402B88(fn00403228(eax_239), Mem227[esp_244 + -4:word32])
	word32 eax_263 = Mem227[0x0042D3D0:word32]
	call Mem227[Mem227[eax_263:word32] + 0x0000000C:word32] (retsize: 4;)
		uses: eax:eax_263,ecx:ebp_196 - 0x00000044,edx:ebx_240
	fn004077C0(Mem227[ebp_168 - 0x00000040:word32], fn0040803C(Mem227[ebp_168 - 0x00000044:word32], ebp_168 - 0x00000040), ebp_168 - 0x0000003C)
	word32 ecx_431
	word32 edx_432
	branch fn0040464C(Mem227[ebp_168 - 0x0000003C:word32], 0x00427CDC, out ecx_431, out edx_432) l00427BDD
l00427BDD:
	word32 eax_302 = Mem227[0x0042D3D0:word32]
	call Mem227[Mem227[eax_302:word32] + 0x0000000C:word32] (retsize: 4;)
		uses: eax:eax_302,ecx:ebp_196 - 0x0000004C,edx:ebx_240
		defs: esp:esp_304
	ebx_315 = fn00426C30(Mem227[ebp_168 - 0x0000004C:word32], Mem227[0x0042D3CC:word32], Mem227[0x0042D3C8:word32], out ebp_168, out esi_319)
l00427BB8:
	word32 eax_328 = Mem227[0x0042D3D0:word32]
	call Mem227[Mem227[eax_328:word32] + 0x0000000C:word32] (retsize: 4;)
		uses: eax:eax_328,ecx:ebp_196 - 0x00000048,edx:ebx_240
		defs: esp:esp_330
	ebx_315 = fn004277A4(Mem227[ebp_168 - 0x00000048:word32], Mem227[0x0042D3CC:word32], Mem227[0x0042D3C8:word32], out ebp_168, out esi_319)
l00427C00:
	ebx_193 = ebx_315 + 0x00000001
	branch esi_319 != 0x00000001 l00427B36
l00427C08:
	Mem373[fs:0x00000000:word32] = dwLoc08
	word32 ecx_380
	return fn00403720(Mem375[0x0042D3D0:word32], out ecx_380)
Win32CrtStartup_exit:


